Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AS
    ASSERT
    ASYNC
    AWAIT
    CASE
    CATCH
    CLASS
    CONST
    COVARIANT
    DEFAULT
    DEFERRED
    DIVIDEINT
    DO
    DOUBLE
    DYNAMIC
    ENUM
    EXPORT
    EXPRESS
    EXTENDS
    EXTENSION
    EXTERNAL
    FACTORY
    FALSE
    FINAL
    FINALLY
    FUNCTION
    GET
    HIDE
    IMPLEMENTS
    IMPORT
    INTERFACE
    IS
    LIBRARY
    LIST
    MAP
    MIXIN
    NEW
    NULL
    NUM
    ON
    OPERATOR
    PART
    RETHROW
    SET
    SHOW
    STATIC
    SUPER
    SWITCH
    SYNC
    THIS
    THROW
    TRUE
    TRY
    TYPEDEF
    UNARY_BITWASE_COMPLEMENT
    WITH
    XOR
    YIELD

Grammar

Rule 0     S' -> topLevelDeclaration
Rule 1     topLevelDeclaration -> functionSignature body
Rule 2     topLevelDeclaration -> type initializedIdentifierList POINT_V
Rule 3     topLevelDeclaration -> functionSignature body topLevelDeclaration
Rule 4     topLevelDeclaration -> type initializedIdentifierList POINT_V topLevelDeclaration
Rule 5     initializedIdentifierList -> ID EQUAL expression p_initializedIdentifierList_estrela
Rule 6     p_initializedIdentifierList_estrela -> COMMA ID EQUAL expression
Rule 7     p_initializedIdentifierList_estrela -> COMMA ID EQUAL expression p_initializedIdentifierList_estrela
Rule 8     functionSignature -> type ID formalParameterPart
Rule 9     functionSignature -> ID formalParameterPart
Rule 10    type -> VOID
Rule 11    type -> STRING
Rule 12    type -> BOOL
Rule 13    type -> INT
Rule 14    type -> FLOAT
Rule 15    type -> VAR
Rule 16    formalParameterPart -> formalParameterList
Rule 17    formalParameterList -> OPEN_PARENTHESES CLOSE_PARENTHESES
Rule 18    formalParameterList -> OPEN_PARENTHESES normalFormalParameters COMMA CLOSE_PARENTHESES
Rule 19    formalParameterList -> OPEN_PARENTHESES normalFormalParameters CLOSE_PARENTHESES
Rule 20    normalFormalParameters -> normalFormalParameter p_normalFormalParameters_estrela
Rule 21    p_normalFormalParameters_estrela -> COMMA normalFormalParameter
Rule 22    p_normalFormalParameters_estrela -> COMMA normalFormalParameter p_normalFormalParameters_estrela
Rule 23    normalFormalParameter -> type ID
Rule 24    body -> OPEN_KEYS statements CLOSE_KEYS
Rule 25    body -> OPEN_KEYS CLOSE_KEYS
Rule 26    statements -> statements statement
Rule 27    statements -> statement
Rule 28    statement -> body
Rule 29    statement -> localVariableDeclaration
Rule 30    statement -> forStatement
Rule 31    statement -> whileStatement
Rule 32    statement -> ifStatement
Rule 33    statement -> breakStatement
Rule 34    statement -> continueStatement
Rule 35    statement -> returnStatement
Rule 36    statement -> expressionStatement
Rule 37    localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA
Rule 38    localVariableDeclaration -> type ID expression_one_equal POINT_COMMA
Rule 39    localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA
Rule 40    localVariableDeclaration -> type ID COMMA ID POINT_COMMA
Rule 41    expression_one_equal -> COMMA ID EQUAL expression
Rule 42    expression_one_equal -> COMMA ID
Rule 43    expression_one_equal -> COMMA ID EQUAL expression expression_one_equal
Rule 44    expression_one_equal -> COMMA ID expression_one_equal
Rule 45    forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement
Rule 46    forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body
Rule 47    forLoopparts -> localVariableDeclaration POINT_COMMA expression POINT_COMMA expressionList
Rule 48    forLoopparts -> localVariableDeclaration POINT_COMMA POINT_COMMA expressionList
Rule 49    forLoopparts -> localVariableDeclaration POINT_COMMA expression POINT_COMMA
Rule 50    forLoopparts -> localVariableDeclaration POINT_COMMA POINT_COMMA
Rule 51    forLoopparts -> expression POINT_COMMA expression POINT_COMMA expressionList
Rule 52    forLoopparts -> expression POINT_COMMA POINT_COMMA expressionList
Rule 53    forLoopparts -> expression POINT_COMMA expression POINT_COMMA
Rule 54    forLoopparts -> expression POINT_COMMA POINT_COMMA
Rule 55    forLoopParts -> type ID IN expression
Rule 56    forLoopParts -> ID IN expression
Rule 57    expressionList -> expression
Rule 58    expressionList -> expression COMMA expressionList
Rule 59    whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement
Rule 60    whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body
Rule 61    ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement
Rule 62    ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body
Rule 63    ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body
Rule 64    ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement
Rule 65    ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body
Rule 66    ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement
Rule 67    breakStatement -> BREAK POINT_COMMA
Rule 68    continueStatement -> CONTINUE POINT_COMMA
Rule 69    expressionStatement -> RETURN expression POINT_COMMA
Rule 70    expressionStatement -> RETURN POINT_COMMA
Rule 71    returnStatement -> expression POINT_COMMA
Rule 72    returnStatement -> POINT_COMMA
Rule 73    expression -> expression EQUAL expression_0
Rule 74    expression -> expression PLUS_EQUAL expression_0
Rule 75    expression -> expression MINUS_EQUAL expression_0
Rule 76    expression -> expression MULTIPLICATION_DIVISION expression_0
Rule 77    expression -> expression DIVIDE_EQUAL expression_0
Rule 78    expression -> expression_0
Rule 79    expression_0 -> expression_0 OR expression_1
Rule 80    expression_0 -> expression_1
Rule 81    expression_1 -> expression_1 AND expression_2
Rule 82    expression_1 -> expression_2
Rule 83    expression_2 -> expression_2 EQUAL_EQUAL expression_3
Rule 84    expression_2 -> expression_2 DIFFERENT expression_3
Rule 85    expression_2 -> expression_3
Rule 86    expression_3 -> expression_3 EQUAL_EQUAL expression_4
Rule 87    expression_3 -> expression_3 DIFFERENT expression_4
Rule 88    expression_3 -> expression_4
Rule 89    expression_4 -> expression_4 LESS_THAN expression_5
Rule 90    expression_4 -> expression_4 GREATER_THAN expression_5
Rule 91    expression_4 -> expression_4 LESS_THAN_OR_EQUAL_TO expression_5
Rule 92    expression_4 -> expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
Rule 93    expression_4 -> expression_5
Rule 94    expression_5 -> expression_5 LOGIC_OR expression_6
Rule 95    expression_5 -> expression_6
Rule 96    expression_6 -> expression_6 LOGIC_AND expression_7
Rule 97    expression_6 -> expression_7
Rule 98    expression_7 -> expression_7 SHIFT_LEFT expression_8
Rule 99    expression_7 -> expression_7 SHIFT_RIGHT expression_8
Rule 100   expression_7 -> expression_8
Rule 101   expression_8 -> expression_8 PLUS expression_9
Rule 102   expression_8 -> expression_8 MINUS expression_9
Rule 103   expression_8 -> expression_9
Rule 104   expression_9 -> expression_9 MULT expression_10
Rule 105   expression_9 -> expression_9 PERCENTAGE expression_10
Rule 106   expression_9 -> expression_9 DIVIDE expression_10
Rule 107   expression_9 -> expression_10
Rule 108   expression_10 -> MINUS expression_10
Rule 109   expression_10 -> PLUS_PLUS expression_10
Rule 110   expression_10 -> MINUS_MINUS expression_10
Rule 111   expression_10 -> INVERT expression_10
Rule 112   expression_10 -> expression_11
Rule 113   expression_11 -> expression_11 MINUS_MINUS
Rule 114   expression_11 -> expression_11 PLUS_PLUS
Rule 115   expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
Rule 116   expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES
Rule 117   expression_11 -> expression_12
Rule 118   expression_12 -> ID
Rule 119   expression_12 -> STRING_LITERAL
Rule 120   expression_12 -> NUMBER
Rule 121   expression_12 -> BOOL
Rule 122   expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 81
AS                   : 
ASSERT               : 
ASYNC                : 
AWAIT                : 
BOOL                 : 12 121
BREAK                : 67
CASE                 : 
CATCH                : 
CLASS                : 
CLOSE_CONCHETE       : 115
CLOSE_KEYS           : 24 25
CLOSE_PARENTHESES    : 17 18 19 45 46 59 60 61 62 63 64 65 66 116 122
COMMA                : 6 7 18 21 22 39 40 41 42 43 44 58
CONST                : 
CONTINUE             : 68
COVARIANT            : 
DEFAULT              : 
DEFERRED             : 
DIFFERENT            : 84 87
DIVIDE               : 106
DIVIDEINT            : 
DIVIDE_EQUAL         : 77
DO                   : 
DOUBLE               : 
DYNAMIC              : 
ELSE                 : 61 62 63 66
ENUM                 : 
EQUAL                : 5 6 7 37 39 41 43 73
EQUAL_EQUAL          : 83 86
EXPORT               : 
EXPRESS              : 
EXTENDS              : 
EXTENSION            : 
EXTERNAL             : 
FACTORY              : 
FALSE                : 
FINAL                : 
FINALLY              : 
FLOAT                : 14
FOR                  : 45 46
FUNCTION             : 
GET                  : 
GREATER_THAN         : 90
GREATER_THAN_OR_EQUAL_TO : 92
HIDE                 : 
ID                   : 5 6 7 8 9 23 37 38 39 39 40 40 41 42 43 44 55 56 118 122
IF                   : 61 62 63 64 65 66
IMPLEMENTS           : 
IMPORT               : 
IN                   : 55 56
INT                  : 13
INTERFACE            : 
INVERT               : 111
IS                   : 
LESS_THAN            : 89
LESS_THAN_OR_EQUAL_TO : 91
LIBRARY              : 
LIST                 : 
LOGIC_AND            : 96
LOGIC_OR             : 94
MAP                  : 
MINUS                : 102 108
MINUS_EQUAL          : 75
MINUS_MINUS          : 110 113
MIXIN                : 
MULT                 : 104
MULTIPLICATION_DIVISION : 76
NEW                  : 
NULL                 : 
NUM                  : 
NUMBER               : 120
ON                   : 
OPEN_CONCHETE        : 115
OPEN_KEYS            : 24 25
OPEN_PARENTHESES     : 17 18 19 45 46 59 60 61 62 63 64 65 66 116 122
OPERATOR             : 
OR                   : 79
PART                 : 
PERCENTAGE           : 105
PLUS                 : 101
PLUS_EQUAL           : 74
PLUS_PLUS            : 109 114
POINT_COMMA          : 37 38 39 40 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 54 67 68 69 70 71 72
POINT_V              : 2 4
RETHROW              : 
RETURN               : 69 70
SET                  : 
SHIFT_LEFT           : 98
SHIFT_RIGHT          : 99
SHOW                 : 
STATIC               : 
STRING               : 11
STRING_LITERAL       : 119
SUPER                : 
SWITCH               : 
SYNC                 : 
THIS                 : 
THROW                : 
TRUE                 : 
TRY                  : 
TYPEDEF              : 
UNARY_BITWASE_COMPLEMENT : 
VAR                  : 15
VOID                 : 10
WHILE                : 59 60
WITH                 : 
XOR                  : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

body                 : 1 3 28 46 60 62 62 63 65 66
breakStatement       : 33
continueStatement    : 34
expression           : 5 6 7 37 39 41 43 47 49 51 51 52 53 53 54 55 56 57 58 59 60 61 62 63 64 65 66 69 71 73 74 75 76 77 116
expressionList       : 47 48 51 52 58
expressionStatement  : 36
expression_0         : 73 74 75 76 77 78 79
expression_1         : 79 80 81
expression_10        : 104 105 106 107 108 109 110 111
expression_11        : 112 113 114 115 115
expression_12        : 117
expression_2         : 81 82 83 84
expression_3         : 83 84 85 86 87
expression_4         : 86 87 88 89 90 91 92
expression_5         : 89 90 91 92 93 94
expression_6         : 94 95 96
expression_7         : 96 97 98 99
expression_8         : 98 99 100 101 102
expression_9         : 101 102 103 104 105 106
expression_one_equal : 37 38 43 44
forLoopParts         : 45 46
forLoopparts         : 
forStatement         : 30
formalParameterList  : 16
formalParameterPart  : 8 9
functionSignature    : 1 3
ifStatement          : 32
initializedIdentifierList : 2 4
localVariableDeclaration : 29 47 48 49 50
normalFormalParameter : 20 21 22 122
normalFormalParameters : 18 19
p_initializedIdentifierList_estrela : 5 7
p_normalFormalParameters_estrela : 20 22
returnStatement      : 35
statement            : 26 27 45 59 61 61 63 64 66
statements           : 24 26
topLevelDeclaration  : 3 4 0
type                 : 2 4 8 23 37 38 39 40 55
whileStatement       : 31

Parsing method: LALR

state 0

    (0) S' -> . topLevelDeclaration
    (1) topLevelDeclaration -> . functionSignature body
    (2) topLevelDeclaration -> . type initializedIdentifierList POINT_V
    (3) topLevelDeclaration -> . functionSignature body topLevelDeclaration
    (4) topLevelDeclaration -> . type initializedIdentifierList POINT_V topLevelDeclaration
    (8) functionSignature -> . type ID formalParameterPart
    (9) functionSignature -> . ID formalParameterPart
    (10) type -> . VOID
    (11) type -> . STRING
    (12) type -> . BOOL
    (13) type -> . INT
    (14) type -> . FLOAT
    (15) type -> . VAR

    ID              shift and go to state 4
    VOID            shift and go to state 5
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    VAR             shift and go to state 10

    topLevelDeclaration            shift and go to state 1
    functionSignature              shift and go to state 2
    type                           shift and go to state 3

state 1

    (0) S' -> topLevelDeclaration .



state 2

    (1) topLevelDeclaration -> functionSignature . body
    (3) topLevelDeclaration -> functionSignature . body topLevelDeclaration
    (24) body -> . OPEN_KEYS statements CLOSE_KEYS
    (25) body -> . OPEN_KEYS CLOSE_KEYS

    OPEN_KEYS       shift and go to state 12

    body                           shift and go to state 11

state 3

    (2) topLevelDeclaration -> type . initializedIdentifierList POINT_V
    (4) topLevelDeclaration -> type . initializedIdentifierList POINT_V topLevelDeclaration
    (8) functionSignature -> type . ID formalParameterPart
    (5) initializedIdentifierList -> . ID EQUAL expression p_initializedIdentifierList_estrela

    ID              shift and go to state 14

    initializedIdentifierList      shift and go to state 13

state 4

    (9) functionSignature -> ID . formalParameterPart
    (16) formalParameterPart -> . formalParameterList
    (17) formalParameterList -> . OPEN_PARENTHESES CLOSE_PARENTHESES
    (18) formalParameterList -> . OPEN_PARENTHESES normalFormalParameters COMMA CLOSE_PARENTHESES
    (19) formalParameterList -> . OPEN_PARENTHESES normalFormalParameters CLOSE_PARENTHESES

    OPEN_PARENTHESES shift and go to state 17

    formalParameterPart            shift and go to state 15
    formalParameterList            shift and go to state 16

state 5

    (10) type -> VOID .

    ID              reduce using rule 10 (type -> VOID .)


state 6

    (11) type -> STRING .

    ID              reduce using rule 11 (type -> STRING .)


state 7

    (12) type -> BOOL .

    ID              reduce using rule 12 (type -> BOOL .)


state 8

    (13) type -> INT .

    ID              reduce using rule 13 (type -> INT .)


state 9

    (14) type -> FLOAT .

    ID              reduce using rule 14 (type -> FLOAT .)


state 10

    (15) type -> VAR .

    ID              reduce using rule 15 (type -> VAR .)


state 11

    (1) topLevelDeclaration -> functionSignature body .
    (3) topLevelDeclaration -> functionSignature body . topLevelDeclaration
    (1) topLevelDeclaration -> . functionSignature body
    (2) topLevelDeclaration -> . type initializedIdentifierList POINT_V
    (3) topLevelDeclaration -> . functionSignature body topLevelDeclaration
    (4) topLevelDeclaration -> . type initializedIdentifierList POINT_V topLevelDeclaration
    (8) functionSignature -> . type ID formalParameterPart
    (9) functionSignature -> . ID formalParameterPart
    (10) type -> . VOID
    (11) type -> . STRING
    (12) type -> . BOOL
    (13) type -> . INT
    (14) type -> . FLOAT
    (15) type -> . VAR

    $end            reduce using rule 1 (topLevelDeclaration -> functionSignature body .)
    ID              shift and go to state 4
    VOID            shift and go to state 5
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    VAR             shift and go to state 10

    functionSignature              shift and go to state 2
    topLevelDeclaration            shift and go to state 18
    type                           shift and go to state 3

state 12

    (24) body -> OPEN_KEYS . statements CLOSE_KEYS
    (25) body -> OPEN_KEYS . CLOSE_KEYS
    (26) statements -> . statements statement
    (27) statements -> . statement
    (28) statement -> . body
    (29) statement -> . localVariableDeclaration
    (30) statement -> . forStatement
    (31) statement -> . whileStatement
    (32) statement -> . ifStatement
    (33) statement -> . breakStatement
    (34) statement -> . continueStatement
    (35) statement -> . returnStatement
    (36) statement -> . expressionStatement
    (24) body -> . OPEN_KEYS statements CLOSE_KEYS
    (25) body -> . OPEN_KEYS CLOSE_KEYS
    (37) localVariableDeclaration -> . type ID EQUAL expression expression_one_equal POINT_COMMA
    (38) localVariableDeclaration -> . type ID expression_one_equal POINT_COMMA
    (39) localVariableDeclaration -> . type ID EQUAL expression COMMA ID POINT_COMMA
    (40) localVariableDeclaration -> . type ID COMMA ID POINT_COMMA
    (45) forStatement -> . FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement
    (46) forStatement -> . FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body
    (59) whileStatement -> . WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement
    (60) whileStatement -> . WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body
    (61) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement
    (62) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body
    (63) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body
    (64) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement
    (65) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body
    (66) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement
    (67) breakStatement -> . BREAK POINT_COMMA
    (68) continueStatement -> . CONTINUE POINT_COMMA
    (71) returnStatement -> . expression POINT_COMMA
    (72) returnStatement -> . POINT_COMMA
    (69) expressionStatement -> . RETURN expression POINT_COMMA
    (70) expressionStatement -> . RETURN POINT_COMMA
    (10) type -> . VOID
    (11) type -> . STRING
    (12) type -> . BOOL
    (13) type -> . INT
    (14) type -> . FLOAT
    (15) type -> . VAR
    (73) expression -> . expression EQUAL expression_0
    (74) expression -> . expression PLUS_EQUAL expression_0
    (75) expression -> . expression MINUS_EQUAL expression_0
    (76) expression -> . expression MULTIPLICATION_DIVISION expression_0
    (77) expression -> . expression DIVIDE_EQUAL expression_0
    (78) expression -> . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    CLOSE_KEYS      shift and go to state 20
    OPEN_KEYS       shift and go to state 12
    FOR             shift and go to state 35
    WHILE           shift and go to state 37
    IF              shift and go to state 38
    BREAK           shift and go to state 39
    CONTINUE        shift and go to state 40
    POINT_COMMA     shift and go to state 34
    RETURN          shift and go to state 41
    VOID            shift and go to state 5
    STRING          shift and go to state 6
    BOOL            shift and go to state 42
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    VAR             shift and go to state 10
    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61

    statements                     shift and go to state 19
    statement                      shift and go to state 21
    body                           shift and go to state 22
    localVariableDeclaration       shift and go to state 23
    forStatement                   shift and go to state 24
    whileStatement                 shift and go to state 25
    ifStatement                    shift and go to state 26
    breakStatement                 shift and go to state 27
    continueStatement              shift and go to state 28
    returnStatement                shift and go to state 29
    expressionStatement            shift and go to state 30
    type                           shift and go to state 31
    expression                     shift and go to state 33
    expression_0                   shift and go to state 43
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 13

    (2) topLevelDeclaration -> type initializedIdentifierList . POINT_V
    (4) topLevelDeclaration -> type initializedIdentifierList . POINT_V topLevelDeclaration

    POINT_V         shift and go to state 62


state 14

    (8) functionSignature -> type ID . formalParameterPart
    (5) initializedIdentifierList -> ID . EQUAL expression p_initializedIdentifierList_estrela
    (16) formalParameterPart -> . formalParameterList
    (17) formalParameterList -> . OPEN_PARENTHESES CLOSE_PARENTHESES
    (18) formalParameterList -> . OPEN_PARENTHESES normalFormalParameters COMMA CLOSE_PARENTHESES
    (19) formalParameterList -> . OPEN_PARENTHESES normalFormalParameters CLOSE_PARENTHESES

    EQUAL           shift and go to state 64
    OPEN_PARENTHESES shift and go to state 17

    formalParameterPart            shift and go to state 63
    formalParameterList            shift and go to state 16

state 15

    (9) functionSignature -> ID formalParameterPart .

    OPEN_KEYS       reduce using rule 9 (functionSignature -> ID formalParameterPart .)


state 16

    (16) formalParameterPart -> formalParameterList .

    OPEN_KEYS       reduce using rule 16 (formalParameterPart -> formalParameterList .)


state 17

    (17) formalParameterList -> OPEN_PARENTHESES . CLOSE_PARENTHESES
    (18) formalParameterList -> OPEN_PARENTHESES . normalFormalParameters COMMA CLOSE_PARENTHESES
    (19) formalParameterList -> OPEN_PARENTHESES . normalFormalParameters CLOSE_PARENTHESES
    (20) normalFormalParameters -> . normalFormalParameter p_normalFormalParameters_estrela
    (23) normalFormalParameter -> . type ID
    (10) type -> . VOID
    (11) type -> . STRING
    (12) type -> . BOOL
    (13) type -> . INT
    (14) type -> . FLOAT
    (15) type -> . VAR

    CLOSE_PARENTHESES shift and go to state 65
    VOID            shift and go to state 5
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    VAR             shift and go to state 10

    normalFormalParameters         shift and go to state 66
    normalFormalParameter          shift and go to state 67
    type                           shift and go to state 68

state 18

    (3) topLevelDeclaration -> functionSignature body topLevelDeclaration .

    $end            reduce using rule 3 (topLevelDeclaration -> functionSignature body topLevelDeclaration .)


state 19

    (24) body -> OPEN_KEYS statements . CLOSE_KEYS
    (26) statements -> statements . statement
    (28) statement -> . body
    (29) statement -> . localVariableDeclaration
    (30) statement -> . forStatement
    (31) statement -> . whileStatement
    (32) statement -> . ifStatement
    (33) statement -> . breakStatement
    (34) statement -> . continueStatement
    (35) statement -> . returnStatement
    (36) statement -> . expressionStatement
    (24) body -> . OPEN_KEYS statements CLOSE_KEYS
    (25) body -> . OPEN_KEYS CLOSE_KEYS
    (37) localVariableDeclaration -> . type ID EQUAL expression expression_one_equal POINT_COMMA
    (38) localVariableDeclaration -> . type ID expression_one_equal POINT_COMMA
    (39) localVariableDeclaration -> . type ID EQUAL expression COMMA ID POINT_COMMA
    (40) localVariableDeclaration -> . type ID COMMA ID POINT_COMMA
    (45) forStatement -> . FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement
    (46) forStatement -> . FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body
    (59) whileStatement -> . WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement
    (60) whileStatement -> . WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body
    (61) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement
    (62) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body
    (63) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body
    (64) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement
    (65) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body
    (66) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement
    (67) breakStatement -> . BREAK POINT_COMMA
    (68) continueStatement -> . CONTINUE POINT_COMMA
    (71) returnStatement -> . expression POINT_COMMA
    (72) returnStatement -> . POINT_COMMA
    (69) expressionStatement -> . RETURN expression POINT_COMMA
    (70) expressionStatement -> . RETURN POINT_COMMA
    (10) type -> . VOID
    (11) type -> . STRING
    (12) type -> . BOOL
    (13) type -> . INT
    (14) type -> . FLOAT
    (15) type -> . VAR
    (73) expression -> . expression EQUAL expression_0
    (74) expression -> . expression PLUS_EQUAL expression_0
    (75) expression -> . expression MINUS_EQUAL expression_0
    (76) expression -> . expression MULTIPLICATION_DIVISION expression_0
    (77) expression -> . expression DIVIDE_EQUAL expression_0
    (78) expression -> . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    CLOSE_KEYS      shift and go to state 69
    OPEN_KEYS       shift and go to state 12
    FOR             shift and go to state 35
    WHILE           shift and go to state 37
    IF              shift and go to state 38
    BREAK           shift and go to state 39
    CONTINUE        shift and go to state 40
    POINT_COMMA     shift and go to state 34
    RETURN          shift and go to state 41
    VOID            shift and go to state 5
    STRING          shift and go to state 6
    BOOL            shift and go to state 42
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    VAR             shift and go to state 10
    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61

    statement                      shift and go to state 70
    body                           shift and go to state 22
    localVariableDeclaration       shift and go to state 23
    forStatement                   shift and go to state 24
    whileStatement                 shift and go to state 25
    ifStatement                    shift and go to state 26
    breakStatement                 shift and go to state 27
    continueStatement              shift and go to state 28
    returnStatement                shift and go to state 29
    expressionStatement            shift and go to state 30
    type                           shift and go to state 31
    expression                     shift and go to state 33
    expression_0                   shift and go to state 43
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 20

    (25) body -> OPEN_KEYS CLOSE_KEYS .

    ID              reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    VOID            reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    STRING          reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    BOOL            reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    INT             reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    FLOAT           reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    VAR             reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    $end            reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    CLOSE_KEYS      reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    OPEN_KEYS       reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    FOR             reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    WHILE           reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    IF              reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    BREAK           reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    CONTINUE        reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    POINT_COMMA     reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    RETURN          reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    MINUS           reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    PLUS_PLUS       reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    MINUS_MINUS     reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    INVERT          reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    OPEN_PARENTHESES reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    STRING_LITERAL  reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    NUMBER          reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)
    ELSE            reduce using rule 25 (body -> OPEN_KEYS CLOSE_KEYS .)


state 21

    (27) statements -> statement .

    CLOSE_KEYS      reduce using rule 27 (statements -> statement .)
    OPEN_KEYS       reduce using rule 27 (statements -> statement .)
    FOR             reduce using rule 27 (statements -> statement .)
    WHILE           reduce using rule 27 (statements -> statement .)
    IF              reduce using rule 27 (statements -> statement .)
    BREAK           reduce using rule 27 (statements -> statement .)
    CONTINUE        reduce using rule 27 (statements -> statement .)
    POINT_COMMA     reduce using rule 27 (statements -> statement .)
    RETURN          reduce using rule 27 (statements -> statement .)
    VOID            reduce using rule 27 (statements -> statement .)
    STRING          reduce using rule 27 (statements -> statement .)
    BOOL            reduce using rule 27 (statements -> statement .)
    INT             reduce using rule 27 (statements -> statement .)
    FLOAT           reduce using rule 27 (statements -> statement .)
    VAR             reduce using rule 27 (statements -> statement .)
    MINUS           reduce using rule 27 (statements -> statement .)
    PLUS_PLUS       reduce using rule 27 (statements -> statement .)
    MINUS_MINUS     reduce using rule 27 (statements -> statement .)
    INVERT          reduce using rule 27 (statements -> statement .)
    OPEN_PARENTHESES reduce using rule 27 (statements -> statement .)
    ID              reduce using rule 27 (statements -> statement .)
    STRING_LITERAL  reduce using rule 27 (statements -> statement .)
    NUMBER          reduce using rule 27 (statements -> statement .)


state 22

    (28) statement -> body .

    CLOSE_KEYS      reduce using rule 28 (statement -> body .)
    OPEN_KEYS       reduce using rule 28 (statement -> body .)
    FOR             reduce using rule 28 (statement -> body .)
    WHILE           reduce using rule 28 (statement -> body .)
    IF              reduce using rule 28 (statement -> body .)
    BREAK           reduce using rule 28 (statement -> body .)
    CONTINUE        reduce using rule 28 (statement -> body .)
    POINT_COMMA     reduce using rule 28 (statement -> body .)
    RETURN          reduce using rule 28 (statement -> body .)
    VOID            reduce using rule 28 (statement -> body .)
    STRING          reduce using rule 28 (statement -> body .)
    BOOL            reduce using rule 28 (statement -> body .)
    INT             reduce using rule 28 (statement -> body .)
    FLOAT           reduce using rule 28 (statement -> body .)
    VAR             reduce using rule 28 (statement -> body .)
    MINUS           reduce using rule 28 (statement -> body .)
    PLUS_PLUS       reduce using rule 28 (statement -> body .)
    MINUS_MINUS     reduce using rule 28 (statement -> body .)
    INVERT          reduce using rule 28 (statement -> body .)
    OPEN_PARENTHESES reduce using rule 28 (statement -> body .)
    ID              reduce using rule 28 (statement -> body .)
    STRING_LITERAL  reduce using rule 28 (statement -> body .)
    NUMBER          reduce using rule 28 (statement -> body .)


state 23

    (29) statement -> localVariableDeclaration .

    CLOSE_KEYS      reduce using rule 29 (statement -> localVariableDeclaration .)
    OPEN_KEYS       reduce using rule 29 (statement -> localVariableDeclaration .)
    FOR             reduce using rule 29 (statement -> localVariableDeclaration .)
    WHILE           reduce using rule 29 (statement -> localVariableDeclaration .)
    IF              reduce using rule 29 (statement -> localVariableDeclaration .)
    BREAK           reduce using rule 29 (statement -> localVariableDeclaration .)
    CONTINUE        reduce using rule 29 (statement -> localVariableDeclaration .)
    POINT_COMMA     reduce using rule 29 (statement -> localVariableDeclaration .)
    RETURN          reduce using rule 29 (statement -> localVariableDeclaration .)
    VOID            reduce using rule 29 (statement -> localVariableDeclaration .)
    STRING          reduce using rule 29 (statement -> localVariableDeclaration .)
    BOOL            reduce using rule 29 (statement -> localVariableDeclaration .)
    INT             reduce using rule 29 (statement -> localVariableDeclaration .)
    FLOAT           reduce using rule 29 (statement -> localVariableDeclaration .)
    VAR             reduce using rule 29 (statement -> localVariableDeclaration .)
    MINUS           reduce using rule 29 (statement -> localVariableDeclaration .)
    PLUS_PLUS       reduce using rule 29 (statement -> localVariableDeclaration .)
    MINUS_MINUS     reduce using rule 29 (statement -> localVariableDeclaration .)
    INVERT          reduce using rule 29 (statement -> localVariableDeclaration .)
    OPEN_PARENTHESES reduce using rule 29 (statement -> localVariableDeclaration .)
    ID              reduce using rule 29 (statement -> localVariableDeclaration .)
    STRING_LITERAL  reduce using rule 29 (statement -> localVariableDeclaration .)
    NUMBER          reduce using rule 29 (statement -> localVariableDeclaration .)
    ELSE            reduce using rule 29 (statement -> localVariableDeclaration .)


state 24

    (30) statement -> forStatement .

    CLOSE_KEYS      reduce using rule 30 (statement -> forStatement .)
    OPEN_KEYS       reduce using rule 30 (statement -> forStatement .)
    FOR             reduce using rule 30 (statement -> forStatement .)
    WHILE           reduce using rule 30 (statement -> forStatement .)
    IF              reduce using rule 30 (statement -> forStatement .)
    BREAK           reduce using rule 30 (statement -> forStatement .)
    CONTINUE        reduce using rule 30 (statement -> forStatement .)
    POINT_COMMA     reduce using rule 30 (statement -> forStatement .)
    RETURN          reduce using rule 30 (statement -> forStatement .)
    VOID            reduce using rule 30 (statement -> forStatement .)
    STRING          reduce using rule 30 (statement -> forStatement .)
    BOOL            reduce using rule 30 (statement -> forStatement .)
    INT             reduce using rule 30 (statement -> forStatement .)
    FLOAT           reduce using rule 30 (statement -> forStatement .)
    VAR             reduce using rule 30 (statement -> forStatement .)
    MINUS           reduce using rule 30 (statement -> forStatement .)
    PLUS_PLUS       reduce using rule 30 (statement -> forStatement .)
    MINUS_MINUS     reduce using rule 30 (statement -> forStatement .)
    INVERT          reduce using rule 30 (statement -> forStatement .)
    OPEN_PARENTHESES reduce using rule 30 (statement -> forStatement .)
    ID              reduce using rule 30 (statement -> forStatement .)
    STRING_LITERAL  reduce using rule 30 (statement -> forStatement .)
    NUMBER          reduce using rule 30 (statement -> forStatement .)
    ELSE            reduce using rule 30 (statement -> forStatement .)


state 25

    (31) statement -> whileStatement .

    CLOSE_KEYS      reduce using rule 31 (statement -> whileStatement .)
    OPEN_KEYS       reduce using rule 31 (statement -> whileStatement .)
    FOR             reduce using rule 31 (statement -> whileStatement .)
    WHILE           reduce using rule 31 (statement -> whileStatement .)
    IF              reduce using rule 31 (statement -> whileStatement .)
    BREAK           reduce using rule 31 (statement -> whileStatement .)
    CONTINUE        reduce using rule 31 (statement -> whileStatement .)
    POINT_COMMA     reduce using rule 31 (statement -> whileStatement .)
    RETURN          reduce using rule 31 (statement -> whileStatement .)
    VOID            reduce using rule 31 (statement -> whileStatement .)
    STRING          reduce using rule 31 (statement -> whileStatement .)
    BOOL            reduce using rule 31 (statement -> whileStatement .)
    INT             reduce using rule 31 (statement -> whileStatement .)
    FLOAT           reduce using rule 31 (statement -> whileStatement .)
    VAR             reduce using rule 31 (statement -> whileStatement .)
    MINUS           reduce using rule 31 (statement -> whileStatement .)
    PLUS_PLUS       reduce using rule 31 (statement -> whileStatement .)
    MINUS_MINUS     reduce using rule 31 (statement -> whileStatement .)
    INVERT          reduce using rule 31 (statement -> whileStatement .)
    OPEN_PARENTHESES reduce using rule 31 (statement -> whileStatement .)
    ID              reduce using rule 31 (statement -> whileStatement .)
    STRING_LITERAL  reduce using rule 31 (statement -> whileStatement .)
    NUMBER          reduce using rule 31 (statement -> whileStatement .)
    ELSE            reduce using rule 31 (statement -> whileStatement .)


state 26

    (32) statement -> ifStatement .

    CLOSE_KEYS      reduce using rule 32 (statement -> ifStatement .)
    OPEN_KEYS       reduce using rule 32 (statement -> ifStatement .)
    FOR             reduce using rule 32 (statement -> ifStatement .)
    WHILE           reduce using rule 32 (statement -> ifStatement .)
    IF              reduce using rule 32 (statement -> ifStatement .)
    BREAK           reduce using rule 32 (statement -> ifStatement .)
    CONTINUE        reduce using rule 32 (statement -> ifStatement .)
    POINT_COMMA     reduce using rule 32 (statement -> ifStatement .)
    RETURN          reduce using rule 32 (statement -> ifStatement .)
    VOID            reduce using rule 32 (statement -> ifStatement .)
    STRING          reduce using rule 32 (statement -> ifStatement .)
    BOOL            reduce using rule 32 (statement -> ifStatement .)
    INT             reduce using rule 32 (statement -> ifStatement .)
    FLOAT           reduce using rule 32 (statement -> ifStatement .)
    VAR             reduce using rule 32 (statement -> ifStatement .)
    MINUS           reduce using rule 32 (statement -> ifStatement .)
    PLUS_PLUS       reduce using rule 32 (statement -> ifStatement .)
    MINUS_MINUS     reduce using rule 32 (statement -> ifStatement .)
    INVERT          reduce using rule 32 (statement -> ifStatement .)
    OPEN_PARENTHESES reduce using rule 32 (statement -> ifStatement .)
    ID              reduce using rule 32 (statement -> ifStatement .)
    STRING_LITERAL  reduce using rule 32 (statement -> ifStatement .)
    NUMBER          reduce using rule 32 (statement -> ifStatement .)
    ELSE            reduce using rule 32 (statement -> ifStatement .)


state 27

    (33) statement -> breakStatement .

    CLOSE_KEYS      reduce using rule 33 (statement -> breakStatement .)
    OPEN_KEYS       reduce using rule 33 (statement -> breakStatement .)
    FOR             reduce using rule 33 (statement -> breakStatement .)
    WHILE           reduce using rule 33 (statement -> breakStatement .)
    IF              reduce using rule 33 (statement -> breakStatement .)
    BREAK           reduce using rule 33 (statement -> breakStatement .)
    CONTINUE        reduce using rule 33 (statement -> breakStatement .)
    POINT_COMMA     reduce using rule 33 (statement -> breakStatement .)
    RETURN          reduce using rule 33 (statement -> breakStatement .)
    VOID            reduce using rule 33 (statement -> breakStatement .)
    STRING          reduce using rule 33 (statement -> breakStatement .)
    BOOL            reduce using rule 33 (statement -> breakStatement .)
    INT             reduce using rule 33 (statement -> breakStatement .)
    FLOAT           reduce using rule 33 (statement -> breakStatement .)
    VAR             reduce using rule 33 (statement -> breakStatement .)
    MINUS           reduce using rule 33 (statement -> breakStatement .)
    PLUS_PLUS       reduce using rule 33 (statement -> breakStatement .)
    MINUS_MINUS     reduce using rule 33 (statement -> breakStatement .)
    INVERT          reduce using rule 33 (statement -> breakStatement .)
    OPEN_PARENTHESES reduce using rule 33 (statement -> breakStatement .)
    ID              reduce using rule 33 (statement -> breakStatement .)
    STRING_LITERAL  reduce using rule 33 (statement -> breakStatement .)
    NUMBER          reduce using rule 33 (statement -> breakStatement .)
    ELSE            reduce using rule 33 (statement -> breakStatement .)


state 28

    (34) statement -> continueStatement .

    CLOSE_KEYS      reduce using rule 34 (statement -> continueStatement .)
    OPEN_KEYS       reduce using rule 34 (statement -> continueStatement .)
    FOR             reduce using rule 34 (statement -> continueStatement .)
    WHILE           reduce using rule 34 (statement -> continueStatement .)
    IF              reduce using rule 34 (statement -> continueStatement .)
    BREAK           reduce using rule 34 (statement -> continueStatement .)
    CONTINUE        reduce using rule 34 (statement -> continueStatement .)
    POINT_COMMA     reduce using rule 34 (statement -> continueStatement .)
    RETURN          reduce using rule 34 (statement -> continueStatement .)
    VOID            reduce using rule 34 (statement -> continueStatement .)
    STRING          reduce using rule 34 (statement -> continueStatement .)
    BOOL            reduce using rule 34 (statement -> continueStatement .)
    INT             reduce using rule 34 (statement -> continueStatement .)
    FLOAT           reduce using rule 34 (statement -> continueStatement .)
    VAR             reduce using rule 34 (statement -> continueStatement .)
    MINUS           reduce using rule 34 (statement -> continueStatement .)
    PLUS_PLUS       reduce using rule 34 (statement -> continueStatement .)
    MINUS_MINUS     reduce using rule 34 (statement -> continueStatement .)
    INVERT          reduce using rule 34 (statement -> continueStatement .)
    OPEN_PARENTHESES reduce using rule 34 (statement -> continueStatement .)
    ID              reduce using rule 34 (statement -> continueStatement .)
    STRING_LITERAL  reduce using rule 34 (statement -> continueStatement .)
    NUMBER          reduce using rule 34 (statement -> continueStatement .)
    ELSE            reduce using rule 34 (statement -> continueStatement .)


state 29

    (35) statement -> returnStatement .

    CLOSE_KEYS      reduce using rule 35 (statement -> returnStatement .)
    OPEN_KEYS       reduce using rule 35 (statement -> returnStatement .)
    FOR             reduce using rule 35 (statement -> returnStatement .)
    WHILE           reduce using rule 35 (statement -> returnStatement .)
    IF              reduce using rule 35 (statement -> returnStatement .)
    BREAK           reduce using rule 35 (statement -> returnStatement .)
    CONTINUE        reduce using rule 35 (statement -> returnStatement .)
    POINT_COMMA     reduce using rule 35 (statement -> returnStatement .)
    RETURN          reduce using rule 35 (statement -> returnStatement .)
    VOID            reduce using rule 35 (statement -> returnStatement .)
    STRING          reduce using rule 35 (statement -> returnStatement .)
    BOOL            reduce using rule 35 (statement -> returnStatement .)
    INT             reduce using rule 35 (statement -> returnStatement .)
    FLOAT           reduce using rule 35 (statement -> returnStatement .)
    VAR             reduce using rule 35 (statement -> returnStatement .)
    MINUS           reduce using rule 35 (statement -> returnStatement .)
    PLUS_PLUS       reduce using rule 35 (statement -> returnStatement .)
    MINUS_MINUS     reduce using rule 35 (statement -> returnStatement .)
    INVERT          reduce using rule 35 (statement -> returnStatement .)
    OPEN_PARENTHESES reduce using rule 35 (statement -> returnStatement .)
    ID              reduce using rule 35 (statement -> returnStatement .)
    STRING_LITERAL  reduce using rule 35 (statement -> returnStatement .)
    NUMBER          reduce using rule 35 (statement -> returnStatement .)
    ELSE            reduce using rule 35 (statement -> returnStatement .)


state 30

    (36) statement -> expressionStatement .

    CLOSE_KEYS      reduce using rule 36 (statement -> expressionStatement .)
    OPEN_KEYS       reduce using rule 36 (statement -> expressionStatement .)
    FOR             reduce using rule 36 (statement -> expressionStatement .)
    WHILE           reduce using rule 36 (statement -> expressionStatement .)
    IF              reduce using rule 36 (statement -> expressionStatement .)
    BREAK           reduce using rule 36 (statement -> expressionStatement .)
    CONTINUE        reduce using rule 36 (statement -> expressionStatement .)
    POINT_COMMA     reduce using rule 36 (statement -> expressionStatement .)
    RETURN          reduce using rule 36 (statement -> expressionStatement .)
    VOID            reduce using rule 36 (statement -> expressionStatement .)
    STRING          reduce using rule 36 (statement -> expressionStatement .)
    BOOL            reduce using rule 36 (statement -> expressionStatement .)
    INT             reduce using rule 36 (statement -> expressionStatement .)
    FLOAT           reduce using rule 36 (statement -> expressionStatement .)
    VAR             reduce using rule 36 (statement -> expressionStatement .)
    MINUS           reduce using rule 36 (statement -> expressionStatement .)
    PLUS_PLUS       reduce using rule 36 (statement -> expressionStatement .)
    MINUS_MINUS     reduce using rule 36 (statement -> expressionStatement .)
    INVERT          reduce using rule 36 (statement -> expressionStatement .)
    OPEN_PARENTHESES reduce using rule 36 (statement -> expressionStatement .)
    ID              reduce using rule 36 (statement -> expressionStatement .)
    STRING_LITERAL  reduce using rule 36 (statement -> expressionStatement .)
    NUMBER          reduce using rule 36 (statement -> expressionStatement .)
    ELSE            reduce using rule 36 (statement -> expressionStatement .)


state 31

    (37) localVariableDeclaration -> type . ID EQUAL expression expression_one_equal POINT_COMMA
    (38) localVariableDeclaration -> type . ID expression_one_equal POINT_COMMA
    (39) localVariableDeclaration -> type . ID EQUAL expression COMMA ID POINT_COMMA
    (40) localVariableDeclaration -> type . ID COMMA ID POINT_COMMA

    ID              shift and go to state 71


state 32

    (118) expression_12 -> ID .
    (122) expression_12 -> ID . OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS_MINUS     reduce using rule 118 (expression_12 -> ID .)
    PLUS_PLUS       reduce using rule 118 (expression_12 -> ID .)
    OPEN_CONCHETE   reduce using rule 118 (expression_12 -> ID .)
    MULT            reduce using rule 118 (expression_12 -> ID .)
    PERCENTAGE      reduce using rule 118 (expression_12 -> ID .)
    DIVIDE          reduce using rule 118 (expression_12 -> ID .)
    PLUS            reduce using rule 118 (expression_12 -> ID .)
    MINUS           reduce using rule 118 (expression_12 -> ID .)
    SHIFT_LEFT      reduce using rule 118 (expression_12 -> ID .)
    SHIFT_RIGHT     reduce using rule 118 (expression_12 -> ID .)
    LOGIC_AND       reduce using rule 118 (expression_12 -> ID .)
    LOGIC_OR        reduce using rule 118 (expression_12 -> ID .)
    LESS_THAN       reduce using rule 118 (expression_12 -> ID .)
    GREATER_THAN    reduce using rule 118 (expression_12 -> ID .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 118 (expression_12 -> ID .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 118 (expression_12 -> ID .)
    EQUAL_EQUAL     reduce using rule 118 (expression_12 -> ID .)
    DIFFERENT       reduce using rule 118 (expression_12 -> ID .)
    AND             reduce using rule 118 (expression_12 -> ID .)
    OR              reduce using rule 118 (expression_12 -> ID .)
    POINT_COMMA     reduce using rule 118 (expression_12 -> ID .)
    EQUAL           reduce using rule 118 (expression_12 -> ID .)
    PLUS_EQUAL      reduce using rule 118 (expression_12 -> ID .)
    MINUS_EQUAL     reduce using rule 118 (expression_12 -> ID .)
    MULTIPLICATION_DIVISION reduce using rule 118 (expression_12 -> ID .)
    DIVIDE_EQUAL    reduce using rule 118 (expression_12 -> ID .)
    CLOSE_PARENTHESES reduce using rule 118 (expression_12 -> ID .)
    COMMA           reduce using rule 118 (expression_12 -> ID .)
    POINT_V         reduce using rule 118 (expression_12 -> ID .)
    CLOSE_CONCHETE  reduce using rule 118 (expression_12 -> ID .)
    OPEN_PARENTHESES shift and go to state 72


state 33

    (71) returnStatement -> expression . POINT_COMMA
    (73) expression -> expression . EQUAL expression_0
    (74) expression -> expression . PLUS_EQUAL expression_0
    (75) expression -> expression . MINUS_EQUAL expression_0
    (76) expression -> expression . MULTIPLICATION_DIVISION expression_0
    (77) expression -> expression . DIVIDE_EQUAL expression_0

    POINT_COMMA     shift and go to state 73
    EQUAL           shift and go to state 74
    PLUS_EQUAL      shift and go to state 75
    MINUS_EQUAL     shift and go to state 76
    MULTIPLICATION_DIVISION shift and go to state 77
    DIVIDE_EQUAL    shift and go to state 78


state 34

    (72) returnStatement -> POINT_COMMA .

    CLOSE_KEYS      reduce using rule 72 (returnStatement -> POINT_COMMA .)
    OPEN_KEYS       reduce using rule 72 (returnStatement -> POINT_COMMA .)
    FOR             reduce using rule 72 (returnStatement -> POINT_COMMA .)
    WHILE           reduce using rule 72 (returnStatement -> POINT_COMMA .)
    IF              reduce using rule 72 (returnStatement -> POINT_COMMA .)
    BREAK           reduce using rule 72 (returnStatement -> POINT_COMMA .)
    CONTINUE        reduce using rule 72 (returnStatement -> POINT_COMMA .)
    POINT_COMMA     reduce using rule 72 (returnStatement -> POINT_COMMA .)
    RETURN          reduce using rule 72 (returnStatement -> POINT_COMMA .)
    VOID            reduce using rule 72 (returnStatement -> POINT_COMMA .)
    STRING          reduce using rule 72 (returnStatement -> POINT_COMMA .)
    BOOL            reduce using rule 72 (returnStatement -> POINT_COMMA .)
    INT             reduce using rule 72 (returnStatement -> POINT_COMMA .)
    FLOAT           reduce using rule 72 (returnStatement -> POINT_COMMA .)
    VAR             reduce using rule 72 (returnStatement -> POINT_COMMA .)
    MINUS           reduce using rule 72 (returnStatement -> POINT_COMMA .)
    PLUS_PLUS       reduce using rule 72 (returnStatement -> POINT_COMMA .)
    MINUS_MINUS     reduce using rule 72 (returnStatement -> POINT_COMMA .)
    INVERT          reduce using rule 72 (returnStatement -> POINT_COMMA .)
    OPEN_PARENTHESES reduce using rule 72 (returnStatement -> POINT_COMMA .)
    ID              reduce using rule 72 (returnStatement -> POINT_COMMA .)
    STRING_LITERAL  reduce using rule 72 (returnStatement -> POINT_COMMA .)
    NUMBER          reduce using rule 72 (returnStatement -> POINT_COMMA .)
    ELSE            reduce using rule 72 (returnStatement -> POINT_COMMA .)


state 35

    (45) forStatement -> FOR . OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement
    (46) forStatement -> FOR . OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body

    OPEN_PARENTHESES shift and go to state 79


state 36

    (116) expression_11 -> OPEN_PARENTHESES . expression CLOSE_PARENTHESES
    (73) expression -> . expression EQUAL expression_0
    (74) expression -> . expression PLUS_EQUAL expression_0
    (75) expression -> . expression MINUS_EQUAL expression_0
    (76) expression -> . expression MULTIPLICATION_DIVISION expression_0
    (77) expression -> . expression DIVIDE_EQUAL expression_0
    (78) expression -> . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression                     shift and go to state 80
    expression_0                   shift and go to state 43
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 37

    (59) whileStatement -> WHILE . OPEN_PARENTHESES expression CLOSE_PARENTHESES statement
    (60) whileStatement -> WHILE . OPEN_PARENTHESES expression CLOSE_PARENTHESES body

    OPEN_PARENTHESES shift and go to state 82


state 38

    (61) ifStatement -> IF . OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement
    (62) ifStatement -> IF . OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body
    (63) ifStatement -> IF . OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body
    (64) ifStatement -> IF . OPEN_PARENTHESES expression CLOSE_PARENTHESES statement
    (65) ifStatement -> IF . OPEN_PARENTHESES expression CLOSE_PARENTHESES body
    (66) ifStatement -> IF . OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement

    OPEN_PARENTHESES shift and go to state 83


state 39

    (67) breakStatement -> BREAK . POINT_COMMA

    POINT_COMMA     shift and go to state 84


state 40

    (68) continueStatement -> CONTINUE . POINT_COMMA

    POINT_COMMA     shift and go to state 85


state 41

    (69) expressionStatement -> RETURN . expression POINT_COMMA
    (70) expressionStatement -> RETURN . POINT_COMMA
    (73) expression -> . expression EQUAL expression_0
    (74) expression -> . expression PLUS_EQUAL expression_0
    (75) expression -> . expression MINUS_EQUAL expression_0
    (76) expression -> . expression MULTIPLICATION_DIVISION expression_0
    (77) expression -> . expression DIVIDE_EQUAL expression_0
    (78) expression -> . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    POINT_COMMA     shift and go to state 87
    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression                     shift and go to state 86
    expression_0                   shift and go to state 43
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 42

    (12) type -> BOOL .
    (121) expression_12 -> BOOL .

    ID              reduce using rule 12 (type -> BOOL .)
    MINUS_MINUS     reduce using rule 121 (expression_12 -> BOOL .)
    PLUS_PLUS       reduce using rule 121 (expression_12 -> BOOL .)
    OPEN_CONCHETE   reduce using rule 121 (expression_12 -> BOOL .)
    MULT            reduce using rule 121 (expression_12 -> BOOL .)
    PERCENTAGE      reduce using rule 121 (expression_12 -> BOOL .)
    DIVIDE          reduce using rule 121 (expression_12 -> BOOL .)
    PLUS            reduce using rule 121 (expression_12 -> BOOL .)
    MINUS           reduce using rule 121 (expression_12 -> BOOL .)
    SHIFT_LEFT      reduce using rule 121 (expression_12 -> BOOL .)
    SHIFT_RIGHT     reduce using rule 121 (expression_12 -> BOOL .)
    LOGIC_AND       reduce using rule 121 (expression_12 -> BOOL .)
    LOGIC_OR        reduce using rule 121 (expression_12 -> BOOL .)
    LESS_THAN       reduce using rule 121 (expression_12 -> BOOL .)
    GREATER_THAN    reduce using rule 121 (expression_12 -> BOOL .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 121 (expression_12 -> BOOL .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 121 (expression_12 -> BOOL .)
    EQUAL_EQUAL     reduce using rule 121 (expression_12 -> BOOL .)
    DIFFERENT       reduce using rule 121 (expression_12 -> BOOL .)
    AND             reduce using rule 121 (expression_12 -> BOOL .)
    OR              reduce using rule 121 (expression_12 -> BOOL .)
    POINT_COMMA     reduce using rule 121 (expression_12 -> BOOL .)
    EQUAL           reduce using rule 121 (expression_12 -> BOOL .)
    PLUS_EQUAL      reduce using rule 121 (expression_12 -> BOOL .)
    MINUS_EQUAL     reduce using rule 121 (expression_12 -> BOOL .)
    MULTIPLICATION_DIVISION reduce using rule 121 (expression_12 -> BOOL .)
    DIVIDE_EQUAL    reduce using rule 121 (expression_12 -> BOOL .)


state 43

    (78) expression -> expression_0 .
    (79) expression_0 -> expression_0 . OR expression_1

    POINT_COMMA     reduce using rule 78 (expression -> expression_0 .)
    EQUAL           reduce using rule 78 (expression -> expression_0 .)
    PLUS_EQUAL      reduce using rule 78 (expression -> expression_0 .)
    MINUS_EQUAL     reduce using rule 78 (expression -> expression_0 .)
    MULTIPLICATION_DIVISION reduce using rule 78 (expression -> expression_0 .)
    DIVIDE_EQUAL    reduce using rule 78 (expression -> expression_0 .)
    CLOSE_PARENTHESES reduce using rule 78 (expression -> expression_0 .)
    COMMA           reduce using rule 78 (expression -> expression_0 .)
    POINT_V         reduce using rule 78 (expression -> expression_0 .)
    OR              shift and go to state 88


state 44

    (80) expression_0 -> expression_1 .
    (81) expression_1 -> expression_1 . AND expression_2

    OR              reduce using rule 80 (expression_0 -> expression_1 .)
    POINT_COMMA     reduce using rule 80 (expression_0 -> expression_1 .)
    EQUAL           reduce using rule 80 (expression_0 -> expression_1 .)
    PLUS_EQUAL      reduce using rule 80 (expression_0 -> expression_1 .)
    MINUS_EQUAL     reduce using rule 80 (expression_0 -> expression_1 .)
    MULTIPLICATION_DIVISION reduce using rule 80 (expression_0 -> expression_1 .)
    DIVIDE_EQUAL    reduce using rule 80 (expression_0 -> expression_1 .)
    CLOSE_PARENTHESES reduce using rule 80 (expression_0 -> expression_1 .)
    COMMA           reduce using rule 80 (expression_0 -> expression_1 .)
    POINT_V         reduce using rule 80 (expression_0 -> expression_1 .)
    AND             shift and go to state 89


state 45

    (82) expression_1 -> expression_2 .
    (83) expression_2 -> expression_2 . EQUAL_EQUAL expression_3
    (84) expression_2 -> expression_2 . DIFFERENT expression_3

    AND             reduce using rule 82 (expression_1 -> expression_2 .)
    OR              reduce using rule 82 (expression_1 -> expression_2 .)
    POINT_COMMA     reduce using rule 82 (expression_1 -> expression_2 .)
    EQUAL           reduce using rule 82 (expression_1 -> expression_2 .)
    PLUS_EQUAL      reduce using rule 82 (expression_1 -> expression_2 .)
    MINUS_EQUAL     reduce using rule 82 (expression_1 -> expression_2 .)
    MULTIPLICATION_DIVISION reduce using rule 82 (expression_1 -> expression_2 .)
    DIVIDE_EQUAL    reduce using rule 82 (expression_1 -> expression_2 .)
    CLOSE_PARENTHESES reduce using rule 82 (expression_1 -> expression_2 .)
    COMMA           reduce using rule 82 (expression_1 -> expression_2 .)
    POINT_V         reduce using rule 82 (expression_1 -> expression_2 .)
    EQUAL_EQUAL     shift and go to state 90
    DIFFERENT       shift and go to state 91


state 46

    (85) expression_2 -> expression_3 .
    (86) expression_3 -> expression_3 . EQUAL_EQUAL expression_4
    (87) expression_3 -> expression_3 . DIFFERENT expression_4

  ! shift/reduce conflict for EQUAL_EQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    AND             reduce using rule 85 (expression_2 -> expression_3 .)
    OR              reduce using rule 85 (expression_2 -> expression_3 .)
    POINT_COMMA     reduce using rule 85 (expression_2 -> expression_3 .)
    EQUAL           reduce using rule 85 (expression_2 -> expression_3 .)
    PLUS_EQUAL      reduce using rule 85 (expression_2 -> expression_3 .)
    MINUS_EQUAL     reduce using rule 85 (expression_2 -> expression_3 .)
    MULTIPLICATION_DIVISION reduce using rule 85 (expression_2 -> expression_3 .)
    DIVIDE_EQUAL    reduce using rule 85 (expression_2 -> expression_3 .)
    CLOSE_PARENTHESES reduce using rule 85 (expression_2 -> expression_3 .)
    COMMA           reduce using rule 85 (expression_2 -> expression_3 .)
    POINT_V         reduce using rule 85 (expression_2 -> expression_3 .)
    EQUAL_EQUAL     shift and go to state 92
    DIFFERENT       shift and go to state 93

  ! EQUAL_EQUAL     [ reduce using rule 85 (expression_2 -> expression_3 .) ]
  ! DIFFERENT       [ reduce using rule 85 (expression_2 -> expression_3 .) ]


state 47

    (88) expression_3 -> expression_4 .
    (89) expression_4 -> expression_4 . LESS_THAN expression_5
    (90) expression_4 -> expression_4 . GREATER_THAN expression_5
    (91) expression_4 -> expression_4 . LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> expression_4 . GREATER_THAN_OR_EQUAL_TO expression_5

    EQUAL_EQUAL     reduce using rule 88 (expression_3 -> expression_4 .)
    DIFFERENT       reduce using rule 88 (expression_3 -> expression_4 .)
    AND             reduce using rule 88 (expression_3 -> expression_4 .)
    OR              reduce using rule 88 (expression_3 -> expression_4 .)
    POINT_COMMA     reduce using rule 88 (expression_3 -> expression_4 .)
    EQUAL           reduce using rule 88 (expression_3 -> expression_4 .)
    PLUS_EQUAL      reduce using rule 88 (expression_3 -> expression_4 .)
    MINUS_EQUAL     reduce using rule 88 (expression_3 -> expression_4 .)
    MULTIPLICATION_DIVISION reduce using rule 88 (expression_3 -> expression_4 .)
    DIVIDE_EQUAL    reduce using rule 88 (expression_3 -> expression_4 .)
    CLOSE_PARENTHESES reduce using rule 88 (expression_3 -> expression_4 .)
    COMMA           reduce using rule 88 (expression_3 -> expression_4 .)
    POINT_V         reduce using rule 88 (expression_3 -> expression_4 .)
    LESS_THAN       shift and go to state 94
    GREATER_THAN    shift and go to state 95
    LESS_THAN_OR_EQUAL_TO shift and go to state 96
    GREATER_THAN_OR_EQUAL_TO shift and go to state 97


state 48

    (93) expression_4 -> expression_5 .
    (94) expression_5 -> expression_5 . LOGIC_OR expression_6

    LESS_THAN       reduce using rule 93 (expression_4 -> expression_5 .)
    GREATER_THAN    reduce using rule 93 (expression_4 -> expression_5 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 93 (expression_4 -> expression_5 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 93 (expression_4 -> expression_5 .)
    EQUAL_EQUAL     reduce using rule 93 (expression_4 -> expression_5 .)
    DIFFERENT       reduce using rule 93 (expression_4 -> expression_5 .)
    AND             reduce using rule 93 (expression_4 -> expression_5 .)
    OR              reduce using rule 93 (expression_4 -> expression_5 .)
    POINT_COMMA     reduce using rule 93 (expression_4 -> expression_5 .)
    EQUAL           reduce using rule 93 (expression_4 -> expression_5 .)
    PLUS_EQUAL      reduce using rule 93 (expression_4 -> expression_5 .)
    MINUS_EQUAL     reduce using rule 93 (expression_4 -> expression_5 .)
    MULTIPLICATION_DIVISION reduce using rule 93 (expression_4 -> expression_5 .)
    DIVIDE_EQUAL    reduce using rule 93 (expression_4 -> expression_5 .)
    CLOSE_PARENTHESES reduce using rule 93 (expression_4 -> expression_5 .)
    COMMA           reduce using rule 93 (expression_4 -> expression_5 .)
    POINT_V         reduce using rule 93 (expression_4 -> expression_5 .)
    LOGIC_OR        shift and go to state 98


state 49

    (95) expression_5 -> expression_6 .
    (96) expression_6 -> expression_6 . LOGIC_AND expression_7

    LOGIC_OR        reduce using rule 95 (expression_5 -> expression_6 .)
    LESS_THAN       reduce using rule 95 (expression_5 -> expression_6 .)
    GREATER_THAN    reduce using rule 95 (expression_5 -> expression_6 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 95 (expression_5 -> expression_6 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 95 (expression_5 -> expression_6 .)
    EQUAL_EQUAL     reduce using rule 95 (expression_5 -> expression_6 .)
    DIFFERENT       reduce using rule 95 (expression_5 -> expression_6 .)
    AND             reduce using rule 95 (expression_5 -> expression_6 .)
    OR              reduce using rule 95 (expression_5 -> expression_6 .)
    POINT_COMMA     reduce using rule 95 (expression_5 -> expression_6 .)
    EQUAL           reduce using rule 95 (expression_5 -> expression_6 .)
    PLUS_EQUAL      reduce using rule 95 (expression_5 -> expression_6 .)
    MINUS_EQUAL     reduce using rule 95 (expression_5 -> expression_6 .)
    MULTIPLICATION_DIVISION reduce using rule 95 (expression_5 -> expression_6 .)
    DIVIDE_EQUAL    reduce using rule 95 (expression_5 -> expression_6 .)
    CLOSE_PARENTHESES reduce using rule 95 (expression_5 -> expression_6 .)
    COMMA           reduce using rule 95 (expression_5 -> expression_6 .)
    POINT_V         reduce using rule 95 (expression_5 -> expression_6 .)
    LOGIC_AND       shift and go to state 99


state 50

    (97) expression_6 -> expression_7 .
    (98) expression_7 -> expression_7 . SHIFT_LEFT expression_8
    (99) expression_7 -> expression_7 . SHIFT_RIGHT expression_8

    LOGIC_AND       reduce using rule 97 (expression_6 -> expression_7 .)
    LOGIC_OR        reduce using rule 97 (expression_6 -> expression_7 .)
    LESS_THAN       reduce using rule 97 (expression_6 -> expression_7 .)
    GREATER_THAN    reduce using rule 97 (expression_6 -> expression_7 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 97 (expression_6 -> expression_7 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 97 (expression_6 -> expression_7 .)
    EQUAL_EQUAL     reduce using rule 97 (expression_6 -> expression_7 .)
    DIFFERENT       reduce using rule 97 (expression_6 -> expression_7 .)
    AND             reduce using rule 97 (expression_6 -> expression_7 .)
    OR              reduce using rule 97 (expression_6 -> expression_7 .)
    POINT_COMMA     reduce using rule 97 (expression_6 -> expression_7 .)
    EQUAL           reduce using rule 97 (expression_6 -> expression_7 .)
    PLUS_EQUAL      reduce using rule 97 (expression_6 -> expression_7 .)
    MINUS_EQUAL     reduce using rule 97 (expression_6 -> expression_7 .)
    MULTIPLICATION_DIVISION reduce using rule 97 (expression_6 -> expression_7 .)
    DIVIDE_EQUAL    reduce using rule 97 (expression_6 -> expression_7 .)
    CLOSE_PARENTHESES reduce using rule 97 (expression_6 -> expression_7 .)
    COMMA           reduce using rule 97 (expression_6 -> expression_7 .)
    POINT_V         reduce using rule 97 (expression_6 -> expression_7 .)
    SHIFT_LEFT      shift and go to state 100
    SHIFT_RIGHT     shift and go to state 101


state 51

    (100) expression_7 -> expression_8 .
    (101) expression_8 -> expression_8 . PLUS expression_9
    (102) expression_8 -> expression_8 . MINUS expression_9

    SHIFT_LEFT      reduce using rule 100 (expression_7 -> expression_8 .)
    SHIFT_RIGHT     reduce using rule 100 (expression_7 -> expression_8 .)
    LOGIC_AND       reduce using rule 100 (expression_7 -> expression_8 .)
    LOGIC_OR        reduce using rule 100 (expression_7 -> expression_8 .)
    LESS_THAN       reduce using rule 100 (expression_7 -> expression_8 .)
    GREATER_THAN    reduce using rule 100 (expression_7 -> expression_8 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 100 (expression_7 -> expression_8 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 100 (expression_7 -> expression_8 .)
    EQUAL_EQUAL     reduce using rule 100 (expression_7 -> expression_8 .)
    DIFFERENT       reduce using rule 100 (expression_7 -> expression_8 .)
    AND             reduce using rule 100 (expression_7 -> expression_8 .)
    OR              reduce using rule 100 (expression_7 -> expression_8 .)
    POINT_COMMA     reduce using rule 100 (expression_7 -> expression_8 .)
    EQUAL           reduce using rule 100 (expression_7 -> expression_8 .)
    PLUS_EQUAL      reduce using rule 100 (expression_7 -> expression_8 .)
    MINUS_EQUAL     reduce using rule 100 (expression_7 -> expression_8 .)
    MULTIPLICATION_DIVISION reduce using rule 100 (expression_7 -> expression_8 .)
    DIVIDE_EQUAL    reduce using rule 100 (expression_7 -> expression_8 .)
    CLOSE_PARENTHESES reduce using rule 100 (expression_7 -> expression_8 .)
    COMMA           reduce using rule 100 (expression_7 -> expression_8 .)
    POINT_V         reduce using rule 100 (expression_7 -> expression_8 .)
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103


state 52

    (103) expression_8 -> expression_9 .
    (104) expression_9 -> expression_9 . MULT expression_10
    (105) expression_9 -> expression_9 . PERCENTAGE expression_10
    (106) expression_9 -> expression_9 . DIVIDE expression_10

    PLUS            reduce using rule 103 (expression_8 -> expression_9 .)
    MINUS           reduce using rule 103 (expression_8 -> expression_9 .)
    SHIFT_LEFT      reduce using rule 103 (expression_8 -> expression_9 .)
    SHIFT_RIGHT     reduce using rule 103 (expression_8 -> expression_9 .)
    LOGIC_AND       reduce using rule 103 (expression_8 -> expression_9 .)
    LOGIC_OR        reduce using rule 103 (expression_8 -> expression_9 .)
    LESS_THAN       reduce using rule 103 (expression_8 -> expression_9 .)
    GREATER_THAN    reduce using rule 103 (expression_8 -> expression_9 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 103 (expression_8 -> expression_9 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 103 (expression_8 -> expression_9 .)
    EQUAL_EQUAL     reduce using rule 103 (expression_8 -> expression_9 .)
    DIFFERENT       reduce using rule 103 (expression_8 -> expression_9 .)
    AND             reduce using rule 103 (expression_8 -> expression_9 .)
    OR              reduce using rule 103 (expression_8 -> expression_9 .)
    POINT_COMMA     reduce using rule 103 (expression_8 -> expression_9 .)
    EQUAL           reduce using rule 103 (expression_8 -> expression_9 .)
    PLUS_EQUAL      reduce using rule 103 (expression_8 -> expression_9 .)
    MINUS_EQUAL     reduce using rule 103 (expression_8 -> expression_9 .)
    MULTIPLICATION_DIVISION reduce using rule 103 (expression_8 -> expression_9 .)
    DIVIDE_EQUAL    reduce using rule 103 (expression_8 -> expression_9 .)
    CLOSE_PARENTHESES reduce using rule 103 (expression_8 -> expression_9 .)
    COMMA           reduce using rule 103 (expression_8 -> expression_9 .)
    POINT_V         reduce using rule 103 (expression_8 -> expression_9 .)
    MULT            shift and go to state 104
    PERCENTAGE      shift and go to state 105
    DIVIDE          shift and go to state 106


state 53

    (108) expression_10 -> MINUS . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_10                  shift and go to state 107
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 54

    (107) expression_9 -> expression_10 .

    MULT            reduce using rule 107 (expression_9 -> expression_10 .)
    PERCENTAGE      reduce using rule 107 (expression_9 -> expression_10 .)
    DIVIDE          reduce using rule 107 (expression_9 -> expression_10 .)
    PLUS            reduce using rule 107 (expression_9 -> expression_10 .)
    MINUS           reduce using rule 107 (expression_9 -> expression_10 .)
    SHIFT_LEFT      reduce using rule 107 (expression_9 -> expression_10 .)
    SHIFT_RIGHT     reduce using rule 107 (expression_9 -> expression_10 .)
    LOGIC_AND       reduce using rule 107 (expression_9 -> expression_10 .)
    LOGIC_OR        reduce using rule 107 (expression_9 -> expression_10 .)
    LESS_THAN       reduce using rule 107 (expression_9 -> expression_10 .)
    GREATER_THAN    reduce using rule 107 (expression_9 -> expression_10 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 107 (expression_9 -> expression_10 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 107 (expression_9 -> expression_10 .)
    EQUAL_EQUAL     reduce using rule 107 (expression_9 -> expression_10 .)
    DIFFERENT       reduce using rule 107 (expression_9 -> expression_10 .)
    AND             reduce using rule 107 (expression_9 -> expression_10 .)
    OR              reduce using rule 107 (expression_9 -> expression_10 .)
    POINT_COMMA     reduce using rule 107 (expression_9 -> expression_10 .)
    EQUAL           reduce using rule 107 (expression_9 -> expression_10 .)
    PLUS_EQUAL      reduce using rule 107 (expression_9 -> expression_10 .)
    MINUS_EQUAL     reduce using rule 107 (expression_9 -> expression_10 .)
    MULTIPLICATION_DIVISION reduce using rule 107 (expression_9 -> expression_10 .)
    DIVIDE_EQUAL    reduce using rule 107 (expression_9 -> expression_10 .)
    CLOSE_PARENTHESES reduce using rule 107 (expression_9 -> expression_10 .)
    COMMA           reduce using rule 107 (expression_9 -> expression_10 .)
    POINT_V         reduce using rule 107 (expression_9 -> expression_10 .)


state 55

    (109) expression_10 -> PLUS_PLUS . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_10                  shift and go to state 108
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 56

    (110) expression_10 -> MINUS_MINUS . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_10                  shift and go to state 109
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 57

    (111) expression_10 -> INVERT . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_10                  shift and go to state 110
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 58

    (112) expression_10 -> expression_11 .
    (113) expression_11 -> expression_11 . MINUS_MINUS
    (114) expression_11 -> expression_11 . PLUS_PLUS
    (115) expression_11 -> expression_11 . OPEN_CONCHETE expression_11 CLOSE_CONCHETE

    MULT            reduce using rule 112 (expression_10 -> expression_11 .)
    PERCENTAGE      reduce using rule 112 (expression_10 -> expression_11 .)
    DIVIDE          reduce using rule 112 (expression_10 -> expression_11 .)
    PLUS            reduce using rule 112 (expression_10 -> expression_11 .)
    MINUS           reduce using rule 112 (expression_10 -> expression_11 .)
    SHIFT_LEFT      reduce using rule 112 (expression_10 -> expression_11 .)
    SHIFT_RIGHT     reduce using rule 112 (expression_10 -> expression_11 .)
    LOGIC_AND       reduce using rule 112 (expression_10 -> expression_11 .)
    LOGIC_OR        reduce using rule 112 (expression_10 -> expression_11 .)
    LESS_THAN       reduce using rule 112 (expression_10 -> expression_11 .)
    GREATER_THAN    reduce using rule 112 (expression_10 -> expression_11 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 112 (expression_10 -> expression_11 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 112 (expression_10 -> expression_11 .)
    EQUAL_EQUAL     reduce using rule 112 (expression_10 -> expression_11 .)
    DIFFERENT       reduce using rule 112 (expression_10 -> expression_11 .)
    AND             reduce using rule 112 (expression_10 -> expression_11 .)
    OR              reduce using rule 112 (expression_10 -> expression_11 .)
    POINT_COMMA     reduce using rule 112 (expression_10 -> expression_11 .)
    EQUAL           reduce using rule 112 (expression_10 -> expression_11 .)
    PLUS_EQUAL      reduce using rule 112 (expression_10 -> expression_11 .)
    MINUS_EQUAL     reduce using rule 112 (expression_10 -> expression_11 .)
    MULTIPLICATION_DIVISION reduce using rule 112 (expression_10 -> expression_11 .)
    DIVIDE_EQUAL    reduce using rule 112 (expression_10 -> expression_11 .)
    CLOSE_PARENTHESES reduce using rule 112 (expression_10 -> expression_11 .)
    COMMA           reduce using rule 112 (expression_10 -> expression_11 .)
    POINT_V         reduce using rule 112 (expression_10 -> expression_11 .)
    MINUS_MINUS     shift and go to state 111
    PLUS_PLUS       shift and go to state 112
    OPEN_CONCHETE   shift and go to state 113


state 59

    (117) expression_11 -> expression_12 .

    MINUS_MINUS     reduce using rule 117 (expression_11 -> expression_12 .)
    PLUS_PLUS       reduce using rule 117 (expression_11 -> expression_12 .)
    OPEN_CONCHETE   reduce using rule 117 (expression_11 -> expression_12 .)
    MULT            reduce using rule 117 (expression_11 -> expression_12 .)
    PERCENTAGE      reduce using rule 117 (expression_11 -> expression_12 .)
    DIVIDE          reduce using rule 117 (expression_11 -> expression_12 .)
    PLUS            reduce using rule 117 (expression_11 -> expression_12 .)
    MINUS           reduce using rule 117 (expression_11 -> expression_12 .)
    SHIFT_LEFT      reduce using rule 117 (expression_11 -> expression_12 .)
    SHIFT_RIGHT     reduce using rule 117 (expression_11 -> expression_12 .)
    LOGIC_AND       reduce using rule 117 (expression_11 -> expression_12 .)
    LOGIC_OR        reduce using rule 117 (expression_11 -> expression_12 .)
    LESS_THAN       reduce using rule 117 (expression_11 -> expression_12 .)
    GREATER_THAN    reduce using rule 117 (expression_11 -> expression_12 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 117 (expression_11 -> expression_12 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 117 (expression_11 -> expression_12 .)
    EQUAL_EQUAL     reduce using rule 117 (expression_11 -> expression_12 .)
    DIFFERENT       reduce using rule 117 (expression_11 -> expression_12 .)
    AND             reduce using rule 117 (expression_11 -> expression_12 .)
    OR              reduce using rule 117 (expression_11 -> expression_12 .)
    POINT_COMMA     reduce using rule 117 (expression_11 -> expression_12 .)
    EQUAL           reduce using rule 117 (expression_11 -> expression_12 .)
    PLUS_EQUAL      reduce using rule 117 (expression_11 -> expression_12 .)
    MINUS_EQUAL     reduce using rule 117 (expression_11 -> expression_12 .)
    MULTIPLICATION_DIVISION reduce using rule 117 (expression_11 -> expression_12 .)
    DIVIDE_EQUAL    reduce using rule 117 (expression_11 -> expression_12 .)
    CLOSE_PARENTHESES reduce using rule 117 (expression_11 -> expression_12 .)
    COMMA           reduce using rule 117 (expression_11 -> expression_12 .)
    POINT_V         reduce using rule 117 (expression_11 -> expression_12 .)
    CLOSE_CONCHETE  reduce using rule 117 (expression_11 -> expression_12 .)


state 60

    (119) expression_12 -> STRING_LITERAL .

    MINUS_MINUS     reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    PLUS_PLUS       reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    OPEN_CONCHETE   reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    MULT            reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    PERCENTAGE      reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    DIVIDE          reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    PLUS            reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    MINUS           reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    SHIFT_LEFT      reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    SHIFT_RIGHT     reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    LOGIC_AND       reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    LOGIC_OR        reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    LESS_THAN       reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    GREATER_THAN    reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    EQUAL_EQUAL     reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    DIFFERENT       reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    AND             reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    OR              reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    POINT_COMMA     reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    EQUAL           reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    PLUS_EQUAL      reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    MINUS_EQUAL     reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    MULTIPLICATION_DIVISION reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    DIVIDE_EQUAL    reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    CLOSE_PARENTHESES reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    COMMA           reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    POINT_V         reduce using rule 119 (expression_12 -> STRING_LITERAL .)
    CLOSE_CONCHETE  reduce using rule 119 (expression_12 -> STRING_LITERAL .)


state 61

    (120) expression_12 -> NUMBER .

    MINUS_MINUS     reduce using rule 120 (expression_12 -> NUMBER .)
    PLUS_PLUS       reduce using rule 120 (expression_12 -> NUMBER .)
    OPEN_CONCHETE   reduce using rule 120 (expression_12 -> NUMBER .)
    MULT            reduce using rule 120 (expression_12 -> NUMBER .)
    PERCENTAGE      reduce using rule 120 (expression_12 -> NUMBER .)
    DIVIDE          reduce using rule 120 (expression_12 -> NUMBER .)
    PLUS            reduce using rule 120 (expression_12 -> NUMBER .)
    MINUS           reduce using rule 120 (expression_12 -> NUMBER .)
    SHIFT_LEFT      reduce using rule 120 (expression_12 -> NUMBER .)
    SHIFT_RIGHT     reduce using rule 120 (expression_12 -> NUMBER .)
    LOGIC_AND       reduce using rule 120 (expression_12 -> NUMBER .)
    LOGIC_OR        reduce using rule 120 (expression_12 -> NUMBER .)
    LESS_THAN       reduce using rule 120 (expression_12 -> NUMBER .)
    GREATER_THAN    reduce using rule 120 (expression_12 -> NUMBER .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 120 (expression_12 -> NUMBER .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 120 (expression_12 -> NUMBER .)
    EQUAL_EQUAL     reduce using rule 120 (expression_12 -> NUMBER .)
    DIFFERENT       reduce using rule 120 (expression_12 -> NUMBER .)
    AND             reduce using rule 120 (expression_12 -> NUMBER .)
    OR              reduce using rule 120 (expression_12 -> NUMBER .)
    POINT_COMMA     reduce using rule 120 (expression_12 -> NUMBER .)
    EQUAL           reduce using rule 120 (expression_12 -> NUMBER .)
    PLUS_EQUAL      reduce using rule 120 (expression_12 -> NUMBER .)
    MINUS_EQUAL     reduce using rule 120 (expression_12 -> NUMBER .)
    MULTIPLICATION_DIVISION reduce using rule 120 (expression_12 -> NUMBER .)
    DIVIDE_EQUAL    reduce using rule 120 (expression_12 -> NUMBER .)
    CLOSE_PARENTHESES reduce using rule 120 (expression_12 -> NUMBER .)
    COMMA           reduce using rule 120 (expression_12 -> NUMBER .)
    POINT_V         reduce using rule 120 (expression_12 -> NUMBER .)
    CLOSE_CONCHETE  reduce using rule 120 (expression_12 -> NUMBER .)


state 62

    (2) topLevelDeclaration -> type initializedIdentifierList POINT_V .
    (4) topLevelDeclaration -> type initializedIdentifierList POINT_V . topLevelDeclaration
    (1) topLevelDeclaration -> . functionSignature body
    (2) topLevelDeclaration -> . type initializedIdentifierList POINT_V
    (3) topLevelDeclaration -> . functionSignature body topLevelDeclaration
    (4) topLevelDeclaration -> . type initializedIdentifierList POINT_V topLevelDeclaration
    (8) functionSignature -> . type ID formalParameterPart
    (9) functionSignature -> . ID formalParameterPart
    (10) type -> . VOID
    (11) type -> . STRING
    (12) type -> . BOOL
    (13) type -> . INT
    (14) type -> . FLOAT
    (15) type -> . VAR

    $end            reduce using rule 2 (topLevelDeclaration -> type initializedIdentifierList POINT_V .)
    ID              shift and go to state 4
    VOID            shift and go to state 5
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    VAR             shift and go to state 10

    type                           shift and go to state 3
    topLevelDeclaration            shift and go to state 114
    functionSignature              shift and go to state 2

state 63

    (8) functionSignature -> type ID formalParameterPart .

    OPEN_KEYS       reduce using rule 8 (functionSignature -> type ID formalParameterPart .)


state 64

    (5) initializedIdentifierList -> ID EQUAL . expression p_initializedIdentifierList_estrela
    (73) expression -> . expression EQUAL expression_0
    (74) expression -> . expression PLUS_EQUAL expression_0
    (75) expression -> . expression MINUS_EQUAL expression_0
    (76) expression -> . expression MULTIPLICATION_DIVISION expression_0
    (77) expression -> . expression DIVIDE_EQUAL expression_0
    (78) expression -> . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression                     shift and go to state 115
    expression_0                   shift and go to state 43
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 65

    (17) formalParameterList -> OPEN_PARENTHESES CLOSE_PARENTHESES .

    OPEN_KEYS       reduce using rule 17 (formalParameterList -> OPEN_PARENTHESES CLOSE_PARENTHESES .)


state 66

    (18) formalParameterList -> OPEN_PARENTHESES normalFormalParameters . COMMA CLOSE_PARENTHESES
    (19) formalParameterList -> OPEN_PARENTHESES normalFormalParameters . CLOSE_PARENTHESES

    COMMA           shift and go to state 116
    CLOSE_PARENTHESES shift and go to state 117


state 67

    (20) normalFormalParameters -> normalFormalParameter . p_normalFormalParameters_estrela
    (21) p_normalFormalParameters_estrela -> . COMMA normalFormalParameter
    (22) p_normalFormalParameters_estrela -> . COMMA normalFormalParameter p_normalFormalParameters_estrela

    COMMA           shift and go to state 119

    p_normalFormalParameters_estrela shift and go to state 118

state 68

    (23) normalFormalParameter -> type . ID

    ID              shift and go to state 120


state 69

    (24) body -> OPEN_KEYS statements CLOSE_KEYS .

    ID              reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    VOID            reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    STRING          reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    BOOL            reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    INT             reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    FLOAT           reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    VAR             reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    $end            reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    CLOSE_KEYS      reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    OPEN_KEYS       reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    FOR             reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    WHILE           reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    IF              reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    BREAK           reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    CONTINUE        reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    POINT_COMMA     reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    RETURN          reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    MINUS           reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    PLUS_PLUS       reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    MINUS_MINUS     reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    INVERT          reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    OPEN_PARENTHESES reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    STRING_LITERAL  reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    NUMBER          reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)
    ELSE            reduce using rule 24 (body -> OPEN_KEYS statements CLOSE_KEYS .)


state 70

    (26) statements -> statements statement .

    CLOSE_KEYS      reduce using rule 26 (statements -> statements statement .)
    OPEN_KEYS       reduce using rule 26 (statements -> statements statement .)
    FOR             reduce using rule 26 (statements -> statements statement .)
    WHILE           reduce using rule 26 (statements -> statements statement .)
    IF              reduce using rule 26 (statements -> statements statement .)
    BREAK           reduce using rule 26 (statements -> statements statement .)
    CONTINUE        reduce using rule 26 (statements -> statements statement .)
    POINT_COMMA     reduce using rule 26 (statements -> statements statement .)
    RETURN          reduce using rule 26 (statements -> statements statement .)
    VOID            reduce using rule 26 (statements -> statements statement .)
    STRING          reduce using rule 26 (statements -> statements statement .)
    BOOL            reduce using rule 26 (statements -> statements statement .)
    INT             reduce using rule 26 (statements -> statements statement .)
    FLOAT           reduce using rule 26 (statements -> statements statement .)
    VAR             reduce using rule 26 (statements -> statements statement .)
    MINUS           reduce using rule 26 (statements -> statements statement .)
    PLUS_PLUS       reduce using rule 26 (statements -> statements statement .)
    MINUS_MINUS     reduce using rule 26 (statements -> statements statement .)
    INVERT          reduce using rule 26 (statements -> statements statement .)
    OPEN_PARENTHESES reduce using rule 26 (statements -> statements statement .)
    ID              reduce using rule 26 (statements -> statements statement .)
    STRING_LITERAL  reduce using rule 26 (statements -> statements statement .)
    NUMBER          reduce using rule 26 (statements -> statements statement .)


state 71

    (37) localVariableDeclaration -> type ID . EQUAL expression expression_one_equal POINT_COMMA
    (38) localVariableDeclaration -> type ID . expression_one_equal POINT_COMMA
    (39) localVariableDeclaration -> type ID . EQUAL expression COMMA ID POINT_COMMA
    (40) localVariableDeclaration -> type ID . COMMA ID POINT_COMMA
    (41) expression_one_equal -> . COMMA ID EQUAL expression
    (42) expression_one_equal -> . COMMA ID
    (43) expression_one_equal -> . COMMA ID EQUAL expression expression_one_equal
    (44) expression_one_equal -> . COMMA ID expression_one_equal

    EQUAL           shift and go to state 121
    COMMA           shift and go to state 123

    expression_one_equal           shift and go to state 122

state 72

    (122) expression_12 -> ID OPEN_PARENTHESES . normalFormalParameter CLOSE_PARENTHESES
    (23) normalFormalParameter -> . type ID
    (10) type -> . VOID
    (11) type -> . STRING
    (12) type -> . BOOL
    (13) type -> . INT
    (14) type -> . FLOAT
    (15) type -> . VAR

    VOID            shift and go to state 5
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    VAR             shift and go to state 10

    normalFormalParameter          shift and go to state 124
    type                           shift and go to state 68

state 73

    (71) returnStatement -> expression POINT_COMMA .

    CLOSE_KEYS      reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    OPEN_KEYS       reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    FOR             reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    WHILE           reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    IF              reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    BREAK           reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    CONTINUE        reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    POINT_COMMA     reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    RETURN          reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    VOID            reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    STRING          reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    BOOL            reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    INT             reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    FLOAT           reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    VAR             reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    MINUS           reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    PLUS_PLUS       reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    MINUS_MINUS     reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    INVERT          reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    OPEN_PARENTHESES reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    ID              reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    STRING_LITERAL  reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    NUMBER          reduce using rule 71 (returnStatement -> expression POINT_COMMA .)
    ELSE            reduce using rule 71 (returnStatement -> expression POINT_COMMA .)


state 74

    (73) expression -> expression EQUAL . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_0                   shift and go to state 125
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 75

    (74) expression -> expression PLUS_EQUAL . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_0                   shift and go to state 126
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 76

    (75) expression -> expression MINUS_EQUAL . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_0                   shift and go to state 127
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 77

    (76) expression -> expression MULTIPLICATION_DIVISION . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_0                   shift and go to state 128
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 78

    (77) expression -> expression DIVIDE_EQUAL . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_0                   shift and go to state 129
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 79

    (45) forStatement -> FOR OPEN_PARENTHESES . forLoopParts CLOSE_PARENTHESES statement
    (46) forStatement -> FOR OPEN_PARENTHESES . forLoopParts CLOSE_PARENTHESES body
    (55) forLoopParts -> . type ID IN expression
    (56) forLoopParts -> . ID IN expression
    (10) type -> . VOID
    (11) type -> . STRING
    (12) type -> . BOOL
    (13) type -> . INT
    (14) type -> . FLOAT
    (15) type -> . VAR

    ID              shift and go to state 132
    VOID            shift and go to state 5
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    VAR             shift and go to state 10

    forLoopParts                   shift and go to state 130
    type                           shift and go to state 131

state 80

    (116) expression_11 -> OPEN_PARENTHESES expression . CLOSE_PARENTHESES
    (73) expression -> expression . EQUAL expression_0
    (74) expression -> expression . PLUS_EQUAL expression_0
    (75) expression -> expression . MINUS_EQUAL expression_0
    (76) expression -> expression . MULTIPLICATION_DIVISION expression_0
    (77) expression -> expression . DIVIDE_EQUAL expression_0

    CLOSE_PARENTHESES shift and go to state 133
    EQUAL           shift and go to state 74
    PLUS_EQUAL      shift and go to state 75
    MINUS_EQUAL     shift and go to state 76
    MULTIPLICATION_DIVISION shift and go to state 77
    DIVIDE_EQUAL    shift and go to state 78


state 81

    (121) expression_12 -> BOOL .

    MINUS_MINUS     reduce using rule 121 (expression_12 -> BOOL .)
    PLUS_PLUS       reduce using rule 121 (expression_12 -> BOOL .)
    OPEN_CONCHETE   reduce using rule 121 (expression_12 -> BOOL .)
    MULT            reduce using rule 121 (expression_12 -> BOOL .)
    PERCENTAGE      reduce using rule 121 (expression_12 -> BOOL .)
    DIVIDE          reduce using rule 121 (expression_12 -> BOOL .)
    PLUS            reduce using rule 121 (expression_12 -> BOOL .)
    MINUS           reduce using rule 121 (expression_12 -> BOOL .)
    SHIFT_LEFT      reduce using rule 121 (expression_12 -> BOOL .)
    SHIFT_RIGHT     reduce using rule 121 (expression_12 -> BOOL .)
    LOGIC_AND       reduce using rule 121 (expression_12 -> BOOL .)
    LOGIC_OR        reduce using rule 121 (expression_12 -> BOOL .)
    LESS_THAN       reduce using rule 121 (expression_12 -> BOOL .)
    GREATER_THAN    reduce using rule 121 (expression_12 -> BOOL .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 121 (expression_12 -> BOOL .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 121 (expression_12 -> BOOL .)
    EQUAL_EQUAL     reduce using rule 121 (expression_12 -> BOOL .)
    DIFFERENT       reduce using rule 121 (expression_12 -> BOOL .)
    AND             reduce using rule 121 (expression_12 -> BOOL .)
    OR              reduce using rule 121 (expression_12 -> BOOL .)
    CLOSE_PARENTHESES reduce using rule 121 (expression_12 -> BOOL .)
    EQUAL           reduce using rule 121 (expression_12 -> BOOL .)
    PLUS_EQUAL      reduce using rule 121 (expression_12 -> BOOL .)
    MINUS_EQUAL     reduce using rule 121 (expression_12 -> BOOL .)
    MULTIPLICATION_DIVISION reduce using rule 121 (expression_12 -> BOOL .)
    DIVIDE_EQUAL    reduce using rule 121 (expression_12 -> BOOL .)
    POINT_COMMA     reduce using rule 121 (expression_12 -> BOOL .)
    COMMA           reduce using rule 121 (expression_12 -> BOOL .)
    POINT_V         reduce using rule 121 (expression_12 -> BOOL .)
    CLOSE_CONCHETE  reduce using rule 121 (expression_12 -> BOOL .)


state 82

    (59) whileStatement -> WHILE OPEN_PARENTHESES . expression CLOSE_PARENTHESES statement
    (60) whileStatement -> WHILE OPEN_PARENTHESES . expression CLOSE_PARENTHESES body
    (73) expression -> . expression EQUAL expression_0
    (74) expression -> . expression PLUS_EQUAL expression_0
    (75) expression -> . expression MINUS_EQUAL expression_0
    (76) expression -> . expression MULTIPLICATION_DIVISION expression_0
    (77) expression -> . expression DIVIDE_EQUAL expression_0
    (78) expression -> . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression                     shift and go to state 134
    expression_0                   shift and go to state 43
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 83

    (61) ifStatement -> IF OPEN_PARENTHESES . expression CLOSE_PARENTHESES statement ELSE statement
    (62) ifStatement -> IF OPEN_PARENTHESES . expression CLOSE_PARENTHESES body ELSE body
    (63) ifStatement -> IF OPEN_PARENTHESES . expression CLOSE_PARENTHESES statement ELSE body
    (64) ifStatement -> IF OPEN_PARENTHESES . expression CLOSE_PARENTHESES statement
    (65) ifStatement -> IF OPEN_PARENTHESES . expression CLOSE_PARENTHESES body
    (66) ifStatement -> IF OPEN_PARENTHESES . expression CLOSE_PARENTHESES body ELSE statement
    (73) expression -> . expression EQUAL expression_0
    (74) expression -> . expression PLUS_EQUAL expression_0
    (75) expression -> . expression MINUS_EQUAL expression_0
    (76) expression -> . expression MULTIPLICATION_DIVISION expression_0
    (77) expression -> . expression DIVIDE_EQUAL expression_0
    (78) expression -> . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression                     shift and go to state 135
    expression_0                   shift and go to state 43
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 84

    (67) breakStatement -> BREAK POINT_COMMA .

    CLOSE_KEYS      reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    OPEN_KEYS       reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    FOR             reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    WHILE           reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    IF              reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    BREAK           reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    CONTINUE        reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    POINT_COMMA     reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    RETURN          reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    VOID            reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    STRING          reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    BOOL            reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    INT             reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    FLOAT           reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    VAR             reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    MINUS           reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    PLUS_PLUS       reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    MINUS_MINUS     reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    INVERT          reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    OPEN_PARENTHESES reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    ID              reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    STRING_LITERAL  reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    NUMBER          reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)
    ELSE            reduce using rule 67 (breakStatement -> BREAK POINT_COMMA .)


state 85

    (68) continueStatement -> CONTINUE POINT_COMMA .

    CLOSE_KEYS      reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    OPEN_KEYS       reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    FOR             reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    WHILE           reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    IF              reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    BREAK           reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    CONTINUE        reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    POINT_COMMA     reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    RETURN          reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    VOID            reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    STRING          reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    BOOL            reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    INT             reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    FLOAT           reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    VAR             reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    MINUS           reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    PLUS_PLUS       reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    MINUS_MINUS     reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    INVERT          reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    OPEN_PARENTHESES reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    ID              reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    STRING_LITERAL  reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    NUMBER          reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)
    ELSE            reduce using rule 68 (continueStatement -> CONTINUE POINT_COMMA .)


state 86

    (69) expressionStatement -> RETURN expression . POINT_COMMA
    (73) expression -> expression . EQUAL expression_0
    (74) expression -> expression . PLUS_EQUAL expression_0
    (75) expression -> expression . MINUS_EQUAL expression_0
    (76) expression -> expression . MULTIPLICATION_DIVISION expression_0
    (77) expression -> expression . DIVIDE_EQUAL expression_0

    POINT_COMMA     shift and go to state 136
    EQUAL           shift and go to state 74
    PLUS_EQUAL      shift and go to state 75
    MINUS_EQUAL     shift and go to state 76
    MULTIPLICATION_DIVISION shift and go to state 77
    DIVIDE_EQUAL    shift and go to state 78


state 87

    (70) expressionStatement -> RETURN POINT_COMMA .

    CLOSE_KEYS      reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    OPEN_KEYS       reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    FOR             reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    WHILE           reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    IF              reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    BREAK           reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    CONTINUE        reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    POINT_COMMA     reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    RETURN          reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    VOID            reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    STRING          reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    BOOL            reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    INT             reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    FLOAT           reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    VAR             reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    MINUS           reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    PLUS_PLUS       reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    MINUS_MINUS     reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    INVERT          reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    OPEN_PARENTHESES reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    ID              reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    STRING_LITERAL  reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    NUMBER          reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)
    ELSE            reduce using rule 70 (expressionStatement -> RETURN POINT_COMMA .)


state 88

    (79) expression_0 -> expression_0 OR . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_1                   shift and go to state 137
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 89

    (81) expression_1 -> expression_1 AND . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_2                   shift and go to state 138
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 90

    (83) expression_2 -> expression_2 EQUAL_EQUAL . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_3                   shift and go to state 139
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 91

    (84) expression_2 -> expression_2 DIFFERENT . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_3                   shift and go to state 140
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 92

    (86) expression_3 -> expression_3 EQUAL_EQUAL . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_4                   shift and go to state 141
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 93

    (87) expression_3 -> expression_3 DIFFERENT . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_4                   shift and go to state 142
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 94

    (89) expression_4 -> expression_4 LESS_THAN . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_5                   shift and go to state 143
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 95

    (90) expression_4 -> expression_4 GREATER_THAN . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_5                   shift and go to state 144
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 96

    (91) expression_4 -> expression_4 LESS_THAN_OR_EQUAL_TO . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_5                   shift and go to state 145
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 97

    (92) expression_4 -> expression_4 GREATER_THAN_OR_EQUAL_TO . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_5                   shift and go to state 146
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 98

    (94) expression_5 -> expression_5 LOGIC_OR . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_6                   shift and go to state 147
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 99

    (96) expression_6 -> expression_6 LOGIC_AND . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_7                   shift and go to state 148
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 100

    (98) expression_7 -> expression_7 SHIFT_LEFT . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_8                   shift and go to state 149
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 101

    (99) expression_7 -> expression_7 SHIFT_RIGHT . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_8                   shift and go to state 150
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 102

    (101) expression_8 -> expression_8 PLUS . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_9                   shift and go to state 151
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 103

    (102) expression_8 -> expression_8 MINUS . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_9                   shift and go to state 152
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 104

    (104) expression_9 -> expression_9 MULT . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_10                  shift and go to state 153
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 105

    (105) expression_9 -> expression_9 PERCENTAGE . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_10                  shift and go to state 154
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 106

    (106) expression_9 -> expression_9 DIVIDE . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_10                  shift and go to state 155
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 107

    (108) expression_10 -> MINUS expression_10 .

    MULT            reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    PERCENTAGE      reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    DIVIDE          reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    PLUS            reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    MINUS           reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    SHIFT_LEFT      reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    SHIFT_RIGHT     reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    LOGIC_AND       reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    LOGIC_OR        reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    LESS_THAN       reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    GREATER_THAN    reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    EQUAL_EQUAL     reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    DIFFERENT       reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    AND             reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    OR              reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    POINT_COMMA     reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    EQUAL           reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    PLUS_EQUAL      reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    MINUS_EQUAL     reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    MULTIPLICATION_DIVISION reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    DIVIDE_EQUAL    reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    CLOSE_PARENTHESES reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    COMMA           reduce using rule 108 (expression_10 -> MINUS expression_10 .)
    POINT_V         reduce using rule 108 (expression_10 -> MINUS expression_10 .)


state 108

    (109) expression_10 -> PLUS_PLUS expression_10 .

    MULT            reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    PERCENTAGE      reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    DIVIDE          reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    PLUS            reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    MINUS           reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    SHIFT_LEFT      reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    SHIFT_RIGHT     reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    LOGIC_AND       reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    LOGIC_OR        reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    LESS_THAN       reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    GREATER_THAN    reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    EQUAL_EQUAL     reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    DIFFERENT       reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    AND             reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    OR              reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    POINT_COMMA     reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    EQUAL           reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    PLUS_EQUAL      reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    MINUS_EQUAL     reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    MULTIPLICATION_DIVISION reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    DIVIDE_EQUAL    reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    CLOSE_PARENTHESES reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    COMMA           reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)
    POINT_V         reduce using rule 109 (expression_10 -> PLUS_PLUS expression_10 .)


state 109

    (110) expression_10 -> MINUS_MINUS expression_10 .

    MULT            reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    PERCENTAGE      reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    DIVIDE          reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    PLUS            reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    MINUS           reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    SHIFT_LEFT      reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    SHIFT_RIGHT     reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    LOGIC_AND       reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    LOGIC_OR        reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    LESS_THAN       reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    GREATER_THAN    reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    EQUAL_EQUAL     reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    DIFFERENT       reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    AND             reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    OR              reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    POINT_COMMA     reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    EQUAL           reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    PLUS_EQUAL      reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    MINUS_EQUAL     reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    MULTIPLICATION_DIVISION reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    DIVIDE_EQUAL    reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    CLOSE_PARENTHESES reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    COMMA           reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)
    POINT_V         reduce using rule 110 (expression_10 -> MINUS_MINUS expression_10 .)


state 110

    (111) expression_10 -> INVERT expression_10 .

    MULT            reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    PERCENTAGE      reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    DIVIDE          reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    PLUS            reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    MINUS           reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    SHIFT_LEFT      reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    SHIFT_RIGHT     reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    LOGIC_AND       reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    LOGIC_OR        reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    LESS_THAN       reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    GREATER_THAN    reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    EQUAL_EQUAL     reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    DIFFERENT       reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    AND             reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    OR              reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    POINT_COMMA     reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    EQUAL           reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    PLUS_EQUAL      reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    MINUS_EQUAL     reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    MULTIPLICATION_DIVISION reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    DIVIDE_EQUAL    reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    CLOSE_PARENTHESES reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    COMMA           reduce using rule 111 (expression_10 -> INVERT expression_10 .)
    POINT_V         reduce using rule 111 (expression_10 -> INVERT expression_10 .)


state 111

    (113) expression_11 -> expression_11 MINUS_MINUS .

    MINUS_MINUS     reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    PLUS_PLUS       reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    OPEN_CONCHETE   reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    MULT            reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    PERCENTAGE      reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    DIVIDE          reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    PLUS            reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    MINUS           reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    SHIFT_LEFT      reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    SHIFT_RIGHT     reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    LOGIC_AND       reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    LOGIC_OR        reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    LESS_THAN       reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    GREATER_THAN    reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    EQUAL_EQUAL     reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    DIFFERENT       reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    AND             reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    OR              reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    POINT_COMMA     reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    EQUAL           reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    PLUS_EQUAL      reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    MINUS_EQUAL     reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    MULTIPLICATION_DIVISION reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    DIVIDE_EQUAL    reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    CLOSE_PARENTHESES reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    COMMA           reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    POINT_V         reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)
    CLOSE_CONCHETE  reduce using rule 113 (expression_11 -> expression_11 MINUS_MINUS .)


state 112

    (114) expression_11 -> expression_11 PLUS_PLUS .

    MINUS_MINUS     reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    PLUS_PLUS       reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    OPEN_CONCHETE   reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    MULT            reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    PERCENTAGE      reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    DIVIDE          reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    PLUS            reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    MINUS           reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    SHIFT_LEFT      reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    SHIFT_RIGHT     reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    LOGIC_AND       reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    LOGIC_OR        reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    LESS_THAN       reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    GREATER_THAN    reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    EQUAL_EQUAL     reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    DIFFERENT       reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    AND             reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    OR              reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    POINT_COMMA     reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    EQUAL           reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    PLUS_EQUAL      reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    MINUS_EQUAL     reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    MULTIPLICATION_DIVISION reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    DIVIDE_EQUAL    reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    CLOSE_PARENTHESES reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    COMMA           reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    POINT_V         reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)
    CLOSE_CONCHETE  reduce using rule 114 (expression_11 -> expression_11 PLUS_PLUS .)


state 113

    (115) expression_11 -> expression_11 OPEN_CONCHETE . expression_11 CLOSE_CONCHETE
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression_11                  shift and go to state 156
    expression_12                  shift and go to state 59

state 114

    (4) topLevelDeclaration -> type initializedIdentifierList POINT_V topLevelDeclaration .

    $end            reduce using rule 4 (topLevelDeclaration -> type initializedIdentifierList POINT_V topLevelDeclaration .)


state 115

    (5) initializedIdentifierList -> ID EQUAL expression . p_initializedIdentifierList_estrela
    (73) expression -> expression . EQUAL expression_0
    (74) expression -> expression . PLUS_EQUAL expression_0
    (75) expression -> expression . MINUS_EQUAL expression_0
    (76) expression -> expression . MULTIPLICATION_DIVISION expression_0
    (77) expression -> expression . DIVIDE_EQUAL expression_0
    (6) p_initializedIdentifierList_estrela -> . COMMA ID EQUAL expression
    (7) p_initializedIdentifierList_estrela -> . COMMA ID EQUAL expression p_initializedIdentifierList_estrela

    EQUAL           shift and go to state 74
    PLUS_EQUAL      shift and go to state 75
    MINUS_EQUAL     shift and go to state 76
    MULTIPLICATION_DIVISION shift and go to state 77
    DIVIDE_EQUAL    shift and go to state 78
    COMMA           shift and go to state 158

    p_initializedIdentifierList_estrela shift and go to state 157

state 116

    (18) formalParameterList -> OPEN_PARENTHESES normalFormalParameters COMMA . CLOSE_PARENTHESES

    CLOSE_PARENTHESES shift and go to state 159


state 117

    (19) formalParameterList -> OPEN_PARENTHESES normalFormalParameters CLOSE_PARENTHESES .

    OPEN_KEYS       reduce using rule 19 (formalParameterList -> OPEN_PARENTHESES normalFormalParameters CLOSE_PARENTHESES .)


state 118

    (20) normalFormalParameters -> normalFormalParameter p_normalFormalParameters_estrela .

    COMMA           reduce using rule 20 (normalFormalParameters -> normalFormalParameter p_normalFormalParameters_estrela .)
    CLOSE_PARENTHESES reduce using rule 20 (normalFormalParameters -> normalFormalParameter p_normalFormalParameters_estrela .)


state 119

    (21) p_normalFormalParameters_estrela -> COMMA . normalFormalParameter
    (22) p_normalFormalParameters_estrela -> COMMA . normalFormalParameter p_normalFormalParameters_estrela
    (23) normalFormalParameter -> . type ID
    (10) type -> . VOID
    (11) type -> . STRING
    (12) type -> . BOOL
    (13) type -> . INT
    (14) type -> . FLOAT
    (15) type -> . VAR

    VOID            shift and go to state 5
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    VAR             shift and go to state 10

    normalFormalParameter          shift and go to state 160
    type                           shift and go to state 68

state 120

    (23) normalFormalParameter -> type ID .

    COMMA           reduce using rule 23 (normalFormalParameter -> type ID .)
    CLOSE_PARENTHESES reduce using rule 23 (normalFormalParameter -> type ID .)


state 121

    (37) localVariableDeclaration -> type ID EQUAL . expression expression_one_equal POINT_COMMA
    (39) localVariableDeclaration -> type ID EQUAL . expression COMMA ID POINT_COMMA
    (73) expression -> . expression EQUAL expression_0
    (74) expression -> . expression PLUS_EQUAL expression_0
    (75) expression -> . expression MINUS_EQUAL expression_0
    (76) expression -> . expression MULTIPLICATION_DIVISION expression_0
    (77) expression -> . expression DIVIDE_EQUAL expression_0
    (78) expression -> . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression                     shift and go to state 161
    expression_0                   shift and go to state 43
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 122

    (38) localVariableDeclaration -> type ID expression_one_equal . POINT_COMMA

    POINT_COMMA     shift and go to state 162


state 123

    (40) localVariableDeclaration -> type ID COMMA . ID POINT_COMMA
    (41) expression_one_equal -> COMMA . ID EQUAL expression
    (42) expression_one_equal -> COMMA . ID
    (43) expression_one_equal -> COMMA . ID EQUAL expression expression_one_equal
    (44) expression_one_equal -> COMMA . ID expression_one_equal

    ID              shift and go to state 163


state 124

    (122) expression_12 -> ID OPEN_PARENTHESES normalFormalParameter . CLOSE_PARENTHESES

    CLOSE_PARENTHESES shift and go to state 164


state 125

    (73) expression -> expression EQUAL expression_0 .
    (79) expression_0 -> expression_0 . OR expression_1

    POINT_COMMA     reduce using rule 73 (expression -> expression EQUAL expression_0 .)
    EQUAL           reduce using rule 73 (expression -> expression EQUAL expression_0 .)
    PLUS_EQUAL      reduce using rule 73 (expression -> expression EQUAL expression_0 .)
    MINUS_EQUAL     reduce using rule 73 (expression -> expression EQUAL expression_0 .)
    MULTIPLICATION_DIVISION reduce using rule 73 (expression -> expression EQUAL expression_0 .)
    DIVIDE_EQUAL    reduce using rule 73 (expression -> expression EQUAL expression_0 .)
    CLOSE_PARENTHESES reduce using rule 73 (expression -> expression EQUAL expression_0 .)
    COMMA           reduce using rule 73 (expression -> expression EQUAL expression_0 .)
    POINT_V         reduce using rule 73 (expression -> expression EQUAL expression_0 .)
    OR              shift and go to state 88


state 126

    (74) expression -> expression PLUS_EQUAL expression_0 .
    (79) expression_0 -> expression_0 . OR expression_1

    POINT_COMMA     reduce using rule 74 (expression -> expression PLUS_EQUAL expression_0 .)
    EQUAL           reduce using rule 74 (expression -> expression PLUS_EQUAL expression_0 .)
    PLUS_EQUAL      reduce using rule 74 (expression -> expression PLUS_EQUAL expression_0 .)
    MINUS_EQUAL     reduce using rule 74 (expression -> expression PLUS_EQUAL expression_0 .)
    MULTIPLICATION_DIVISION reduce using rule 74 (expression -> expression PLUS_EQUAL expression_0 .)
    DIVIDE_EQUAL    reduce using rule 74 (expression -> expression PLUS_EQUAL expression_0 .)
    CLOSE_PARENTHESES reduce using rule 74 (expression -> expression PLUS_EQUAL expression_0 .)
    COMMA           reduce using rule 74 (expression -> expression PLUS_EQUAL expression_0 .)
    POINT_V         reduce using rule 74 (expression -> expression PLUS_EQUAL expression_0 .)
    OR              shift and go to state 88


state 127

    (75) expression -> expression MINUS_EQUAL expression_0 .
    (79) expression_0 -> expression_0 . OR expression_1

    POINT_COMMA     reduce using rule 75 (expression -> expression MINUS_EQUAL expression_0 .)
    EQUAL           reduce using rule 75 (expression -> expression MINUS_EQUAL expression_0 .)
    PLUS_EQUAL      reduce using rule 75 (expression -> expression MINUS_EQUAL expression_0 .)
    MINUS_EQUAL     reduce using rule 75 (expression -> expression MINUS_EQUAL expression_0 .)
    MULTIPLICATION_DIVISION reduce using rule 75 (expression -> expression MINUS_EQUAL expression_0 .)
    DIVIDE_EQUAL    reduce using rule 75 (expression -> expression MINUS_EQUAL expression_0 .)
    CLOSE_PARENTHESES reduce using rule 75 (expression -> expression MINUS_EQUAL expression_0 .)
    COMMA           reduce using rule 75 (expression -> expression MINUS_EQUAL expression_0 .)
    POINT_V         reduce using rule 75 (expression -> expression MINUS_EQUAL expression_0 .)
    OR              shift and go to state 88


state 128

    (76) expression -> expression MULTIPLICATION_DIVISION expression_0 .
    (79) expression_0 -> expression_0 . OR expression_1

    POINT_COMMA     reduce using rule 76 (expression -> expression MULTIPLICATION_DIVISION expression_0 .)
    EQUAL           reduce using rule 76 (expression -> expression MULTIPLICATION_DIVISION expression_0 .)
    PLUS_EQUAL      reduce using rule 76 (expression -> expression MULTIPLICATION_DIVISION expression_0 .)
    MINUS_EQUAL     reduce using rule 76 (expression -> expression MULTIPLICATION_DIVISION expression_0 .)
    MULTIPLICATION_DIVISION reduce using rule 76 (expression -> expression MULTIPLICATION_DIVISION expression_0 .)
    DIVIDE_EQUAL    reduce using rule 76 (expression -> expression MULTIPLICATION_DIVISION expression_0 .)
    CLOSE_PARENTHESES reduce using rule 76 (expression -> expression MULTIPLICATION_DIVISION expression_0 .)
    COMMA           reduce using rule 76 (expression -> expression MULTIPLICATION_DIVISION expression_0 .)
    POINT_V         reduce using rule 76 (expression -> expression MULTIPLICATION_DIVISION expression_0 .)
    OR              shift and go to state 88


state 129

    (77) expression -> expression DIVIDE_EQUAL expression_0 .
    (79) expression_0 -> expression_0 . OR expression_1

    POINT_COMMA     reduce using rule 77 (expression -> expression DIVIDE_EQUAL expression_0 .)
    EQUAL           reduce using rule 77 (expression -> expression DIVIDE_EQUAL expression_0 .)
    PLUS_EQUAL      reduce using rule 77 (expression -> expression DIVIDE_EQUAL expression_0 .)
    MINUS_EQUAL     reduce using rule 77 (expression -> expression DIVIDE_EQUAL expression_0 .)
    MULTIPLICATION_DIVISION reduce using rule 77 (expression -> expression DIVIDE_EQUAL expression_0 .)
    DIVIDE_EQUAL    reduce using rule 77 (expression -> expression DIVIDE_EQUAL expression_0 .)
    CLOSE_PARENTHESES reduce using rule 77 (expression -> expression DIVIDE_EQUAL expression_0 .)
    COMMA           reduce using rule 77 (expression -> expression DIVIDE_EQUAL expression_0 .)
    POINT_V         reduce using rule 77 (expression -> expression DIVIDE_EQUAL expression_0 .)
    OR              shift and go to state 88


state 130

    (45) forStatement -> FOR OPEN_PARENTHESES forLoopParts . CLOSE_PARENTHESES statement
    (46) forStatement -> FOR OPEN_PARENTHESES forLoopParts . CLOSE_PARENTHESES body

    CLOSE_PARENTHESES shift and go to state 165


state 131

    (55) forLoopParts -> type . ID IN expression

    ID              shift and go to state 166


state 132

    (56) forLoopParts -> ID . IN expression

    IN              shift and go to state 167


state 133

    (116) expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .

    MINUS_MINUS     reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    PLUS_PLUS       reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    OPEN_CONCHETE   reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    MULT            reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    PERCENTAGE      reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    DIVIDE          reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    PLUS            reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    MINUS           reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    SHIFT_LEFT      reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    SHIFT_RIGHT     reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    LOGIC_AND       reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    LOGIC_OR        reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    LESS_THAN       reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    GREATER_THAN    reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    EQUAL_EQUAL     reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    DIFFERENT       reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    AND             reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    OR              reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    POINT_COMMA     reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    EQUAL           reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    PLUS_EQUAL      reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    MINUS_EQUAL     reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    MULTIPLICATION_DIVISION reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    DIVIDE_EQUAL    reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    CLOSE_PARENTHESES reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    COMMA           reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    POINT_V         reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)
    CLOSE_CONCHETE  reduce using rule 116 (expression_11 -> OPEN_PARENTHESES expression CLOSE_PARENTHESES .)


state 134

    (59) whileStatement -> WHILE OPEN_PARENTHESES expression . CLOSE_PARENTHESES statement
    (60) whileStatement -> WHILE OPEN_PARENTHESES expression . CLOSE_PARENTHESES body
    (73) expression -> expression . EQUAL expression_0
    (74) expression -> expression . PLUS_EQUAL expression_0
    (75) expression -> expression . MINUS_EQUAL expression_0
    (76) expression -> expression . MULTIPLICATION_DIVISION expression_0
    (77) expression -> expression . DIVIDE_EQUAL expression_0

    CLOSE_PARENTHESES shift and go to state 168
    EQUAL           shift and go to state 74
    PLUS_EQUAL      shift and go to state 75
    MINUS_EQUAL     shift and go to state 76
    MULTIPLICATION_DIVISION shift and go to state 77
    DIVIDE_EQUAL    shift and go to state 78


state 135

    (61) ifStatement -> IF OPEN_PARENTHESES expression . CLOSE_PARENTHESES statement ELSE statement
    (62) ifStatement -> IF OPEN_PARENTHESES expression . CLOSE_PARENTHESES body ELSE body
    (63) ifStatement -> IF OPEN_PARENTHESES expression . CLOSE_PARENTHESES statement ELSE body
    (64) ifStatement -> IF OPEN_PARENTHESES expression . CLOSE_PARENTHESES statement
    (65) ifStatement -> IF OPEN_PARENTHESES expression . CLOSE_PARENTHESES body
    (66) ifStatement -> IF OPEN_PARENTHESES expression . CLOSE_PARENTHESES body ELSE statement
    (73) expression -> expression . EQUAL expression_0
    (74) expression -> expression . PLUS_EQUAL expression_0
    (75) expression -> expression . MINUS_EQUAL expression_0
    (76) expression -> expression . MULTIPLICATION_DIVISION expression_0
    (77) expression -> expression . DIVIDE_EQUAL expression_0

    CLOSE_PARENTHESES shift and go to state 169
    EQUAL           shift and go to state 74
    PLUS_EQUAL      shift and go to state 75
    MINUS_EQUAL     shift and go to state 76
    MULTIPLICATION_DIVISION shift and go to state 77
    DIVIDE_EQUAL    shift and go to state 78


state 136

    (69) expressionStatement -> RETURN expression POINT_COMMA .

    CLOSE_KEYS      reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    OPEN_KEYS       reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    FOR             reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    WHILE           reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    IF              reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    BREAK           reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    CONTINUE        reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    POINT_COMMA     reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    RETURN          reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    VOID            reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    STRING          reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    BOOL            reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    INT             reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    FLOAT           reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    VAR             reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    MINUS           reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    PLUS_PLUS       reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    MINUS_MINUS     reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    INVERT          reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    OPEN_PARENTHESES reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    ID              reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    STRING_LITERAL  reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    NUMBER          reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)
    ELSE            reduce using rule 69 (expressionStatement -> RETURN expression POINT_COMMA .)


state 137

    (79) expression_0 -> expression_0 OR expression_1 .
    (81) expression_1 -> expression_1 . AND expression_2

    OR              reduce using rule 79 (expression_0 -> expression_0 OR expression_1 .)
    POINT_COMMA     reduce using rule 79 (expression_0 -> expression_0 OR expression_1 .)
    EQUAL           reduce using rule 79 (expression_0 -> expression_0 OR expression_1 .)
    PLUS_EQUAL      reduce using rule 79 (expression_0 -> expression_0 OR expression_1 .)
    MINUS_EQUAL     reduce using rule 79 (expression_0 -> expression_0 OR expression_1 .)
    MULTIPLICATION_DIVISION reduce using rule 79 (expression_0 -> expression_0 OR expression_1 .)
    DIVIDE_EQUAL    reduce using rule 79 (expression_0 -> expression_0 OR expression_1 .)
    CLOSE_PARENTHESES reduce using rule 79 (expression_0 -> expression_0 OR expression_1 .)
    COMMA           reduce using rule 79 (expression_0 -> expression_0 OR expression_1 .)
    POINT_V         reduce using rule 79 (expression_0 -> expression_0 OR expression_1 .)
    AND             shift and go to state 89


state 138

    (81) expression_1 -> expression_1 AND expression_2 .
    (83) expression_2 -> expression_2 . EQUAL_EQUAL expression_3
    (84) expression_2 -> expression_2 . DIFFERENT expression_3

    AND             reduce using rule 81 (expression_1 -> expression_1 AND expression_2 .)
    OR              reduce using rule 81 (expression_1 -> expression_1 AND expression_2 .)
    POINT_COMMA     reduce using rule 81 (expression_1 -> expression_1 AND expression_2 .)
    EQUAL           reduce using rule 81 (expression_1 -> expression_1 AND expression_2 .)
    PLUS_EQUAL      reduce using rule 81 (expression_1 -> expression_1 AND expression_2 .)
    MINUS_EQUAL     reduce using rule 81 (expression_1 -> expression_1 AND expression_2 .)
    MULTIPLICATION_DIVISION reduce using rule 81 (expression_1 -> expression_1 AND expression_2 .)
    DIVIDE_EQUAL    reduce using rule 81 (expression_1 -> expression_1 AND expression_2 .)
    CLOSE_PARENTHESES reduce using rule 81 (expression_1 -> expression_1 AND expression_2 .)
    COMMA           reduce using rule 81 (expression_1 -> expression_1 AND expression_2 .)
    POINT_V         reduce using rule 81 (expression_1 -> expression_1 AND expression_2 .)
    EQUAL_EQUAL     shift and go to state 90
    DIFFERENT       shift and go to state 91


state 139

    (83) expression_2 -> expression_2 EQUAL_EQUAL expression_3 .
    (86) expression_3 -> expression_3 . EQUAL_EQUAL expression_4
    (87) expression_3 -> expression_3 . DIFFERENT expression_4

  ! shift/reduce conflict for EQUAL_EQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    AND             reduce using rule 83 (expression_2 -> expression_2 EQUAL_EQUAL expression_3 .)
    OR              reduce using rule 83 (expression_2 -> expression_2 EQUAL_EQUAL expression_3 .)
    POINT_COMMA     reduce using rule 83 (expression_2 -> expression_2 EQUAL_EQUAL expression_3 .)
    EQUAL           reduce using rule 83 (expression_2 -> expression_2 EQUAL_EQUAL expression_3 .)
    PLUS_EQUAL      reduce using rule 83 (expression_2 -> expression_2 EQUAL_EQUAL expression_3 .)
    MINUS_EQUAL     reduce using rule 83 (expression_2 -> expression_2 EQUAL_EQUAL expression_3 .)
    MULTIPLICATION_DIVISION reduce using rule 83 (expression_2 -> expression_2 EQUAL_EQUAL expression_3 .)
    DIVIDE_EQUAL    reduce using rule 83 (expression_2 -> expression_2 EQUAL_EQUAL expression_3 .)
    CLOSE_PARENTHESES reduce using rule 83 (expression_2 -> expression_2 EQUAL_EQUAL expression_3 .)
    COMMA           reduce using rule 83 (expression_2 -> expression_2 EQUAL_EQUAL expression_3 .)
    POINT_V         reduce using rule 83 (expression_2 -> expression_2 EQUAL_EQUAL expression_3 .)
    EQUAL_EQUAL     shift and go to state 92
    DIFFERENT       shift and go to state 93

  ! EQUAL_EQUAL     [ reduce using rule 83 (expression_2 -> expression_2 EQUAL_EQUAL expression_3 .) ]
  ! DIFFERENT       [ reduce using rule 83 (expression_2 -> expression_2 EQUAL_EQUAL expression_3 .) ]


state 140

    (84) expression_2 -> expression_2 DIFFERENT expression_3 .
    (86) expression_3 -> expression_3 . EQUAL_EQUAL expression_4
    (87) expression_3 -> expression_3 . DIFFERENT expression_4

  ! shift/reduce conflict for EQUAL_EQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    AND             reduce using rule 84 (expression_2 -> expression_2 DIFFERENT expression_3 .)
    OR              reduce using rule 84 (expression_2 -> expression_2 DIFFERENT expression_3 .)
    POINT_COMMA     reduce using rule 84 (expression_2 -> expression_2 DIFFERENT expression_3 .)
    EQUAL           reduce using rule 84 (expression_2 -> expression_2 DIFFERENT expression_3 .)
    PLUS_EQUAL      reduce using rule 84 (expression_2 -> expression_2 DIFFERENT expression_3 .)
    MINUS_EQUAL     reduce using rule 84 (expression_2 -> expression_2 DIFFERENT expression_3 .)
    MULTIPLICATION_DIVISION reduce using rule 84 (expression_2 -> expression_2 DIFFERENT expression_3 .)
    DIVIDE_EQUAL    reduce using rule 84 (expression_2 -> expression_2 DIFFERENT expression_3 .)
    CLOSE_PARENTHESES reduce using rule 84 (expression_2 -> expression_2 DIFFERENT expression_3 .)
    COMMA           reduce using rule 84 (expression_2 -> expression_2 DIFFERENT expression_3 .)
    POINT_V         reduce using rule 84 (expression_2 -> expression_2 DIFFERENT expression_3 .)
    EQUAL_EQUAL     shift and go to state 92
    DIFFERENT       shift and go to state 93

  ! EQUAL_EQUAL     [ reduce using rule 84 (expression_2 -> expression_2 DIFFERENT expression_3 .) ]
  ! DIFFERENT       [ reduce using rule 84 (expression_2 -> expression_2 DIFFERENT expression_3 .) ]


state 141

    (86) expression_3 -> expression_3 EQUAL_EQUAL expression_4 .
    (89) expression_4 -> expression_4 . LESS_THAN expression_5
    (90) expression_4 -> expression_4 . GREATER_THAN expression_5
    (91) expression_4 -> expression_4 . LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> expression_4 . GREATER_THAN_OR_EQUAL_TO expression_5

    EQUAL_EQUAL     reduce using rule 86 (expression_3 -> expression_3 EQUAL_EQUAL expression_4 .)
    DIFFERENT       reduce using rule 86 (expression_3 -> expression_3 EQUAL_EQUAL expression_4 .)
    AND             reduce using rule 86 (expression_3 -> expression_3 EQUAL_EQUAL expression_4 .)
    OR              reduce using rule 86 (expression_3 -> expression_3 EQUAL_EQUAL expression_4 .)
    POINT_COMMA     reduce using rule 86 (expression_3 -> expression_3 EQUAL_EQUAL expression_4 .)
    EQUAL           reduce using rule 86 (expression_3 -> expression_3 EQUAL_EQUAL expression_4 .)
    PLUS_EQUAL      reduce using rule 86 (expression_3 -> expression_3 EQUAL_EQUAL expression_4 .)
    MINUS_EQUAL     reduce using rule 86 (expression_3 -> expression_3 EQUAL_EQUAL expression_4 .)
    MULTIPLICATION_DIVISION reduce using rule 86 (expression_3 -> expression_3 EQUAL_EQUAL expression_4 .)
    DIVIDE_EQUAL    reduce using rule 86 (expression_3 -> expression_3 EQUAL_EQUAL expression_4 .)
    CLOSE_PARENTHESES reduce using rule 86 (expression_3 -> expression_3 EQUAL_EQUAL expression_4 .)
    COMMA           reduce using rule 86 (expression_3 -> expression_3 EQUAL_EQUAL expression_4 .)
    POINT_V         reduce using rule 86 (expression_3 -> expression_3 EQUAL_EQUAL expression_4 .)
    LESS_THAN       shift and go to state 94
    GREATER_THAN    shift and go to state 95
    LESS_THAN_OR_EQUAL_TO shift and go to state 96
    GREATER_THAN_OR_EQUAL_TO shift and go to state 97


state 142

    (87) expression_3 -> expression_3 DIFFERENT expression_4 .
    (89) expression_4 -> expression_4 . LESS_THAN expression_5
    (90) expression_4 -> expression_4 . GREATER_THAN expression_5
    (91) expression_4 -> expression_4 . LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> expression_4 . GREATER_THAN_OR_EQUAL_TO expression_5

    EQUAL_EQUAL     reduce using rule 87 (expression_3 -> expression_3 DIFFERENT expression_4 .)
    DIFFERENT       reduce using rule 87 (expression_3 -> expression_3 DIFFERENT expression_4 .)
    AND             reduce using rule 87 (expression_3 -> expression_3 DIFFERENT expression_4 .)
    OR              reduce using rule 87 (expression_3 -> expression_3 DIFFERENT expression_4 .)
    POINT_COMMA     reduce using rule 87 (expression_3 -> expression_3 DIFFERENT expression_4 .)
    EQUAL           reduce using rule 87 (expression_3 -> expression_3 DIFFERENT expression_4 .)
    PLUS_EQUAL      reduce using rule 87 (expression_3 -> expression_3 DIFFERENT expression_4 .)
    MINUS_EQUAL     reduce using rule 87 (expression_3 -> expression_3 DIFFERENT expression_4 .)
    MULTIPLICATION_DIVISION reduce using rule 87 (expression_3 -> expression_3 DIFFERENT expression_4 .)
    DIVIDE_EQUAL    reduce using rule 87 (expression_3 -> expression_3 DIFFERENT expression_4 .)
    CLOSE_PARENTHESES reduce using rule 87 (expression_3 -> expression_3 DIFFERENT expression_4 .)
    COMMA           reduce using rule 87 (expression_3 -> expression_3 DIFFERENT expression_4 .)
    POINT_V         reduce using rule 87 (expression_3 -> expression_3 DIFFERENT expression_4 .)
    LESS_THAN       shift and go to state 94
    GREATER_THAN    shift and go to state 95
    LESS_THAN_OR_EQUAL_TO shift and go to state 96
    GREATER_THAN_OR_EQUAL_TO shift and go to state 97


state 143

    (89) expression_4 -> expression_4 LESS_THAN expression_5 .
    (94) expression_5 -> expression_5 . LOGIC_OR expression_6

    LESS_THAN       reduce using rule 89 (expression_4 -> expression_4 LESS_THAN expression_5 .)
    GREATER_THAN    reduce using rule 89 (expression_4 -> expression_4 LESS_THAN expression_5 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 89 (expression_4 -> expression_4 LESS_THAN expression_5 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 89 (expression_4 -> expression_4 LESS_THAN expression_5 .)
    EQUAL_EQUAL     reduce using rule 89 (expression_4 -> expression_4 LESS_THAN expression_5 .)
    DIFFERENT       reduce using rule 89 (expression_4 -> expression_4 LESS_THAN expression_5 .)
    AND             reduce using rule 89 (expression_4 -> expression_4 LESS_THAN expression_5 .)
    OR              reduce using rule 89 (expression_4 -> expression_4 LESS_THAN expression_5 .)
    POINT_COMMA     reduce using rule 89 (expression_4 -> expression_4 LESS_THAN expression_5 .)
    EQUAL           reduce using rule 89 (expression_4 -> expression_4 LESS_THAN expression_5 .)
    PLUS_EQUAL      reduce using rule 89 (expression_4 -> expression_4 LESS_THAN expression_5 .)
    MINUS_EQUAL     reduce using rule 89 (expression_4 -> expression_4 LESS_THAN expression_5 .)
    MULTIPLICATION_DIVISION reduce using rule 89 (expression_4 -> expression_4 LESS_THAN expression_5 .)
    DIVIDE_EQUAL    reduce using rule 89 (expression_4 -> expression_4 LESS_THAN expression_5 .)
    CLOSE_PARENTHESES reduce using rule 89 (expression_4 -> expression_4 LESS_THAN expression_5 .)
    COMMA           reduce using rule 89 (expression_4 -> expression_4 LESS_THAN expression_5 .)
    POINT_V         reduce using rule 89 (expression_4 -> expression_4 LESS_THAN expression_5 .)
    LOGIC_OR        shift and go to state 98


state 144

    (90) expression_4 -> expression_4 GREATER_THAN expression_5 .
    (94) expression_5 -> expression_5 . LOGIC_OR expression_6

    LESS_THAN       reduce using rule 90 (expression_4 -> expression_4 GREATER_THAN expression_5 .)
    GREATER_THAN    reduce using rule 90 (expression_4 -> expression_4 GREATER_THAN expression_5 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 90 (expression_4 -> expression_4 GREATER_THAN expression_5 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 90 (expression_4 -> expression_4 GREATER_THAN expression_5 .)
    EQUAL_EQUAL     reduce using rule 90 (expression_4 -> expression_4 GREATER_THAN expression_5 .)
    DIFFERENT       reduce using rule 90 (expression_4 -> expression_4 GREATER_THAN expression_5 .)
    AND             reduce using rule 90 (expression_4 -> expression_4 GREATER_THAN expression_5 .)
    OR              reduce using rule 90 (expression_4 -> expression_4 GREATER_THAN expression_5 .)
    POINT_COMMA     reduce using rule 90 (expression_4 -> expression_4 GREATER_THAN expression_5 .)
    EQUAL           reduce using rule 90 (expression_4 -> expression_4 GREATER_THAN expression_5 .)
    PLUS_EQUAL      reduce using rule 90 (expression_4 -> expression_4 GREATER_THAN expression_5 .)
    MINUS_EQUAL     reduce using rule 90 (expression_4 -> expression_4 GREATER_THAN expression_5 .)
    MULTIPLICATION_DIVISION reduce using rule 90 (expression_4 -> expression_4 GREATER_THAN expression_5 .)
    DIVIDE_EQUAL    reduce using rule 90 (expression_4 -> expression_4 GREATER_THAN expression_5 .)
    CLOSE_PARENTHESES reduce using rule 90 (expression_4 -> expression_4 GREATER_THAN expression_5 .)
    COMMA           reduce using rule 90 (expression_4 -> expression_4 GREATER_THAN expression_5 .)
    POINT_V         reduce using rule 90 (expression_4 -> expression_4 GREATER_THAN expression_5 .)
    LOGIC_OR        shift and go to state 98


state 145

    (91) expression_4 -> expression_4 LESS_THAN_OR_EQUAL_TO expression_5 .
    (94) expression_5 -> expression_5 . LOGIC_OR expression_6

    LESS_THAN       reduce using rule 91 (expression_4 -> expression_4 LESS_THAN_OR_EQUAL_TO expression_5 .)
    GREATER_THAN    reduce using rule 91 (expression_4 -> expression_4 LESS_THAN_OR_EQUAL_TO expression_5 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 91 (expression_4 -> expression_4 LESS_THAN_OR_EQUAL_TO expression_5 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 91 (expression_4 -> expression_4 LESS_THAN_OR_EQUAL_TO expression_5 .)
    EQUAL_EQUAL     reduce using rule 91 (expression_4 -> expression_4 LESS_THAN_OR_EQUAL_TO expression_5 .)
    DIFFERENT       reduce using rule 91 (expression_4 -> expression_4 LESS_THAN_OR_EQUAL_TO expression_5 .)
    AND             reduce using rule 91 (expression_4 -> expression_4 LESS_THAN_OR_EQUAL_TO expression_5 .)
    OR              reduce using rule 91 (expression_4 -> expression_4 LESS_THAN_OR_EQUAL_TO expression_5 .)
    POINT_COMMA     reduce using rule 91 (expression_4 -> expression_4 LESS_THAN_OR_EQUAL_TO expression_5 .)
    EQUAL           reduce using rule 91 (expression_4 -> expression_4 LESS_THAN_OR_EQUAL_TO expression_5 .)
    PLUS_EQUAL      reduce using rule 91 (expression_4 -> expression_4 LESS_THAN_OR_EQUAL_TO expression_5 .)
    MINUS_EQUAL     reduce using rule 91 (expression_4 -> expression_4 LESS_THAN_OR_EQUAL_TO expression_5 .)
    MULTIPLICATION_DIVISION reduce using rule 91 (expression_4 -> expression_4 LESS_THAN_OR_EQUAL_TO expression_5 .)
    DIVIDE_EQUAL    reduce using rule 91 (expression_4 -> expression_4 LESS_THAN_OR_EQUAL_TO expression_5 .)
    CLOSE_PARENTHESES reduce using rule 91 (expression_4 -> expression_4 LESS_THAN_OR_EQUAL_TO expression_5 .)
    COMMA           reduce using rule 91 (expression_4 -> expression_4 LESS_THAN_OR_EQUAL_TO expression_5 .)
    POINT_V         reduce using rule 91 (expression_4 -> expression_4 LESS_THAN_OR_EQUAL_TO expression_5 .)
    LOGIC_OR        shift and go to state 98


state 146

    (92) expression_4 -> expression_4 GREATER_THAN_OR_EQUAL_TO expression_5 .
    (94) expression_5 -> expression_5 . LOGIC_OR expression_6

    LESS_THAN       reduce using rule 92 (expression_4 -> expression_4 GREATER_THAN_OR_EQUAL_TO expression_5 .)
    GREATER_THAN    reduce using rule 92 (expression_4 -> expression_4 GREATER_THAN_OR_EQUAL_TO expression_5 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 92 (expression_4 -> expression_4 GREATER_THAN_OR_EQUAL_TO expression_5 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 92 (expression_4 -> expression_4 GREATER_THAN_OR_EQUAL_TO expression_5 .)
    EQUAL_EQUAL     reduce using rule 92 (expression_4 -> expression_4 GREATER_THAN_OR_EQUAL_TO expression_5 .)
    DIFFERENT       reduce using rule 92 (expression_4 -> expression_4 GREATER_THAN_OR_EQUAL_TO expression_5 .)
    AND             reduce using rule 92 (expression_4 -> expression_4 GREATER_THAN_OR_EQUAL_TO expression_5 .)
    OR              reduce using rule 92 (expression_4 -> expression_4 GREATER_THAN_OR_EQUAL_TO expression_5 .)
    POINT_COMMA     reduce using rule 92 (expression_4 -> expression_4 GREATER_THAN_OR_EQUAL_TO expression_5 .)
    EQUAL           reduce using rule 92 (expression_4 -> expression_4 GREATER_THAN_OR_EQUAL_TO expression_5 .)
    PLUS_EQUAL      reduce using rule 92 (expression_4 -> expression_4 GREATER_THAN_OR_EQUAL_TO expression_5 .)
    MINUS_EQUAL     reduce using rule 92 (expression_4 -> expression_4 GREATER_THAN_OR_EQUAL_TO expression_5 .)
    MULTIPLICATION_DIVISION reduce using rule 92 (expression_4 -> expression_4 GREATER_THAN_OR_EQUAL_TO expression_5 .)
    DIVIDE_EQUAL    reduce using rule 92 (expression_4 -> expression_4 GREATER_THAN_OR_EQUAL_TO expression_5 .)
    CLOSE_PARENTHESES reduce using rule 92 (expression_4 -> expression_4 GREATER_THAN_OR_EQUAL_TO expression_5 .)
    COMMA           reduce using rule 92 (expression_4 -> expression_4 GREATER_THAN_OR_EQUAL_TO expression_5 .)
    POINT_V         reduce using rule 92 (expression_4 -> expression_4 GREATER_THAN_OR_EQUAL_TO expression_5 .)
    LOGIC_OR        shift and go to state 98


state 147

    (94) expression_5 -> expression_5 LOGIC_OR expression_6 .
    (96) expression_6 -> expression_6 . LOGIC_AND expression_7

    LOGIC_OR        reduce using rule 94 (expression_5 -> expression_5 LOGIC_OR expression_6 .)
    LESS_THAN       reduce using rule 94 (expression_5 -> expression_5 LOGIC_OR expression_6 .)
    GREATER_THAN    reduce using rule 94 (expression_5 -> expression_5 LOGIC_OR expression_6 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 94 (expression_5 -> expression_5 LOGIC_OR expression_6 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 94 (expression_5 -> expression_5 LOGIC_OR expression_6 .)
    EQUAL_EQUAL     reduce using rule 94 (expression_5 -> expression_5 LOGIC_OR expression_6 .)
    DIFFERENT       reduce using rule 94 (expression_5 -> expression_5 LOGIC_OR expression_6 .)
    AND             reduce using rule 94 (expression_5 -> expression_5 LOGIC_OR expression_6 .)
    OR              reduce using rule 94 (expression_5 -> expression_5 LOGIC_OR expression_6 .)
    POINT_COMMA     reduce using rule 94 (expression_5 -> expression_5 LOGIC_OR expression_6 .)
    EQUAL           reduce using rule 94 (expression_5 -> expression_5 LOGIC_OR expression_6 .)
    PLUS_EQUAL      reduce using rule 94 (expression_5 -> expression_5 LOGIC_OR expression_6 .)
    MINUS_EQUAL     reduce using rule 94 (expression_5 -> expression_5 LOGIC_OR expression_6 .)
    MULTIPLICATION_DIVISION reduce using rule 94 (expression_5 -> expression_5 LOGIC_OR expression_6 .)
    DIVIDE_EQUAL    reduce using rule 94 (expression_5 -> expression_5 LOGIC_OR expression_6 .)
    CLOSE_PARENTHESES reduce using rule 94 (expression_5 -> expression_5 LOGIC_OR expression_6 .)
    COMMA           reduce using rule 94 (expression_5 -> expression_5 LOGIC_OR expression_6 .)
    POINT_V         reduce using rule 94 (expression_5 -> expression_5 LOGIC_OR expression_6 .)
    LOGIC_AND       shift and go to state 99


state 148

    (96) expression_6 -> expression_6 LOGIC_AND expression_7 .
    (98) expression_7 -> expression_7 . SHIFT_LEFT expression_8
    (99) expression_7 -> expression_7 . SHIFT_RIGHT expression_8

    LOGIC_AND       reduce using rule 96 (expression_6 -> expression_6 LOGIC_AND expression_7 .)
    LOGIC_OR        reduce using rule 96 (expression_6 -> expression_6 LOGIC_AND expression_7 .)
    LESS_THAN       reduce using rule 96 (expression_6 -> expression_6 LOGIC_AND expression_7 .)
    GREATER_THAN    reduce using rule 96 (expression_6 -> expression_6 LOGIC_AND expression_7 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 96 (expression_6 -> expression_6 LOGIC_AND expression_7 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 96 (expression_6 -> expression_6 LOGIC_AND expression_7 .)
    EQUAL_EQUAL     reduce using rule 96 (expression_6 -> expression_6 LOGIC_AND expression_7 .)
    DIFFERENT       reduce using rule 96 (expression_6 -> expression_6 LOGIC_AND expression_7 .)
    AND             reduce using rule 96 (expression_6 -> expression_6 LOGIC_AND expression_7 .)
    OR              reduce using rule 96 (expression_6 -> expression_6 LOGIC_AND expression_7 .)
    POINT_COMMA     reduce using rule 96 (expression_6 -> expression_6 LOGIC_AND expression_7 .)
    EQUAL           reduce using rule 96 (expression_6 -> expression_6 LOGIC_AND expression_7 .)
    PLUS_EQUAL      reduce using rule 96 (expression_6 -> expression_6 LOGIC_AND expression_7 .)
    MINUS_EQUAL     reduce using rule 96 (expression_6 -> expression_6 LOGIC_AND expression_7 .)
    MULTIPLICATION_DIVISION reduce using rule 96 (expression_6 -> expression_6 LOGIC_AND expression_7 .)
    DIVIDE_EQUAL    reduce using rule 96 (expression_6 -> expression_6 LOGIC_AND expression_7 .)
    CLOSE_PARENTHESES reduce using rule 96 (expression_6 -> expression_6 LOGIC_AND expression_7 .)
    COMMA           reduce using rule 96 (expression_6 -> expression_6 LOGIC_AND expression_7 .)
    POINT_V         reduce using rule 96 (expression_6 -> expression_6 LOGIC_AND expression_7 .)
    SHIFT_LEFT      shift and go to state 100
    SHIFT_RIGHT     shift and go to state 101


state 149

    (98) expression_7 -> expression_7 SHIFT_LEFT expression_8 .
    (101) expression_8 -> expression_8 . PLUS expression_9
    (102) expression_8 -> expression_8 . MINUS expression_9

    SHIFT_LEFT      reduce using rule 98 (expression_7 -> expression_7 SHIFT_LEFT expression_8 .)
    SHIFT_RIGHT     reduce using rule 98 (expression_7 -> expression_7 SHIFT_LEFT expression_8 .)
    LOGIC_AND       reduce using rule 98 (expression_7 -> expression_7 SHIFT_LEFT expression_8 .)
    LOGIC_OR        reduce using rule 98 (expression_7 -> expression_7 SHIFT_LEFT expression_8 .)
    LESS_THAN       reduce using rule 98 (expression_7 -> expression_7 SHIFT_LEFT expression_8 .)
    GREATER_THAN    reduce using rule 98 (expression_7 -> expression_7 SHIFT_LEFT expression_8 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 98 (expression_7 -> expression_7 SHIFT_LEFT expression_8 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 98 (expression_7 -> expression_7 SHIFT_LEFT expression_8 .)
    EQUAL_EQUAL     reduce using rule 98 (expression_7 -> expression_7 SHIFT_LEFT expression_8 .)
    DIFFERENT       reduce using rule 98 (expression_7 -> expression_7 SHIFT_LEFT expression_8 .)
    AND             reduce using rule 98 (expression_7 -> expression_7 SHIFT_LEFT expression_8 .)
    OR              reduce using rule 98 (expression_7 -> expression_7 SHIFT_LEFT expression_8 .)
    POINT_COMMA     reduce using rule 98 (expression_7 -> expression_7 SHIFT_LEFT expression_8 .)
    EQUAL           reduce using rule 98 (expression_7 -> expression_7 SHIFT_LEFT expression_8 .)
    PLUS_EQUAL      reduce using rule 98 (expression_7 -> expression_7 SHIFT_LEFT expression_8 .)
    MINUS_EQUAL     reduce using rule 98 (expression_7 -> expression_7 SHIFT_LEFT expression_8 .)
    MULTIPLICATION_DIVISION reduce using rule 98 (expression_7 -> expression_7 SHIFT_LEFT expression_8 .)
    DIVIDE_EQUAL    reduce using rule 98 (expression_7 -> expression_7 SHIFT_LEFT expression_8 .)
    CLOSE_PARENTHESES reduce using rule 98 (expression_7 -> expression_7 SHIFT_LEFT expression_8 .)
    COMMA           reduce using rule 98 (expression_7 -> expression_7 SHIFT_LEFT expression_8 .)
    POINT_V         reduce using rule 98 (expression_7 -> expression_7 SHIFT_LEFT expression_8 .)
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103


state 150

    (99) expression_7 -> expression_7 SHIFT_RIGHT expression_8 .
    (101) expression_8 -> expression_8 . PLUS expression_9
    (102) expression_8 -> expression_8 . MINUS expression_9

    SHIFT_LEFT      reduce using rule 99 (expression_7 -> expression_7 SHIFT_RIGHT expression_8 .)
    SHIFT_RIGHT     reduce using rule 99 (expression_7 -> expression_7 SHIFT_RIGHT expression_8 .)
    LOGIC_AND       reduce using rule 99 (expression_7 -> expression_7 SHIFT_RIGHT expression_8 .)
    LOGIC_OR        reduce using rule 99 (expression_7 -> expression_7 SHIFT_RIGHT expression_8 .)
    LESS_THAN       reduce using rule 99 (expression_7 -> expression_7 SHIFT_RIGHT expression_8 .)
    GREATER_THAN    reduce using rule 99 (expression_7 -> expression_7 SHIFT_RIGHT expression_8 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 99 (expression_7 -> expression_7 SHIFT_RIGHT expression_8 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 99 (expression_7 -> expression_7 SHIFT_RIGHT expression_8 .)
    EQUAL_EQUAL     reduce using rule 99 (expression_7 -> expression_7 SHIFT_RIGHT expression_8 .)
    DIFFERENT       reduce using rule 99 (expression_7 -> expression_7 SHIFT_RIGHT expression_8 .)
    AND             reduce using rule 99 (expression_7 -> expression_7 SHIFT_RIGHT expression_8 .)
    OR              reduce using rule 99 (expression_7 -> expression_7 SHIFT_RIGHT expression_8 .)
    POINT_COMMA     reduce using rule 99 (expression_7 -> expression_7 SHIFT_RIGHT expression_8 .)
    EQUAL           reduce using rule 99 (expression_7 -> expression_7 SHIFT_RIGHT expression_8 .)
    PLUS_EQUAL      reduce using rule 99 (expression_7 -> expression_7 SHIFT_RIGHT expression_8 .)
    MINUS_EQUAL     reduce using rule 99 (expression_7 -> expression_7 SHIFT_RIGHT expression_8 .)
    MULTIPLICATION_DIVISION reduce using rule 99 (expression_7 -> expression_7 SHIFT_RIGHT expression_8 .)
    DIVIDE_EQUAL    reduce using rule 99 (expression_7 -> expression_7 SHIFT_RIGHT expression_8 .)
    CLOSE_PARENTHESES reduce using rule 99 (expression_7 -> expression_7 SHIFT_RIGHT expression_8 .)
    COMMA           reduce using rule 99 (expression_7 -> expression_7 SHIFT_RIGHT expression_8 .)
    POINT_V         reduce using rule 99 (expression_7 -> expression_7 SHIFT_RIGHT expression_8 .)
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103


state 151

    (101) expression_8 -> expression_8 PLUS expression_9 .
    (104) expression_9 -> expression_9 . MULT expression_10
    (105) expression_9 -> expression_9 . PERCENTAGE expression_10
    (106) expression_9 -> expression_9 . DIVIDE expression_10

    PLUS            reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    MINUS           reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    SHIFT_LEFT      reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    SHIFT_RIGHT     reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    LOGIC_AND       reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    LOGIC_OR        reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    LESS_THAN       reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    GREATER_THAN    reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    EQUAL_EQUAL     reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    DIFFERENT       reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    AND             reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    OR              reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    POINT_COMMA     reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    EQUAL           reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    PLUS_EQUAL      reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    MINUS_EQUAL     reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    MULTIPLICATION_DIVISION reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    DIVIDE_EQUAL    reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    CLOSE_PARENTHESES reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    COMMA           reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    POINT_V         reduce using rule 101 (expression_8 -> expression_8 PLUS expression_9 .)
    MULT            shift and go to state 104
    PERCENTAGE      shift and go to state 105
    DIVIDE          shift and go to state 106


state 152

    (102) expression_8 -> expression_8 MINUS expression_9 .
    (104) expression_9 -> expression_9 . MULT expression_10
    (105) expression_9 -> expression_9 . PERCENTAGE expression_10
    (106) expression_9 -> expression_9 . DIVIDE expression_10

    PLUS            reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    MINUS           reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    SHIFT_LEFT      reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    SHIFT_RIGHT     reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    LOGIC_AND       reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    LOGIC_OR        reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    LESS_THAN       reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    GREATER_THAN    reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    EQUAL_EQUAL     reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    DIFFERENT       reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    AND             reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    OR              reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    POINT_COMMA     reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    EQUAL           reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    PLUS_EQUAL      reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    MINUS_EQUAL     reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    MULTIPLICATION_DIVISION reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    DIVIDE_EQUAL    reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    CLOSE_PARENTHESES reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    COMMA           reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    POINT_V         reduce using rule 102 (expression_8 -> expression_8 MINUS expression_9 .)
    MULT            shift and go to state 104
    PERCENTAGE      shift and go to state 105
    DIVIDE          shift and go to state 106


state 153

    (104) expression_9 -> expression_9 MULT expression_10 .

    MULT            reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    PERCENTAGE      reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    DIVIDE          reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    PLUS            reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    MINUS           reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    SHIFT_LEFT      reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    SHIFT_RIGHT     reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    LOGIC_AND       reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    LOGIC_OR        reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    LESS_THAN       reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    GREATER_THAN    reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    EQUAL_EQUAL     reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    DIFFERENT       reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    AND             reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    OR              reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    POINT_COMMA     reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    EQUAL           reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    PLUS_EQUAL      reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    MINUS_EQUAL     reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    MULTIPLICATION_DIVISION reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    DIVIDE_EQUAL    reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    CLOSE_PARENTHESES reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    COMMA           reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)
    POINT_V         reduce using rule 104 (expression_9 -> expression_9 MULT expression_10 .)


state 154

    (105) expression_9 -> expression_9 PERCENTAGE expression_10 .

    MULT            reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    PERCENTAGE      reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    DIVIDE          reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    PLUS            reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    MINUS           reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    SHIFT_LEFT      reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    SHIFT_RIGHT     reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    LOGIC_AND       reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    LOGIC_OR        reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    LESS_THAN       reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    GREATER_THAN    reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    EQUAL_EQUAL     reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    DIFFERENT       reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    AND             reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    OR              reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    POINT_COMMA     reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    EQUAL           reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    PLUS_EQUAL      reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    MINUS_EQUAL     reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    MULTIPLICATION_DIVISION reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    DIVIDE_EQUAL    reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    CLOSE_PARENTHESES reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    COMMA           reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)
    POINT_V         reduce using rule 105 (expression_9 -> expression_9 PERCENTAGE expression_10 .)


state 155

    (106) expression_9 -> expression_9 DIVIDE expression_10 .

    MULT            reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    PERCENTAGE      reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    DIVIDE          reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    PLUS            reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    MINUS           reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    SHIFT_LEFT      reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    SHIFT_RIGHT     reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    LOGIC_AND       reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    LOGIC_OR        reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    LESS_THAN       reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    GREATER_THAN    reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    EQUAL_EQUAL     reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    DIFFERENT       reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    AND             reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    OR              reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    POINT_COMMA     reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    EQUAL           reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    PLUS_EQUAL      reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    MINUS_EQUAL     reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    MULTIPLICATION_DIVISION reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    DIVIDE_EQUAL    reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    CLOSE_PARENTHESES reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    COMMA           reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)
    POINT_V         reduce using rule 106 (expression_9 -> expression_9 DIVIDE expression_10 .)


state 156

    (115) expression_11 -> expression_11 OPEN_CONCHETE expression_11 . CLOSE_CONCHETE
    (113) expression_11 -> expression_11 . MINUS_MINUS
    (114) expression_11 -> expression_11 . PLUS_PLUS
    (115) expression_11 -> expression_11 . OPEN_CONCHETE expression_11 CLOSE_CONCHETE

    CLOSE_CONCHETE  shift and go to state 170
    MINUS_MINUS     shift and go to state 111
    PLUS_PLUS       shift and go to state 112
    OPEN_CONCHETE   shift and go to state 113


state 157

    (5) initializedIdentifierList -> ID EQUAL expression p_initializedIdentifierList_estrela .

    POINT_V         reduce using rule 5 (initializedIdentifierList -> ID EQUAL expression p_initializedIdentifierList_estrela .)


state 158

    (6) p_initializedIdentifierList_estrela -> COMMA . ID EQUAL expression
    (7) p_initializedIdentifierList_estrela -> COMMA . ID EQUAL expression p_initializedIdentifierList_estrela

    ID              shift and go to state 171


state 159

    (18) formalParameterList -> OPEN_PARENTHESES normalFormalParameters COMMA CLOSE_PARENTHESES .

    OPEN_KEYS       reduce using rule 18 (formalParameterList -> OPEN_PARENTHESES normalFormalParameters COMMA CLOSE_PARENTHESES .)


state 160

    (21) p_normalFormalParameters_estrela -> COMMA normalFormalParameter .
    (22) p_normalFormalParameters_estrela -> COMMA normalFormalParameter . p_normalFormalParameters_estrela
    (21) p_normalFormalParameters_estrela -> . COMMA normalFormalParameter
    (22) p_normalFormalParameters_estrela -> . COMMA normalFormalParameter p_normalFormalParameters_estrela

  ! shift/reduce conflict for COMMA resolved as shift
    CLOSE_PARENTHESES reduce using rule 21 (p_normalFormalParameters_estrela -> COMMA normalFormalParameter .)
    COMMA           shift and go to state 119

  ! COMMA           [ reduce using rule 21 (p_normalFormalParameters_estrela -> COMMA normalFormalParameter .) ]

    p_normalFormalParameters_estrela shift and go to state 172

state 161

    (37) localVariableDeclaration -> type ID EQUAL expression . expression_one_equal POINT_COMMA
    (39) localVariableDeclaration -> type ID EQUAL expression . COMMA ID POINT_COMMA
    (73) expression -> expression . EQUAL expression_0
    (74) expression -> expression . PLUS_EQUAL expression_0
    (75) expression -> expression . MINUS_EQUAL expression_0
    (76) expression -> expression . MULTIPLICATION_DIVISION expression_0
    (77) expression -> expression . DIVIDE_EQUAL expression_0
    (41) expression_one_equal -> . COMMA ID EQUAL expression
    (42) expression_one_equal -> . COMMA ID
    (43) expression_one_equal -> . COMMA ID EQUAL expression expression_one_equal
    (44) expression_one_equal -> . COMMA ID expression_one_equal

    COMMA           shift and go to state 174
    EQUAL           shift and go to state 74
    PLUS_EQUAL      shift and go to state 75
    MINUS_EQUAL     shift and go to state 76
    MULTIPLICATION_DIVISION shift and go to state 77
    DIVIDE_EQUAL    shift and go to state 78

    expression_one_equal           shift and go to state 173

state 162

    (38) localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .

    CLOSE_KEYS      reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    OPEN_KEYS       reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    FOR             reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    WHILE           reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    IF              reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    BREAK           reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    CONTINUE        reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    POINT_COMMA     reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    RETURN          reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    VOID            reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    STRING          reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    BOOL            reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    INT             reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    FLOAT           reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    VAR             reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    MINUS           reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    PLUS_PLUS       reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    MINUS_MINUS     reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    INVERT          reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    OPEN_PARENTHESES reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    ID              reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    STRING_LITERAL  reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    NUMBER          reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)
    ELSE            reduce using rule 38 (localVariableDeclaration -> type ID expression_one_equal POINT_COMMA .)


state 163

    (40) localVariableDeclaration -> type ID COMMA ID . POINT_COMMA
    (41) expression_one_equal -> COMMA ID . EQUAL expression
    (42) expression_one_equal -> COMMA ID .
    (43) expression_one_equal -> COMMA ID . EQUAL expression expression_one_equal
    (44) expression_one_equal -> COMMA ID . expression_one_equal
    (41) expression_one_equal -> . COMMA ID EQUAL expression
    (42) expression_one_equal -> . COMMA ID
    (43) expression_one_equal -> . COMMA ID EQUAL expression expression_one_equal
    (44) expression_one_equal -> . COMMA ID expression_one_equal

  ! shift/reduce conflict for POINT_COMMA resolved as shift
    POINT_COMMA     shift and go to state 176
    EQUAL           shift and go to state 177
    COMMA           shift and go to state 175

  ! POINT_COMMA     [ reduce using rule 42 (expression_one_equal -> COMMA ID .) ]

    expression_one_equal           shift and go to state 178

state 164

    (122) expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .

    MINUS_MINUS     reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    PLUS_PLUS       reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    OPEN_CONCHETE   reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    MULT            reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    PERCENTAGE      reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    DIVIDE          reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    PLUS            reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    MINUS           reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    SHIFT_LEFT      reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    SHIFT_RIGHT     reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    LOGIC_AND       reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    LOGIC_OR        reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    LESS_THAN       reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    GREATER_THAN    reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    EQUAL_EQUAL     reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    DIFFERENT       reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    AND             reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    OR              reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    POINT_COMMA     reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    EQUAL           reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    PLUS_EQUAL      reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    MINUS_EQUAL     reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    MULTIPLICATION_DIVISION reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    DIVIDE_EQUAL    reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    CLOSE_PARENTHESES reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    COMMA           reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    POINT_V         reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)
    CLOSE_CONCHETE  reduce using rule 122 (expression_12 -> ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES .)


state 165

    (45) forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES . statement
    (46) forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES . body
    (28) statement -> . body
    (29) statement -> . localVariableDeclaration
    (30) statement -> . forStatement
    (31) statement -> . whileStatement
    (32) statement -> . ifStatement
    (33) statement -> . breakStatement
    (34) statement -> . continueStatement
    (35) statement -> . returnStatement
    (36) statement -> . expressionStatement
    (24) body -> . OPEN_KEYS statements CLOSE_KEYS
    (25) body -> . OPEN_KEYS CLOSE_KEYS
    (37) localVariableDeclaration -> . type ID EQUAL expression expression_one_equal POINT_COMMA
    (38) localVariableDeclaration -> . type ID expression_one_equal POINT_COMMA
    (39) localVariableDeclaration -> . type ID EQUAL expression COMMA ID POINT_COMMA
    (40) localVariableDeclaration -> . type ID COMMA ID POINT_COMMA
    (45) forStatement -> . FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement
    (46) forStatement -> . FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body
    (59) whileStatement -> . WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement
    (60) whileStatement -> . WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body
    (61) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement
    (62) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body
    (63) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body
    (64) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement
    (65) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body
    (66) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement
    (67) breakStatement -> . BREAK POINT_COMMA
    (68) continueStatement -> . CONTINUE POINT_COMMA
    (71) returnStatement -> . expression POINT_COMMA
    (72) returnStatement -> . POINT_COMMA
    (69) expressionStatement -> . RETURN expression POINT_COMMA
    (70) expressionStatement -> . RETURN POINT_COMMA
    (10) type -> . VOID
    (11) type -> . STRING
    (12) type -> . BOOL
    (13) type -> . INT
    (14) type -> . FLOAT
    (15) type -> . VAR
    (73) expression -> . expression EQUAL expression_0
    (74) expression -> . expression PLUS_EQUAL expression_0
    (75) expression -> . expression MINUS_EQUAL expression_0
    (76) expression -> . expression MULTIPLICATION_DIVISION expression_0
    (77) expression -> . expression DIVIDE_EQUAL expression_0
    (78) expression -> . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    OPEN_KEYS       shift and go to state 12
    FOR             shift and go to state 35
    WHILE           shift and go to state 37
    IF              shift and go to state 38
    BREAK           shift and go to state 39
    CONTINUE        shift and go to state 40
    POINT_COMMA     shift and go to state 34
    RETURN          shift and go to state 41
    VOID            shift and go to state 5
    STRING          shift and go to state 6
    BOOL            shift and go to state 42
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    VAR             shift and go to state 10
    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61

    statement                      shift and go to state 179
    body                           shift and go to state 180
    localVariableDeclaration       shift and go to state 23
    forStatement                   shift and go to state 24
    whileStatement                 shift and go to state 25
    ifStatement                    shift and go to state 26
    breakStatement                 shift and go to state 27
    continueStatement              shift and go to state 28
    returnStatement                shift and go to state 29
    expressionStatement            shift and go to state 30
    type                           shift and go to state 31
    expression                     shift and go to state 33
    expression_0                   shift and go to state 43
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 166

    (55) forLoopParts -> type ID . IN expression

    IN              shift and go to state 181


state 167

    (56) forLoopParts -> ID IN . expression
    (73) expression -> . expression EQUAL expression_0
    (74) expression -> . expression PLUS_EQUAL expression_0
    (75) expression -> . expression MINUS_EQUAL expression_0
    (76) expression -> . expression MULTIPLICATION_DIVISION expression_0
    (77) expression -> . expression DIVIDE_EQUAL expression_0
    (78) expression -> . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression                     shift and go to state 182
    expression_0                   shift and go to state 43
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 168

    (59) whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES . statement
    (60) whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES . body
    (28) statement -> . body
    (29) statement -> . localVariableDeclaration
    (30) statement -> . forStatement
    (31) statement -> . whileStatement
    (32) statement -> . ifStatement
    (33) statement -> . breakStatement
    (34) statement -> . continueStatement
    (35) statement -> . returnStatement
    (36) statement -> . expressionStatement
    (24) body -> . OPEN_KEYS statements CLOSE_KEYS
    (25) body -> . OPEN_KEYS CLOSE_KEYS
    (37) localVariableDeclaration -> . type ID EQUAL expression expression_one_equal POINT_COMMA
    (38) localVariableDeclaration -> . type ID expression_one_equal POINT_COMMA
    (39) localVariableDeclaration -> . type ID EQUAL expression COMMA ID POINT_COMMA
    (40) localVariableDeclaration -> . type ID COMMA ID POINT_COMMA
    (45) forStatement -> . FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement
    (46) forStatement -> . FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body
    (59) whileStatement -> . WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement
    (60) whileStatement -> . WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body
    (61) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement
    (62) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body
    (63) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body
    (64) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement
    (65) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body
    (66) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement
    (67) breakStatement -> . BREAK POINT_COMMA
    (68) continueStatement -> . CONTINUE POINT_COMMA
    (71) returnStatement -> . expression POINT_COMMA
    (72) returnStatement -> . POINT_COMMA
    (69) expressionStatement -> . RETURN expression POINT_COMMA
    (70) expressionStatement -> . RETURN POINT_COMMA
    (10) type -> . VOID
    (11) type -> . STRING
    (12) type -> . BOOL
    (13) type -> . INT
    (14) type -> . FLOAT
    (15) type -> . VAR
    (73) expression -> . expression EQUAL expression_0
    (74) expression -> . expression PLUS_EQUAL expression_0
    (75) expression -> . expression MINUS_EQUAL expression_0
    (76) expression -> . expression MULTIPLICATION_DIVISION expression_0
    (77) expression -> . expression DIVIDE_EQUAL expression_0
    (78) expression -> . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    OPEN_KEYS       shift and go to state 12
    FOR             shift and go to state 35
    WHILE           shift and go to state 37
    IF              shift and go to state 38
    BREAK           shift and go to state 39
    CONTINUE        shift and go to state 40
    POINT_COMMA     shift and go to state 34
    RETURN          shift and go to state 41
    VOID            shift and go to state 5
    STRING          shift and go to state 6
    BOOL            shift and go to state 42
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    VAR             shift and go to state 10
    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61

    expression                     shift and go to state 33
    statement                      shift and go to state 183
    body                           shift and go to state 184
    localVariableDeclaration       shift and go to state 23
    forStatement                   shift and go to state 24
    whileStatement                 shift and go to state 25
    ifStatement                    shift and go to state 26
    breakStatement                 shift and go to state 27
    continueStatement              shift and go to state 28
    returnStatement                shift and go to state 29
    expressionStatement            shift and go to state 30
    type                           shift and go to state 31
    expression_0                   shift and go to state 43
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 169

    (61) ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES . statement ELSE statement
    (62) ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES . body ELSE body
    (63) ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES . statement ELSE body
    (64) ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES . statement
    (65) ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES . body
    (66) ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES . body ELSE statement
    (28) statement -> . body
    (29) statement -> . localVariableDeclaration
    (30) statement -> . forStatement
    (31) statement -> . whileStatement
    (32) statement -> . ifStatement
    (33) statement -> . breakStatement
    (34) statement -> . continueStatement
    (35) statement -> . returnStatement
    (36) statement -> . expressionStatement
    (24) body -> . OPEN_KEYS statements CLOSE_KEYS
    (25) body -> . OPEN_KEYS CLOSE_KEYS
    (37) localVariableDeclaration -> . type ID EQUAL expression expression_one_equal POINT_COMMA
    (38) localVariableDeclaration -> . type ID expression_one_equal POINT_COMMA
    (39) localVariableDeclaration -> . type ID EQUAL expression COMMA ID POINT_COMMA
    (40) localVariableDeclaration -> . type ID COMMA ID POINT_COMMA
    (45) forStatement -> . FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement
    (46) forStatement -> . FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body
    (59) whileStatement -> . WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement
    (60) whileStatement -> . WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body
    (61) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement
    (62) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body
    (63) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body
    (64) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement
    (65) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body
    (66) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement
    (67) breakStatement -> . BREAK POINT_COMMA
    (68) continueStatement -> . CONTINUE POINT_COMMA
    (71) returnStatement -> . expression POINT_COMMA
    (72) returnStatement -> . POINT_COMMA
    (69) expressionStatement -> . RETURN expression POINT_COMMA
    (70) expressionStatement -> . RETURN POINT_COMMA
    (10) type -> . VOID
    (11) type -> . STRING
    (12) type -> . BOOL
    (13) type -> . INT
    (14) type -> . FLOAT
    (15) type -> . VAR
    (73) expression -> . expression EQUAL expression_0
    (74) expression -> . expression PLUS_EQUAL expression_0
    (75) expression -> . expression MINUS_EQUAL expression_0
    (76) expression -> . expression MULTIPLICATION_DIVISION expression_0
    (77) expression -> . expression DIVIDE_EQUAL expression_0
    (78) expression -> . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    OPEN_KEYS       shift and go to state 12
    FOR             shift and go to state 35
    WHILE           shift and go to state 37
    IF              shift and go to state 38
    BREAK           shift and go to state 39
    CONTINUE        shift and go to state 40
    POINT_COMMA     shift and go to state 34
    RETURN          shift and go to state 41
    VOID            shift and go to state 5
    STRING          shift and go to state 6
    BOOL            shift and go to state 42
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    VAR             shift and go to state 10
    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61

    expression                     shift and go to state 33
    statement                      shift and go to state 185
    body                           shift and go to state 186
    localVariableDeclaration       shift and go to state 23
    forStatement                   shift and go to state 24
    whileStatement                 shift and go to state 25
    ifStatement                    shift and go to state 26
    breakStatement                 shift and go to state 27
    continueStatement              shift and go to state 28
    returnStatement                shift and go to state 29
    expressionStatement            shift and go to state 30
    type                           shift and go to state 31
    expression_0                   shift and go to state 43
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 170

    (115) expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .

    MINUS_MINUS     reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    PLUS_PLUS       reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    OPEN_CONCHETE   reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    MULT            reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    PERCENTAGE      reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    DIVIDE          reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    PLUS            reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    MINUS           reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    SHIFT_LEFT      reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    SHIFT_RIGHT     reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    LOGIC_AND       reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    LOGIC_OR        reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    LESS_THAN       reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    GREATER_THAN    reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    EQUAL_EQUAL     reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    DIFFERENT       reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    AND             reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    OR              reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    POINT_COMMA     reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    EQUAL           reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    PLUS_EQUAL      reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    MINUS_EQUAL     reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    MULTIPLICATION_DIVISION reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    DIVIDE_EQUAL    reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    CLOSE_PARENTHESES reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    COMMA           reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    POINT_V         reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)
    CLOSE_CONCHETE  reduce using rule 115 (expression_11 -> expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE .)


state 171

    (6) p_initializedIdentifierList_estrela -> COMMA ID . EQUAL expression
    (7) p_initializedIdentifierList_estrela -> COMMA ID . EQUAL expression p_initializedIdentifierList_estrela

    EQUAL           shift and go to state 187


state 172

    (22) p_normalFormalParameters_estrela -> COMMA normalFormalParameter p_normalFormalParameters_estrela .

    COMMA           reduce using rule 22 (p_normalFormalParameters_estrela -> COMMA normalFormalParameter p_normalFormalParameters_estrela .)
    CLOSE_PARENTHESES reduce using rule 22 (p_normalFormalParameters_estrela -> COMMA normalFormalParameter p_normalFormalParameters_estrela .)


state 173

    (37) localVariableDeclaration -> type ID EQUAL expression expression_one_equal . POINT_COMMA

    POINT_COMMA     shift and go to state 188


state 174

    (39) localVariableDeclaration -> type ID EQUAL expression COMMA . ID POINT_COMMA
    (41) expression_one_equal -> COMMA . ID EQUAL expression
    (42) expression_one_equal -> COMMA . ID
    (43) expression_one_equal -> COMMA . ID EQUAL expression expression_one_equal
    (44) expression_one_equal -> COMMA . ID expression_one_equal

    ID              shift and go to state 189


state 175

    (41) expression_one_equal -> COMMA . ID EQUAL expression
    (42) expression_one_equal -> COMMA . ID
    (43) expression_one_equal -> COMMA . ID EQUAL expression expression_one_equal
    (44) expression_one_equal -> COMMA . ID expression_one_equal

    ID              shift and go to state 190


state 176

    (40) localVariableDeclaration -> type ID COMMA ID POINT_COMMA .

    CLOSE_KEYS      reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    OPEN_KEYS       reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    FOR             reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    WHILE           reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    IF              reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    BREAK           reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    CONTINUE        reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    POINT_COMMA     reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    RETURN          reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    VOID            reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    STRING          reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    BOOL            reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    INT             reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    FLOAT           reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    VAR             reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    MINUS           reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    PLUS_PLUS       reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    MINUS_MINUS     reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    INVERT          reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    OPEN_PARENTHESES reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    ID              reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    STRING_LITERAL  reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    NUMBER          reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)
    ELSE            reduce using rule 40 (localVariableDeclaration -> type ID COMMA ID POINT_COMMA .)


state 177

    (41) expression_one_equal -> COMMA ID EQUAL . expression
    (43) expression_one_equal -> COMMA ID EQUAL . expression expression_one_equal
    (73) expression -> . expression EQUAL expression_0
    (74) expression -> . expression PLUS_EQUAL expression_0
    (75) expression -> . expression MINUS_EQUAL expression_0
    (76) expression -> . expression MULTIPLICATION_DIVISION expression_0
    (77) expression -> . expression DIVIDE_EQUAL expression_0
    (78) expression -> . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression                     shift and go to state 191
    expression_0                   shift and go to state 43
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 178

    (44) expression_one_equal -> COMMA ID expression_one_equal .

    POINT_COMMA     reduce using rule 44 (expression_one_equal -> COMMA ID expression_one_equal .)


state 179

    (45) forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .

    CLOSE_KEYS      reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    OPEN_KEYS       reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    FOR             reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    WHILE           reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    IF              reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    BREAK           reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    CONTINUE        reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    POINT_COMMA     reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    RETURN          reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    VOID            reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    STRING          reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    BOOL            reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    INT             reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    FLOAT           reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    VAR             reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    MINUS           reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    PLUS_PLUS       reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    MINUS_MINUS     reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    INVERT          reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    OPEN_PARENTHESES reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    ID              reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    STRING_LITERAL  reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    NUMBER          reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)
    ELSE            reduce using rule 45 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement .)


state 180

    (46) forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .
    (28) statement -> body .

  ! reduce/reduce conflict for CLOSE_KEYS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for OPEN_KEYS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for FOR resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for WHILE resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for IF resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for BREAK resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for POINT_COMMA resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for RETURN resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for VOID resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for STRING resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for BOOL resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for INT resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for FLOAT resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for VAR resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for MINUS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for PLUS_PLUS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for MINUS_MINUS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for INVERT resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for OPEN_PARENTHESES resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for ID resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for STRING_LITERAL resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for NUMBER resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for ELSE resolved using rule 28 (statement -> body .)
    CLOSE_KEYS      reduce using rule 28 (statement -> body .)
    OPEN_KEYS       reduce using rule 28 (statement -> body .)
    FOR             reduce using rule 28 (statement -> body .)
    WHILE           reduce using rule 28 (statement -> body .)
    IF              reduce using rule 28 (statement -> body .)
    BREAK           reduce using rule 28 (statement -> body .)
    CONTINUE        reduce using rule 28 (statement -> body .)
    POINT_COMMA     reduce using rule 28 (statement -> body .)
    RETURN          reduce using rule 28 (statement -> body .)
    VOID            reduce using rule 28 (statement -> body .)
    STRING          reduce using rule 28 (statement -> body .)
    BOOL            reduce using rule 28 (statement -> body .)
    INT             reduce using rule 28 (statement -> body .)
    FLOAT           reduce using rule 28 (statement -> body .)
    VAR             reduce using rule 28 (statement -> body .)
    MINUS           reduce using rule 28 (statement -> body .)
    PLUS_PLUS       reduce using rule 28 (statement -> body .)
    MINUS_MINUS     reduce using rule 28 (statement -> body .)
    INVERT          reduce using rule 28 (statement -> body .)
    OPEN_PARENTHESES reduce using rule 28 (statement -> body .)
    ID              reduce using rule 28 (statement -> body .)
    STRING_LITERAL  reduce using rule 28 (statement -> body .)
    NUMBER          reduce using rule 28 (statement -> body .)
    ELSE            reduce using rule 28 (statement -> body .)

  ! CLOSE_KEYS      [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! OPEN_KEYS       [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! FOR             [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! WHILE           [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! IF              [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! BREAK           [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! CONTINUE        [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! POINT_COMMA     [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! RETURN          [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! VOID            [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! STRING          [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! BOOL            [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! INT             [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! FLOAT           [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! VAR             [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! MINUS           [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! PLUS_PLUS       [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! MINUS_MINUS     [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! INVERT          [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! OPEN_PARENTHESES [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! ID              [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! STRING_LITERAL  [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! NUMBER          [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]
  ! ELSE            [ reduce using rule 46 (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body .) ]


state 181

    (55) forLoopParts -> type ID IN . expression
    (73) expression -> . expression EQUAL expression_0
    (74) expression -> . expression PLUS_EQUAL expression_0
    (75) expression -> . expression MINUS_EQUAL expression_0
    (76) expression -> . expression MULTIPLICATION_DIVISION expression_0
    (77) expression -> . expression DIVIDE_EQUAL expression_0
    (78) expression -> . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression                     shift and go to state 192
    expression_0                   shift and go to state 43
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 182

    (56) forLoopParts -> ID IN expression .
    (73) expression -> expression . EQUAL expression_0
    (74) expression -> expression . PLUS_EQUAL expression_0
    (75) expression -> expression . MINUS_EQUAL expression_0
    (76) expression -> expression . MULTIPLICATION_DIVISION expression_0
    (77) expression -> expression . DIVIDE_EQUAL expression_0

    CLOSE_PARENTHESES reduce using rule 56 (forLoopParts -> ID IN expression .)
    EQUAL           shift and go to state 74
    PLUS_EQUAL      shift and go to state 75
    MINUS_EQUAL     shift and go to state 76
    MULTIPLICATION_DIVISION shift and go to state 77
    DIVIDE_EQUAL    shift and go to state 78


state 183

    (59) whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .

    CLOSE_KEYS      reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    OPEN_KEYS       reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    FOR             reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    WHILE           reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    IF              reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    BREAK           reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    CONTINUE        reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    POINT_COMMA     reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    RETURN          reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    VOID            reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    STRING          reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    BOOL            reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    INT             reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    FLOAT           reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    VAR             reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    MINUS           reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    PLUS_PLUS       reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    MINUS_MINUS     reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    INVERT          reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    OPEN_PARENTHESES reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    ID              reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    STRING_LITERAL  reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    NUMBER          reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    ELSE            reduce using rule 59 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)


state 184

    (60) whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .
    (28) statement -> body .

  ! reduce/reduce conflict for CLOSE_KEYS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for OPEN_KEYS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for FOR resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for WHILE resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for IF resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for BREAK resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for POINT_COMMA resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for RETURN resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for VOID resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for STRING resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for BOOL resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for INT resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for FLOAT resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for VAR resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for MINUS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for PLUS_PLUS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for MINUS_MINUS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for INVERT resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for OPEN_PARENTHESES resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for ID resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for STRING_LITERAL resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for NUMBER resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for ELSE resolved using rule 28 (statement -> body .)
    CLOSE_KEYS      reduce using rule 28 (statement -> body .)
    OPEN_KEYS       reduce using rule 28 (statement -> body .)
    FOR             reduce using rule 28 (statement -> body .)
    WHILE           reduce using rule 28 (statement -> body .)
    IF              reduce using rule 28 (statement -> body .)
    BREAK           reduce using rule 28 (statement -> body .)
    CONTINUE        reduce using rule 28 (statement -> body .)
    POINT_COMMA     reduce using rule 28 (statement -> body .)
    RETURN          reduce using rule 28 (statement -> body .)
    VOID            reduce using rule 28 (statement -> body .)
    STRING          reduce using rule 28 (statement -> body .)
    BOOL            reduce using rule 28 (statement -> body .)
    INT             reduce using rule 28 (statement -> body .)
    FLOAT           reduce using rule 28 (statement -> body .)
    VAR             reduce using rule 28 (statement -> body .)
    MINUS           reduce using rule 28 (statement -> body .)
    PLUS_PLUS       reduce using rule 28 (statement -> body .)
    MINUS_MINUS     reduce using rule 28 (statement -> body .)
    INVERT          reduce using rule 28 (statement -> body .)
    OPEN_PARENTHESES reduce using rule 28 (statement -> body .)
    ID              reduce using rule 28 (statement -> body .)
    STRING_LITERAL  reduce using rule 28 (statement -> body .)
    NUMBER          reduce using rule 28 (statement -> body .)
    ELSE            reduce using rule 28 (statement -> body .)

  ! CLOSE_KEYS      [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! OPEN_KEYS       [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! FOR             [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! WHILE           [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! IF              [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! BREAK           [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! CONTINUE        [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! POINT_COMMA     [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! RETURN          [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! VOID            [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! STRING          [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! BOOL            [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! INT             [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! FLOAT           [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! VAR             [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! MINUS           [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! PLUS_PLUS       [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! MINUS_MINUS     [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! INVERT          [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! OPEN_PARENTHESES [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! ID              [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! STRING_LITERAL  [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! NUMBER          [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! ELSE            [ reduce using rule 60 (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]


state 185

    (61) ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement . ELSE statement
    (63) ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement . ELSE body
    (64) ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 193
    CLOSE_KEYS      reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    OPEN_KEYS       reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    FOR             reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    WHILE           reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    IF              reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    BREAK           reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    CONTINUE        reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    POINT_COMMA     reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    RETURN          reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    VOID            reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    STRING          reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    BOOL            reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    INT             reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    FLOAT           reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    VAR             reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    MINUS           reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    PLUS_PLUS       reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    MINUS_MINUS     reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    INVERT          reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    OPEN_PARENTHESES reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    ID              reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    STRING_LITERAL  reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)
    NUMBER          reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .)

  ! ELSE            [ reduce using rule 64 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement .) ]


state 186

    (62) ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body . ELSE body
    (65) ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .
    (66) ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body . ELSE statement
    (28) statement -> body .

  ! shift/reduce conflict for ELSE resolved as shift
  ! reduce/reduce conflict for CLOSE_KEYS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for OPEN_KEYS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for FOR resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for WHILE resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for IF resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for BREAK resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for POINT_COMMA resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for RETURN resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for VOID resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for STRING resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for BOOL resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for INT resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for FLOAT resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for VAR resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for MINUS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for PLUS_PLUS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for MINUS_MINUS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for INVERT resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for OPEN_PARENTHESES resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for ID resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for STRING_LITERAL resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for NUMBER resolved using rule 28 (statement -> body .)
  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 194
    CLOSE_KEYS      reduce using rule 28 (statement -> body .)
    OPEN_KEYS       reduce using rule 28 (statement -> body .)
    FOR             reduce using rule 28 (statement -> body .)
    WHILE           reduce using rule 28 (statement -> body .)
    IF              reduce using rule 28 (statement -> body .)
    BREAK           reduce using rule 28 (statement -> body .)
    CONTINUE        reduce using rule 28 (statement -> body .)
    POINT_COMMA     reduce using rule 28 (statement -> body .)
    RETURN          reduce using rule 28 (statement -> body .)
    VOID            reduce using rule 28 (statement -> body .)
    STRING          reduce using rule 28 (statement -> body .)
    BOOL            reduce using rule 28 (statement -> body .)
    INT             reduce using rule 28 (statement -> body .)
    FLOAT           reduce using rule 28 (statement -> body .)
    VAR             reduce using rule 28 (statement -> body .)
    MINUS           reduce using rule 28 (statement -> body .)
    PLUS_PLUS       reduce using rule 28 (statement -> body .)
    MINUS_MINUS     reduce using rule 28 (statement -> body .)
    INVERT          reduce using rule 28 (statement -> body .)
    OPEN_PARENTHESES reduce using rule 28 (statement -> body .)
    ID              reduce using rule 28 (statement -> body .)
    STRING_LITERAL  reduce using rule 28 (statement -> body .)
    NUMBER          reduce using rule 28 (statement -> body .)

  ! CLOSE_KEYS      [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! OPEN_KEYS       [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! FOR             [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! WHILE           [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! IF              [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! BREAK           [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! CONTINUE        [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! POINT_COMMA     [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! RETURN          [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! VOID            [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! STRING          [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! BOOL            [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! INT             [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! FLOAT           [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! VAR             [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! MINUS           [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! PLUS_PLUS       [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! MINUS_MINUS     [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! INVERT          [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! OPEN_PARENTHESES [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! ID              [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! STRING_LITERAL  [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! NUMBER          [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! ELSE            [ reduce using rule 65 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body .) ]
  ! ELSE            [ reduce using rule 28 (statement -> body .) ]


state 187

    (6) p_initializedIdentifierList_estrela -> COMMA ID EQUAL . expression
    (7) p_initializedIdentifierList_estrela -> COMMA ID EQUAL . expression p_initializedIdentifierList_estrela
    (73) expression -> . expression EQUAL expression_0
    (74) expression -> . expression PLUS_EQUAL expression_0
    (75) expression -> . expression MINUS_EQUAL expression_0
    (76) expression -> . expression MULTIPLICATION_DIVISION expression_0
    (77) expression -> . expression DIVIDE_EQUAL expression_0
    (78) expression -> . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61
    BOOL            shift and go to state 81

    expression                     shift and go to state 195
    expression_0                   shift and go to state 43
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 188

    (37) localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .

    CLOSE_KEYS      reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    OPEN_KEYS       reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    FOR             reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    WHILE           reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    IF              reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    BREAK           reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    CONTINUE        reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    POINT_COMMA     reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    RETURN          reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    VOID            reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    STRING          reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    BOOL            reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    INT             reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    FLOAT           reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    VAR             reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    MINUS           reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    PLUS_PLUS       reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    MINUS_MINUS     reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    INVERT          reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    OPEN_PARENTHESES reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    ID              reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    STRING_LITERAL  reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    NUMBER          reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)
    ELSE            reduce using rule 37 (localVariableDeclaration -> type ID EQUAL expression expression_one_equal POINT_COMMA .)


state 189

    (39) localVariableDeclaration -> type ID EQUAL expression COMMA ID . POINT_COMMA
    (41) expression_one_equal -> COMMA ID . EQUAL expression
    (42) expression_one_equal -> COMMA ID .
    (43) expression_one_equal -> COMMA ID . EQUAL expression expression_one_equal
    (44) expression_one_equal -> COMMA ID . expression_one_equal
    (41) expression_one_equal -> . COMMA ID EQUAL expression
    (42) expression_one_equal -> . COMMA ID
    (43) expression_one_equal -> . COMMA ID EQUAL expression expression_one_equal
    (44) expression_one_equal -> . COMMA ID expression_one_equal

  ! shift/reduce conflict for POINT_COMMA resolved as shift
    POINT_COMMA     shift and go to state 196
    EQUAL           shift and go to state 177
    COMMA           shift and go to state 175

  ! POINT_COMMA     [ reduce using rule 42 (expression_one_equal -> COMMA ID .) ]

    expression_one_equal           shift and go to state 178

state 190

    (41) expression_one_equal -> COMMA ID . EQUAL expression
    (42) expression_one_equal -> COMMA ID .
    (43) expression_one_equal -> COMMA ID . EQUAL expression expression_one_equal
    (44) expression_one_equal -> COMMA ID . expression_one_equal
    (41) expression_one_equal -> . COMMA ID EQUAL expression
    (42) expression_one_equal -> . COMMA ID
    (43) expression_one_equal -> . COMMA ID EQUAL expression expression_one_equal
    (44) expression_one_equal -> . COMMA ID expression_one_equal

    EQUAL           shift and go to state 177
    POINT_COMMA     reduce using rule 42 (expression_one_equal -> COMMA ID .)
    COMMA           shift and go to state 175

    expression_one_equal           shift and go to state 178

state 191

    (41) expression_one_equal -> COMMA ID EQUAL expression .
    (43) expression_one_equal -> COMMA ID EQUAL expression . expression_one_equal
    (73) expression -> expression . EQUAL expression_0
    (74) expression -> expression . PLUS_EQUAL expression_0
    (75) expression -> expression . MINUS_EQUAL expression_0
    (76) expression -> expression . MULTIPLICATION_DIVISION expression_0
    (77) expression -> expression . DIVIDE_EQUAL expression_0
    (41) expression_one_equal -> . COMMA ID EQUAL expression
    (42) expression_one_equal -> . COMMA ID
    (43) expression_one_equal -> . COMMA ID EQUAL expression expression_one_equal
    (44) expression_one_equal -> . COMMA ID expression_one_equal

    POINT_COMMA     reduce using rule 41 (expression_one_equal -> COMMA ID EQUAL expression .)
    EQUAL           shift and go to state 74
    PLUS_EQUAL      shift and go to state 75
    MINUS_EQUAL     shift and go to state 76
    MULTIPLICATION_DIVISION shift and go to state 77
    DIVIDE_EQUAL    shift and go to state 78
    COMMA           shift and go to state 175

    expression_one_equal           shift and go to state 197

state 192

    (55) forLoopParts -> type ID IN expression .
    (73) expression -> expression . EQUAL expression_0
    (74) expression -> expression . PLUS_EQUAL expression_0
    (75) expression -> expression . MINUS_EQUAL expression_0
    (76) expression -> expression . MULTIPLICATION_DIVISION expression_0
    (77) expression -> expression . DIVIDE_EQUAL expression_0

    CLOSE_PARENTHESES reduce using rule 55 (forLoopParts -> type ID IN expression .)
    EQUAL           shift and go to state 74
    PLUS_EQUAL      shift and go to state 75
    MINUS_EQUAL     shift and go to state 76
    MULTIPLICATION_DIVISION shift and go to state 77
    DIVIDE_EQUAL    shift and go to state 78


state 193

    (61) ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE . statement
    (63) ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE . body
    (28) statement -> . body
    (29) statement -> . localVariableDeclaration
    (30) statement -> . forStatement
    (31) statement -> . whileStatement
    (32) statement -> . ifStatement
    (33) statement -> . breakStatement
    (34) statement -> . continueStatement
    (35) statement -> . returnStatement
    (36) statement -> . expressionStatement
    (24) body -> . OPEN_KEYS statements CLOSE_KEYS
    (25) body -> . OPEN_KEYS CLOSE_KEYS
    (37) localVariableDeclaration -> . type ID EQUAL expression expression_one_equal POINT_COMMA
    (38) localVariableDeclaration -> . type ID expression_one_equal POINT_COMMA
    (39) localVariableDeclaration -> . type ID EQUAL expression COMMA ID POINT_COMMA
    (40) localVariableDeclaration -> . type ID COMMA ID POINT_COMMA
    (45) forStatement -> . FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement
    (46) forStatement -> . FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body
    (59) whileStatement -> . WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement
    (60) whileStatement -> . WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body
    (61) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement
    (62) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body
    (63) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body
    (64) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement
    (65) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body
    (66) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement
    (67) breakStatement -> . BREAK POINT_COMMA
    (68) continueStatement -> . CONTINUE POINT_COMMA
    (71) returnStatement -> . expression POINT_COMMA
    (72) returnStatement -> . POINT_COMMA
    (69) expressionStatement -> . RETURN expression POINT_COMMA
    (70) expressionStatement -> . RETURN POINT_COMMA
    (10) type -> . VOID
    (11) type -> . STRING
    (12) type -> . BOOL
    (13) type -> . INT
    (14) type -> . FLOAT
    (15) type -> . VAR
    (73) expression -> . expression EQUAL expression_0
    (74) expression -> . expression PLUS_EQUAL expression_0
    (75) expression -> . expression MINUS_EQUAL expression_0
    (76) expression -> . expression MULTIPLICATION_DIVISION expression_0
    (77) expression -> . expression DIVIDE_EQUAL expression_0
    (78) expression -> . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    OPEN_KEYS       shift and go to state 12
    FOR             shift and go to state 35
    WHILE           shift and go to state 37
    IF              shift and go to state 38
    BREAK           shift and go to state 39
    CONTINUE        shift and go to state 40
    POINT_COMMA     shift and go to state 34
    RETURN          shift and go to state 41
    VOID            shift and go to state 5
    STRING          shift and go to state 6
    BOOL            shift and go to state 42
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    VAR             shift and go to state 10
    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61

    expression                     shift and go to state 33
    statement                      shift and go to state 198
    body                           shift and go to state 199
    localVariableDeclaration       shift and go to state 23
    forStatement                   shift and go to state 24
    whileStatement                 shift and go to state 25
    ifStatement                    shift and go to state 26
    breakStatement                 shift and go to state 27
    continueStatement              shift and go to state 28
    returnStatement                shift and go to state 29
    expressionStatement            shift and go to state 30
    type                           shift and go to state 31
    expression_0                   shift and go to state 43
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 194

    (62) ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE . body
    (66) ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE . statement
    (24) body -> . OPEN_KEYS statements CLOSE_KEYS
    (25) body -> . OPEN_KEYS CLOSE_KEYS
    (28) statement -> . body
    (29) statement -> . localVariableDeclaration
    (30) statement -> . forStatement
    (31) statement -> . whileStatement
    (32) statement -> . ifStatement
    (33) statement -> . breakStatement
    (34) statement -> . continueStatement
    (35) statement -> . returnStatement
    (36) statement -> . expressionStatement
    (37) localVariableDeclaration -> . type ID EQUAL expression expression_one_equal POINT_COMMA
    (38) localVariableDeclaration -> . type ID expression_one_equal POINT_COMMA
    (39) localVariableDeclaration -> . type ID EQUAL expression COMMA ID POINT_COMMA
    (40) localVariableDeclaration -> . type ID COMMA ID POINT_COMMA
    (45) forStatement -> . FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES statement
    (46) forStatement -> . FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body
    (59) whileStatement -> . WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES statement
    (60) whileStatement -> . WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body
    (61) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement
    (62) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body
    (63) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body
    (64) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement
    (65) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body
    (66) ifStatement -> . IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement
    (67) breakStatement -> . BREAK POINT_COMMA
    (68) continueStatement -> . CONTINUE POINT_COMMA
    (71) returnStatement -> . expression POINT_COMMA
    (72) returnStatement -> . POINT_COMMA
    (69) expressionStatement -> . RETURN expression POINT_COMMA
    (70) expressionStatement -> . RETURN POINT_COMMA
    (10) type -> . VOID
    (11) type -> . STRING
    (12) type -> . BOOL
    (13) type -> . INT
    (14) type -> . FLOAT
    (15) type -> . VAR
    (73) expression -> . expression EQUAL expression_0
    (74) expression -> . expression PLUS_EQUAL expression_0
    (75) expression -> . expression MINUS_EQUAL expression_0
    (76) expression -> . expression MULTIPLICATION_DIVISION expression_0
    (77) expression -> . expression DIVIDE_EQUAL expression_0
    (78) expression -> . expression_0
    (79) expression_0 -> . expression_0 OR expression_1
    (80) expression_0 -> . expression_1
    (81) expression_1 -> . expression_1 AND expression_2
    (82) expression_1 -> . expression_2
    (83) expression_2 -> . expression_2 EQUAL_EQUAL expression_3
    (84) expression_2 -> . expression_2 DIFFERENT expression_3
    (85) expression_2 -> . expression_3
    (86) expression_3 -> . expression_3 EQUAL_EQUAL expression_4
    (87) expression_3 -> . expression_3 DIFFERENT expression_4
    (88) expression_3 -> . expression_4
    (89) expression_4 -> . expression_4 LESS_THAN expression_5
    (90) expression_4 -> . expression_4 GREATER_THAN expression_5
    (91) expression_4 -> . expression_4 LESS_THAN_OR_EQUAL_TO expression_5
    (92) expression_4 -> . expression_4 GREATER_THAN_OR_EQUAL_TO expression_5
    (93) expression_4 -> . expression_5
    (94) expression_5 -> . expression_5 LOGIC_OR expression_6
    (95) expression_5 -> . expression_6
    (96) expression_6 -> . expression_6 LOGIC_AND expression_7
    (97) expression_6 -> . expression_7
    (98) expression_7 -> . expression_7 SHIFT_LEFT expression_8
    (99) expression_7 -> . expression_7 SHIFT_RIGHT expression_8
    (100) expression_7 -> . expression_8
    (101) expression_8 -> . expression_8 PLUS expression_9
    (102) expression_8 -> . expression_8 MINUS expression_9
    (103) expression_8 -> . expression_9
    (104) expression_9 -> . expression_9 MULT expression_10
    (105) expression_9 -> . expression_9 PERCENTAGE expression_10
    (106) expression_9 -> . expression_9 DIVIDE expression_10
    (107) expression_9 -> . expression_10
    (108) expression_10 -> . MINUS expression_10
    (109) expression_10 -> . PLUS_PLUS expression_10
    (110) expression_10 -> . MINUS_MINUS expression_10
    (111) expression_10 -> . INVERT expression_10
    (112) expression_10 -> . expression_11
    (113) expression_11 -> . expression_11 MINUS_MINUS
    (114) expression_11 -> . expression_11 PLUS_PLUS
    (115) expression_11 -> . expression_11 OPEN_CONCHETE expression_11 CLOSE_CONCHETE
    (116) expression_11 -> . OPEN_PARENTHESES expression CLOSE_PARENTHESES
    (117) expression_11 -> . expression_12
    (118) expression_12 -> . ID
    (119) expression_12 -> . STRING_LITERAL
    (120) expression_12 -> . NUMBER
    (121) expression_12 -> . BOOL
    (122) expression_12 -> . ID OPEN_PARENTHESES normalFormalParameter CLOSE_PARENTHESES

    OPEN_KEYS       shift and go to state 12
    FOR             shift and go to state 35
    WHILE           shift and go to state 37
    IF              shift and go to state 38
    BREAK           shift and go to state 39
    CONTINUE        shift and go to state 40
    POINT_COMMA     shift and go to state 34
    RETURN          shift and go to state 41
    VOID            shift and go to state 5
    STRING          shift and go to state 6
    BOOL            shift and go to state 42
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    VAR             shift and go to state 10
    MINUS           shift and go to state 53
    PLUS_PLUS       shift and go to state 55
    MINUS_MINUS     shift and go to state 56
    INVERT          shift and go to state 57
    OPEN_PARENTHESES shift and go to state 36
    ID              shift and go to state 32
    STRING_LITERAL  shift and go to state 60
    NUMBER          shift and go to state 61

    expression                     shift and go to state 33
    body                           shift and go to state 200
    statement                      shift and go to state 201
    localVariableDeclaration       shift and go to state 23
    forStatement                   shift and go to state 24
    whileStatement                 shift and go to state 25
    ifStatement                    shift and go to state 26
    breakStatement                 shift and go to state 27
    continueStatement              shift and go to state 28
    returnStatement                shift and go to state 29
    expressionStatement            shift and go to state 30
    type                           shift and go to state 31
    expression_0                   shift and go to state 43
    expression_1                   shift and go to state 44
    expression_2                   shift and go to state 45
    expression_3                   shift and go to state 46
    expression_4                   shift and go to state 47
    expression_5                   shift and go to state 48
    expression_6                   shift and go to state 49
    expression_7                   shift and go to state 50
    expression_8                   shift and go to state 51
    expression_9                   shift and go to state 52
    expression_10                  shift and go to state 54
    expression_11                  shift and go to state 58
    expression_12                  shift and go to state 59

state 195

    (6) p_initializedIdentifierList_estrela -> COMMA ID EQUAL expression .
    (7) p_initializedIdentifierList_estrela -> COMMA ID EQUAL expression . p_initializedIdentifierList_estrela
    (73) expression -> expression . EQUAL expression_0
    (74) expression -> expression . PLUS_EQUAL expression_0
    (75) expression -> expression . MINUS_EQUAL expression_0
    (76) expression -> expression . MULTIPLICATION_DIVISION expression_0
    (77) expression -> expression . DIVIDE_EQUAL expression_0
    (6) p_initializedIdentifierList_estrela -> . COMMA ID EQUAL expression
    (7) p_initializedIdentifierList_estrela -> . COMMA ID EQUAL expression p_initializedIdentifierList_estrela

    POINT_V         reduce using rule 6 (p_initializedIdentifierList_estrela -> COMMA ID EQUAL expression .)
    EQUAL           shift and go to state 74
    PLUS_EQUAL      shift and go to state 75
    MINUS_EQUAL     shift and go to state 76
    MULTIPLICATION_DIVISION shift and go to state 77
    DIVIDE_EQUAL    shift and go to state 78
    COMMA           shift and go to state 158

    p_initializedIdentifierList_estrela shift and go to state 202

state 196

    (39) localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .

    CLOSE_KEYS      reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    OPEN_KEYS       reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    FOR             reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    WHILE           reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    IF              reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    BREAK           reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    CONTINUE        reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    POINT_COMMA     reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    RETURN          reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    VOID            reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    STRING          reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    BOOL            reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    INT             reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    FLOAT           reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    VAR             reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    MINUS           reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    PLUS_PLUS       reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    MINUS_MINUS     reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    INVERT          reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    OPEN_PARENTHESES reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    ID              reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    STRING_LITERAL  reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    NUMBER          reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)
    ELSE            reduce using rule 39 (localVariableDeclaration -> type ID EQUAL expression COMMA ID POINT_COMMA .)


state 197

    (43) expression_one_equal -> COMMA ID EQUAL expression expression_one_equal .

    POINT_COMMA     reduce using rule 43 (expression_one_equal -> COMMA ID EQUAL expression expression_one_equal .)


state 198

    (61) ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .

    CLOSE_KEYS      reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    OPEN_KEYS       reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    FOR             reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    WHILE           reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    IF              reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    BREAK           reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    CONTINUE        reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    POINT_COMMA     reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    RETURN          reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    VOID            reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    STRING          reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    BOOL            reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    INT             reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    FLOAT           reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    VAR             reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    MINUS           reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    PLUS_PLUS       reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    MINUS_MINUS     reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    INVERT          reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    OPEN_PARENTHESES reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    ID              reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    STRING_LITERAL  reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    NUMBER          reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)
    ELSE            reduce using rule 61 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE statement .)


state 199

    (63) ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .
    (28) statement -> body .

  ! reduce/reduce conflict for CLOSE_KEYS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for OPEN_KEYS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for FOR resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for WHILE resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for IF resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for BREAK resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for POINT_COMMA resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for RETURN resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for VOID resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for STRING resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for BOOL resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for INT resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for FLOAT resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for VAR resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for MINUS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for PLUS_PLUS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for MINUS_MINUS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for INVERT resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for OPEN_PARENTHESES resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for ID resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for STRING_LITERAL resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for NUMBER resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for ELSE resolved using rule 28 (statement -> body .)
    CLOSE_KEYS      reduce using rule 28 (statement -> body .)
    OPEN_KEYS       reduce using rule 28 (statement -> body .)
    FOR             reduce using rule 28 (statement -> body .)
    WHILE           reduce using rule 28 (statement -> body .)
    IF              reduce using rule 28 (statement -> body .)
    BREAK           reduce using rule 28 (statement -> body .)
    CONTINUE        reduce using rule 28 (statement -> body .)
    POINT_COMMA     reduce using rule 28 (statement -> body .)
    RETURN          reduce using rule 28 (statement -> body .)
    VOID            reduce using rule 28 (statement -> body .)
    STRING          reduce using rule 28 (statement -> body .)
    BOOL            reduce using rule 28 (statement -> body .)
    INT             reduce using rule 28 (statement -> body .)
    FLOAT           reduce using rule 28 (statement -> body .)
    VAR             reduce using rule 28 (statement -> body .)
    MINUS           reduce using rule 28 (statement -> body .)
    PLUS_PLUS       reduce using rule 28 (statement -> body .)
    MINUS_MINUS     reduce using rule 28 (statement -> body .)
    INVERT          reduce using rule 28 (statement -> body .)
    OPEN_PARENTHESES reduce using rule 28 (statement -> body .)
    ID              reduce using rule 28 (statement -> body .)
    STRING_LITERAL  reduce using rule 28 (statement -> body .)
    NUMBER          reduce using rule 28 (statement -> body .)
    ELSE            reduce using rule 28 (statement -> body .)

  ! CLOSE_KEYS      [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! OPEN_KEYS       [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! FOR             [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! WHILE           [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! IF              [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! BREAK           [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! CONTINUE        [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! POINT_COMMA     [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! RETURN          [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! VOID            [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! STRING          [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! BOOL            [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! INT             [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! FLOAT           [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! VAR             [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! MINUS           [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! PLUS_PLUS       [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! MINUS_MINUS     [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! INVERT          [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! OPEN_PARENTHESES [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! ID              [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! STRING_LITERAL  [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! NUMBER          [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]
  ! ELSE            [ reduce using rule 63 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body .) ]


state 200

    (62) ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .
    (28) statement -> body .

  ! reduce/reduce conflict for CLOSE_KEYS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for OPEN_KEYS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for FOR resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for WHILE resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for IF resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for BREAK resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for POINT_COMMA resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for RETURN resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for VOID resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for STRING resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for BOOL resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for INT resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for FLOAT resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for VAR resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for MINUS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for PLUS_PLUS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for MINUS_MINUS resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for INVERT resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for OPEN_PARENTHESES resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for ID resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for STRING_LITERAL resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for NUMBER resolved using rule 28 (statement -> body .)
  ! reduce/reduce conflict for ELSE resolved using rule 28 (statement -> body .)
    CLOSE_KEYS      reduce using rule 28 (statement -> body .)
    OPEN_KEYS       reduce using rule 28 (statement -> body .)
    FOR             reduce using rule 28 (statement -> body .)
    WHILE           reduce using rule 28 (statement -> body .)
    IF              reduce using rule 28 (statement -> body .)
    BREAK           reduce using rule 28 (statement -> body .)
    CONTINUE        reduce using rule 28 (statement -> body .)
    POINT_COMMA     reduce using rule 28 (statement -> body .)
    RETURN          reduce using rule 28 (statement -> body .)
    VOID            reduce using rule 28 (statement -> body .)
    STRING          reduce using rule 28 (statement -> body .)
    BOOL            reduce using rule 28 (statement -> body .)
    INT             reduce using rule 28 (statement -> body .)
    FLOAT           reduce using rule 28 (statement -> body .)
    VAR             reduce using rule 28 (statement -> body .)
    MINUS           reduce using rule 28 (statement -> body .)
    PLUS_PLUS       reduce using rule 28 (statement -> body .)
    MINUS_MINUS     reduce using rule 28 (statement -> body .)
    INVERT          reduce using rule 28 (statement -> body .)
    OPEN_PARENTHESES reduce using rule 28 (statement -> body .)
    ID              reduce using rule 28 (statement -> body .)
    STRING_LITERAL  reduce using rule 28 (statement -> body .)
    NUMBER          reduce using rule 28 (statement -> body .)
    ELSE            reduce using rule 28 (statement -> body .)

  ! CLOSE_KEYS      [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! OPEN_KEYS       [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! FOR             [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! WHILE           [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! IF              [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! BREAK           [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! CONTINUE        [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! POINT_COMMA     [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! RETURN          [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! VOID            [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! STRING          [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! BOOL            [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! INT             [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! FLOAT           [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! VAR             [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! MINUS           [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! PLUS_PLUS       [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! MINUS_MINUS     [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! INVERT          [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! OPEN_PARENTHESES [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! ID              [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! STRING_LITERAL  [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! NUMBER          [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]
  ! ELSE            [ reduce using rule 62 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body .) ]


state 201

    (66) ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .

    CLOSE_KEYS      reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    OPEN_KEYS       reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    FOR             reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    WHILE           reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    IF              reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    BREAK           reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    CONTINUE        reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    POINT_COMMA     reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    RETURN          reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    VOID            reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    STRING          reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    BOOL            reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    INT             reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    FLOAT           reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    VAR             reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    MINUS           reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    PLUS_PLUS       reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    MINUS_MINUS     reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    INVERT          reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    OPEN_PARENTHESES reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    ID              reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    STRING_LITERAL  reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    NUMBER          reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)
    ELSE            reduce using rule 66 (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE statement .)


state 202

    (7) p_initializedIdentifierList_estrela -> COMMA ID EQUAL expression p_initializedIdentifierList_estrela .

    POINT_V         reduce using rule 7 (p_initializedIdentifierList_estrela -> COMMA ID EQUAL expression p_initializedIdentifierList_estrela .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EQUAL_EQUAL in state 46 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 46 resolved as shift
WARNING: shift/reduce conflict for EQUAL_EQUAL in state 139 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 139 resolved as shift
WARNING: shift/reduce conflict for EQUAL_EQUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 140 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 160 resolved as shift
WARNING: shift/reduce conflict for POINT_COMMA in state 163 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 185 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 186 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 186 resolved as shift
WARNING: shift/reduce conflict for POINT_COMMA in state 189 resolved as shift
WARNING: reduce/reduce conflict in state 180 resolved using rule (statement -> body)
WARNING: rejected rule (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body) in state 180
WARNING: reduce/reduce conflict in state 184 resolved using rule (statement -> body)
WARNING: rejected rule (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body) in state 184
WARNING: reduce/reduce conflict in state 186 resolved using rule (statement -> body)
WARNING: rejected rule (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body) in state 186
WARNING: reduce/reduce conflict in state 199 resolved using rule (statement -> body)
WARNING: rejected rule (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body) in state 199
WARNING: reduce/reduce conflict in state 200 resolved using rule (statement -> body)
WARNING: rejected rule (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body) in state 200
WARNING: Rule (forStatement -> FOR OPEN_PARENTHESES forLoopParts CLOSE_PARENTHESES body) is never reduced
WARNING: Rule (whileStatement -> WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES body) is never reduced
WARNING: Rule (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body) is never reduced
WARNING: Rule (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES statement ELSE body) is never reduced
WARNING: Rule (ifStatement -> IF OPEN_PARENTHESES expression CLOSE_PARENTHESES body ELSE body) is never reduced
